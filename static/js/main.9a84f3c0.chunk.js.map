{"version":3,"sources":["ScheduleDisplay.js","SpecialWeekTodos.js","App.js","index.js"],"names":["ScheduleDisplay","scheduleData","setScheduleData","useState","useEffect","groupedSchedule","day","start_time","end_time","event","location","reduce","acc","push","processedSchedule","Object","entries","map","_ref","events","getBlockColor","Team Work","Lunch","Gouter","Interviews & Box Lunch","Keynote","Hackathon","Pitch Event","React","createElement","className","_ref2","key","index","positionStyle","startTime","endTime","isHackathon","arguments","length","undefined","timeToMinutes","time","hours","minutes","split","Number","start","duration","height","top","Math","max","calculateHeight","style","getUniqueNames","tasks","names","Set","forEach","task","who","name","add","trim","cc","sort","SpecialWeekTodos","setTasks","schedule","setSchedule","filter","setFilter","setNames","showSchedule","setShowSchedule","scheduleRef","useRef","generatePDF","async","e","preventDefault","element","current","opt","margin","filename","image","type","quality","html2canvas","scale","jsPDF","unit","format","orientation","html2pdf","set","from","save","error","console","response","fetch","process","text","Papa","parse","header","skipEmptyLines","delimiter","complete","result","formattedTasks","data","due_date","formatDate","a","b","Date","fetchTasks","formattedSchedule","row","date","end","formattedDate","find","blocks","fetchSchedule","dateStr","toLocaleDateString","year","month","filteredTasks","status","isAssigned","includes","isCCd","src","alt","onClick","id","href","stopPropagation","ref","todo","disabled","checked","description","join","notes","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9a84f3c0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './index.css';\nimport './SpecialWeek.css';\n\nconst ScheduleDisplay = () => {\n  const [scheduleData, setScheduleData] = useState([]);\n\n  useEffect(() => {\n    // Directly create the data structure\n    const rawData = [\n      { day: 'Tuesday', start_time: '08:40', end_time: '10:10', event: 'Presentation: Introduction & Planning', location: 'Auditoire' },\n      { day: 'Tuesday', start_time: '10:15', end_time: '10:45', event: 'Gouter', location: 'on-site' },\n      { day: 'Tuesday', start_time: '10:45', end_time: '11:15', event: 'Presentation: Problem Framing', location: 'Auditoire' },\n      { day: 'Tuesday', start_time: '11:15', end_time: '12:00', event: 'Team Work', location: 'on-site' },\n      { day: 'Tuesday', start_time: '12:00', end_time: '13:00', event: 'Lunch', location: 'Rosey cafeteria' },\n      { day: 'Tuesday', start_time: '13:00', end_time: '13:30', event: 'Presentation: User Feedback', location: 'Auditoire' },\n      { day: 'Tuesday', start_time: '13:30', end_time: '15:30', event: 'Team Work', location: 'on-site' },\n      { day: 'Wednesday', start_time: '08:40', end_time: '13:00', event: 'Interviews & Box Lunch', location: 'off-site' },\n      { day: 'Wednesday', start_time: '13:00', end_time: '13:45', event: 'Team Presentations: Problem Identification', location: 'on-site' },\n      { day: 'Wednesday', start_time: '13:45', end_time: '14:15', event: 'Presentation: Developing Solutions', location: 'Auditoire' },\n      { day: 'Wednesday', start_time: '14:15', end_time: '15:30', event: 'Team Work', location: 'on-site' },\n      { day: 'Thursday', start_time: '08:40', end_time: '09:10', event: 'Presentation: Solution Ideation & Prototyping', location: 'on-site' },\n      { day: 'Thursday', start_time: '09:10', end_time: '10:10', event: 'Team Work', location: 'on-site' },  \n      { day: 'Thursday', start_time: '10:15', end_time: '10:45', event: 'Gouter', location: 'on-site' },\n      { day: 'Thursday', start_time: '10:30', end_time: '12:00', event: 'Team Work', location: 'on-site' },\n      { day: 'Thursday', start_time: '12:00', end_time: '12:30', event: 'Presentation: Assessing Pitches', location: 'Auditoire' },\n      { day: 'Thursday', start_time: '12:30', end_time: '13:30', event: 'Lunch', location: 'Rosey cafeteria' },\n      { day: 'Thursday', start_time: '13:30', end_time: '16:30', event: 'Interviews', location: 'off-site' },\n      { day: 'Thursday', start_time: '16:30', end_time: '22:00', event: 'Hackathon', location: 'on-site' },\n      { day: 'Friday', start_time: '08:40', end_time: '09:10', event: 'Presentation: Pitch Development', location: 'Auditoire' },\n      { day: 'Friday', start_time: '09:10', end_time: '10:15', event: 'Team Work', location: 'on-site' },\n      { day: 'Friday', start_time: '10:15', end_time: '10:45', event: 'Gouter', location: 'on-site' },\n      { day: 'Friday', start_time: '10:45', end_time: '14:00', event: 'Team Work & Box Lunch', location: 'on-site' },\n      { day: 'Friday', start_time: '14:00', end_time: '16:00', event: 'Pitch Event', location: 'Auditoire' }\n    ];\n\n    // Group by day\n    const groupedSchedule = rawData.reduce((acc, event) => {\n      if (!acc[event.day]) {\n        acc[event.day] = [];\n      }\n      acc[event.day].push(event);\n      return acc;\n    }, {});\n\n    // Convert to array \n    const processedSchedule = Object.entries(groupedSchedule)\n      .map(([day, events]) => ({ day, events }));\n\n    setScheduleData(processedSchedule);\n  }, []);\n\n  // Color mapping function\n  const getBlockColor = (event) => {\n    const colorMap = {\n      'Team Work': 'blue',\n      'Lunch': 'yellow',\n      'Gouter': 'yellow',\n      'Interviews & Box Lunch': 'green',\n      'Keynote': 'blue',\n      'Hackathon': 'red',\n      'Pitch Event': 'pitch-event'\n    };\n    return colorMap[event] || 'lightyellow';\n  };\n\n  // Convert time to pixel height with improved scaling\n  const calculateHeight = (startTime, endTime, isHackathon = false) => {\n    const timeToMinutes = (time) => {\n      const [hours, minutes] = time.split(':').map(Number);\n      return hours * 60 + minutes;\n    };\n\n    const start = timeToMinutes(startTime);\n    const end = timeToMinutes(endTime);\n    const duration = end - start;\n\n    // Special case for Hackathon - don't resize\n    if (isHackathon) {\n      return {\n        height: '3.5rem',\n        top: `${((start - 8.5 * 60) / 15) * 2}px`\n      };\n    }\n\n    // Base height for 30-minute blocks\n    const baseHeight = 25;\n    // Calculate height based on duration\n    const calculatedHeight = Math.max(\n      baseHeight,\n      (duration / 30) * baseHeight\n    );\n\n    return {\n      height: `${calculatedHeight}px`,\n      top: `${((start - 8.5 * 60) / 15) * 2}px`\n    };\n  };\n\n  return (\n    <div className=\"schedule-container\">\n      {scheduleData.map(({ day, events }) => (\n        <div key={day} className=\"schedule-day\">\n          <div className=\"schedule-day-name\">{day}</div>\n          <div className=\"schedule-bars\">\n            {events.map((event, index) => {\n              const positionStyle = calculateHeight(\n                event.start_time, \n                event.end_time, \n                event.event === 'Hackathon'\n              );\n              return (\n                <div \n                  key={index} \n                  className={`schedule-block ${getBlockColor(event.event)}`}\n                  style={positionStyle}\n                >\n                  <div className=\"block-content\">\n                    <div className=\"event-name\">\n                      {event.start_time} - {event.end_time} <strong>{event.event}</strong>\n                    </div>\n                    <div className=\"event-location\">{event.location}</div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ScheduleDisplay;","import React, { useState, useEffect, useRef } from \"react\";\nimport Papa from \"papaparse\";\nimport ScheduleDisplay from \"./ScheduleDisplay\";\nimport html2pdf from 'html2pdf.js';\n\n// Helper function to extract unique names from the 'who' and 'cc' fields\nconst getUniqueNames = (tasks) => {\n  const names = new Set();\n  tasks.forEach((task) => {\n    if (task.who) {\n      task.who.forEach((name) => names.add(name.trim()));\n    }\n    if (task.cc) {\n      task.cc.split(\";\").forEach((name) => names.add(name.trim()));\n    }\n  });\n  return [...names].sort(); // Sort names alphabetically\n};\n\nexport default function SpecialWeekTodos() {\n  const [tasks, setTasks] = useState([]);\n  const [schedule, setSchedule] = useState([]);\n  const [filter, setFilter] = useState(null);\n  const [names, setNames] = useState([]);\n  const [showSchedule, setShowSchedule] = useState(false);\n  const scheduleRef = useRef(null);\n\n  const generatePDF = async (e) => {\n    e.preventDefault();\n    try {\n      const element = scheduleRef.current;\n      const opt = {\n        margin: 1,\n        filename: 'special-week-schedule.pdf',\n        image: { type: 'jpeg', quality: 0.98 },\n        html2canvas: { scale: 2 },\n        jsPDF: { unit: 'in', format: 'a4', orientation: 'landscape' }\n      };\n      await html2pdf().set(opt).from(element).save();\n    } catch (error) {\n      console.error('Error generating PDF:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Fetch and parse tasks CSV\n    async function fetchTasks() {\n      const response = await fetch(process.env.PUBLIC_URL + \"/tasks.csv\");\n      const text = await response.text();\n      Papa.parse(text, {\n        header: true,\n        skipEmptyLines: true,\n        delimiter: \",\",\n        complete: (result) => {\n          const formattedTasks = result.data.map((task) => ({\n            ...task,\n            who: task.who.split(\";\"),\n            due_date: formatDate(task.due_date),\n          }));\n          setTasks(formattedTasks.sort((a, b) => new Date(a.due_date) - new Date(b.due_date)));\n          setNames(getUniqueNames(formattedTasks));\n        },\n      });\n    }\n\n    // Fetch and parse schedule CSV\n    async function fetchSchedule() {\n      const response = await fetch(process.env.PUBLIC_URL + \"/schedule.csv\");\n      const text = await response.text();\n      Papa.parse(text, {\n        header: true,\n        skipEmptyLines: true,\n        delimiter: \",\",\n        complete: (result) => {\n          const formattedSchedule = result.data.reduce((acc, row) => {\n            const { date, time, start, end, event, location } = row;\n            const formattedDate = formatDate(date);\n            let day = acc.find((day) => day.date === formattedDate);\n            if (!day) {\n              day = { date: formattedDate, blocks: [] };\n              acc.push(day);\n            }\n            day.blocks.push({ time, start, end, event, location });\n            return acc;\n          }, []);\n          setSchedule(formattedSchedule);\n        },\n      });\n    }\n\n    fetchTasks();\n    fetchSchedule();\n  }, []);\n\n  // Helper function to format dates\n  const formatDate = (dateStr) => {\n    const date = new Date(dateStr);\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return date.toLocaleDateString('en-GB', options);\n  };\n\n  // Filter tasks based on the selected filter and special conditions\n  const filteredTasks = tasks.filter((task) => {\n    // Special case for done status tasks - only show for Laura\n    if (task.status === 'done' && filter !== 'Laura') {\n      return false;\n    }\n\n    // If no filter is selected, show all tasks except done status\n    if (!filter) {\n      return task.status !== 'done';\n    }\n\n    // Check if the task is assigned to or CC'd to the selected person\n    const isAssigned = task.who.includes(filter);\n    const isCCd = task.cc && task.cc.split(';').includes(filter);\n    return isAssigned || isCCd;\n  });\n\n  return (\n    <div className=\"p-4 max-w-7xl mx-auto\">\n      <div className=\"header-container\">\n        <img \n          src={process.env.PUBLIC_URL + \"/rosey-lineaire-quadri.png\"} \n          alt=\"Special Week Logo\" \n          className=\"header-image\"\n        />\n        <h1>Special Week 2025 - Schedule and To-Dos</h1>\n      </div>\n\n      {/* Schedule block */}\n      <div className=\"section-header\">\n        <h2>Schedule</h2>\n        <button \n          className=\"hide-calendar-btn\"\n          onClick={() => setShowSchedule(!showSchedule)}\n        >\n          {showSchedule ? 'Hide Schedule' : 'Show Schedule'}\n        </button>\n      </div>\n      <div>\n      <h4 id=\"schedule\">\n        Clicking the \"Show Schedule\" button will open up the daily schedule, starting on Tuesday the 13th of May and finishing Friday the 16th of May in the afternoon. If you want a pdf version of the schedule, <a href=\"#\" onClick={generatePDF} className=\"calendar-link\">click here</a>.\n      </h4>\n      </div>\n      {showSchedule && (\n        <div className=\"modal-overlay\" onClick={() => setShowSchedule(false)}>\n          <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n            <button className=\"modal-close\" onClick={() => setShowSchedule(false)}>×</button>\n            <div className=\"modal-header\">\n              <h2>Special Week Schedule</h2>\n              <button \n                className=\"download-pdf-btn\"\n                onClick={generatePDF}\n              >\n                Download PDF\n              </button>\n            </div>\n            <div id=\"schedule-block\" className=\"my-6\" ref={scheduleRef}>\n              <ScheduleDisplay schedule={schedule} />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Dynamic Filter buttons */}\n      <div className=\"section-header\">\n        <h2>To-dos</h2>\n      </div>\n      <div>\n      <h4 id=\"todos\">\n        Here is where I need your help 😊. By clicking on the button that shows your name,\n        you'll see the information that is relevant for you - either because your feedback is needed (if your name is in the 👤 section), or on an FYI\n        basis (📢).\n      </h4>\n      </div>\n      <div className=\"mb-4\">\n        <button \n          className={`filter-button ${!filter ? 'active' : ''}`}\n          onClick={() => setFilter(null)}\n        >\n          All\n        </button>\n        {names.map((name) => (\n          <button\n            key={name}\n            className={`filter-button ${filter === name ? 'active' : ''}`}\n            onClick={() => setFilter(name)}\n          >\n            {name}\n          </button>\n        ))}\n      </div>\n\n      {/* Todo list in grid layout */}\n      <div className=\"todo-grid\">\n        {filteredTasks.map((todo) => (\n          <li key={todo.id} className=\"p-4 bg-white shadow-md rounded-lg border border-gray-200\">\n            <div className=\"flex items-center\">\n              <input\n                disabled\n                className=\"mr-3 h-5 w-5 text-blue-500 border-gray-300 rounded\"\n                type=\"checkbox\"\n                checked={todo.status === \"done\"}\n              />\n              <span className={`font-semibold text-lg ${todo.status === \"done\" ? \"line-through text-gray-400\" : \"text-gray-900\"}`}>\n                {todo.description}\n              </span>\n            </div>\n            <div className=\"mt-2 ml-8 text-gray-700 text-sm space-y-1\">\n              {filter === 'Laura' && (\n                <div className=\"todo-detail\">\n                  <span className=\"font-semibold text-gray-900\">📅</span> {todo.due_date}\n                </div>\n              )}\n              <div className=\"todo-detail\">\n                <span className=\"font-semibold text-gray-900\">👤</span> \n                {todo.who ? todo.who.join(\", \") : \"\"}\n              </div>\n              {todo.cc && (\n                <div className=\"todo-detail\">\n                  <span className=\"font-semibold text-gray-900\">📢 </span> {todo.cc ? todo.cc.split(\";\").join(\", \") : \"\"}\n                </div>\n              )}\n              {todo.notes && <div className=\"todo-detail italic text-gray-600\">📝 {todo.notes}</div>}\n            </div>\n          </li>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport SpecialWeekTodos from \"./SpecialWeekTodos\"; // Import the SpecialWeekTodos component\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div>\n      {/* Special Week Todos Component */}\n      <SpecialWeekTodos />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport './index.css';  //\nimport './SpecialWeek.css';  //\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}