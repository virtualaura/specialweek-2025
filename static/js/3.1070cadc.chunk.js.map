{"version":3,"sources":["../node_modules/canvg/lib/index.es.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/raf/index.js","../node_modules/performance-now/lib/performance-now.js","../node_modules/rgbcolor/index.js","../node_modules/svg-pathdata/lib/SVGPathData.module.js","../node_modules/stackblur-canvas/dist/stackblur-es.js"],"names":["__webpack_require__","r","__webpack_exports__","process","d","AElement","AnimateColorElement","AnimateElement","AnimateTransformElement","BoundingBox","CB1","CB2","CB3","CB4","Canvg","CircleElement","ClipPathElement","DefsElement","DescElement","Document","Element","EllipseElement","FeColorMatrixElement","FeCompositeElement","FeDropShadowElement","FeGaussianBlurElement","FeMorphologyElement","FilterElement","Font","FontElement","FontFaceElement","GElement","GlyphElement","GradientElement","ImageElement","LineElement","LinearGradientElement","MarkerElement","MaskElement","Matrix","MissingGlyphElement","Mouse","PSEUDO_ZERO","Parser","PathElement","PathParser","PatternElement","Point","PolygonElement","PolylineElement","Property","QB1","QB2","QB3","RadialGradientElement","RectElement","RenderedElement","Rotate","SVGElement","SVGFontLoader","Scale","Screen","Skew","SkewX","SkewY","StopElement","StyleElement","SymbolElement","TRefElement","TSpanElement","TextElement","TextPathElement","TitleElement","Transform","Translate","UnknownElement","UseElement","ViewPort","compressSpaces","getSelectorSpecificity","normalizeAttributeName","normalizeColor","parseExternalUrl","index","toNumbers","trimLeft","trimRight","vectorMagnitude","vectorsAngle","vectorsRatio","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default","n","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","raf__WEBPACK_IMPORTED_MODULE_2__","raf__WEBPACK_IMPORTED_MODULE_2___default","rgbcolor__WEBPACK_IMPORTED_MODULE_3__","rgbcolor__WEBPACK_IMPORTED_MODULE_3___default","svg_pathdata__WEBPACK_IMPORTED_MODULE_4__","stackblur_canvas__WEBPACK_IMPORTED_MODULE_5__","Object","freeze","__proto__","offscreen","DOMParser","DOMParserFallback","arguments","length","undefined","preset","window","ignoreAnimation","ignoreMouse","createCanvas","width","height","OffscreenCanvas","createImage","url","response","fetch","blob","createImageBitmap","Reflect","deleteProperty","node","_ref","canvas","loadImage","str","replace","match","map","parseFloat","allUppercase","name","test","toLowerCase","urlMatch","exec","color","startsWith","rgbParts","num","isFloat","String","Math","round","attributeRegex","idRegex","classRegex","pseudoElementRegex","pseudoClassWithBracketsRegex","pseudoClassRegex","elementRegex","findSelectorMatch","selector","regex","matches","specificity","currentSelector","delta","join","v","sqrt","pow","u","acos","t","[object Object]","document","value","this","isNormalizedColor","separator","getString","trim","split","zeroIsValue","regexp","result","isString","hasValue","asString","endsWith","def","rootEmSize","emSize","axisOrIsFontSize","processPercent","axis","isFontSize","viewPort","screen","getNumber","min","computeSize","max","getRem","getEm","getDpi","PI","definitions","element","opacity","getDefinition","createGradient","ctx","createPattern","getHrefAttribute","patternTransform","getAttribute","setValue","textBaselineMapping","getColor","len","commas","i","a","ok","alpha","toRGBA","baseline","before-edge","text-before-edge","middle","central","after-edge","text-after-edge","ideographic","alphabetic","hanging","mathematical","viewPorts","push","pop","getCurrent","x","y","point","defaultValue","scale","path","points","pathPoints","atan2","transform","xp","yp","working","events","eventElements","onClick","bind","onMouseMove","onclick","onmousemove","style","cursor","forEach","run","parent","_ref2","isPointInPath","boundingBox","_ref3","isPointInBox","offsetLeft","offsetTop","offsetParent","scrollX","scrollY","event","mapXY","clientX","clientY","type","eventTarget","defaultWindow","defaultFetch$1","FRAMERATE","MAX_VIRTUAL_PIXELS","CLIENT_WIDTH","CLIENT_HEIGHT","mouse","animations","waits","frameDuration","isReadyLock","isFirstRender","intervalId","checker","readyPromise","Promise","resolve","every","_","resolveReady","strokeStyle","lineCap","lineJoin","miterLimit","aspectRatio","desiredWidth","desiredHeight","minX","minY","refX","refY","clip","clipX","clipY","cleanAspectRatio","aspectRatioAlign","aspectRatioMeetOrSlice","align","meetOrSlice","scaleX","scaleY","scaleMin","scaleMax","finalDesiredWidth","finalDesiredHeight","refXProp","refYProp","hasRefs","translate","getPixels","scaledClipX","scaledClipY","beginPath","moveTo","lineTo","closePath","isMeetMinY","isSliceMaxY","isMeetMinX","isSliceMaxX","enableRedraw","ignoreDimensions","ignoreClear","forceRedraw","scaleWidth","scaleHeight","offsetX","offsetY","isReady","render","now","Date","then","tick","shouldUpdate","runEvents","start","cancel","stop","reduce","animation","update","hasEvents","clear","setCurrent","widthStyle","getStyle","heightStyle","concat","cWidth","clientWidth","cHeight","clientHeight","viewBox","xRatio","yRatio","_widthStyle","isNaN","_heightStyle","transformStyle","clearRect","defaultFetch","DefaultDOMParser","resource","_this","parseFromString","load","xml","parser","checkDocument","err","parserError","getElementsByTagName","Error","textContent","_this2","text","parse","applyTransform","rotate","transformOrigin","angle","originX","originY","cx","cy","numbers","tx","ty","getRadians","rad","cos","sin","scaleSize","parseScale","matrix","b","c","e","f","det","skew","super","tan","transforms","parseTransforms","parseTransform","TransformType","transformTypes","transformOriginXProperty","transformOriginYProperty","apply","unapply","applyToPoint","skewX","skewY","captureTextNodes","attributes","create","styles","stylesSpecificity","animationFrozen","animationFrozenValue","children","nodeType","Array","from","attribute","nodeName","addStylesFromStyleDefinition","id","childNodes","childNode","addChild","textNode","createTextNode","getText","createIfNotExists","attr","_attr","empty","key","skipAncestors","parentStyle","_style","save","mask","applyEffects","getValue","filter","setContext","renderChildren","clearContext","restore","fromElement","clipPathStyleProp","child","createElement","ignoreChildTypes","includes","_node$getAttribute","styleClasses","call","some","styleClass","matchesSelector","existingSpecificity","ignoreStyles","toRestore","styleProp","_this$parent","indexOf","wrapFontFamily","fontFamily","trimmed","prepareFontStyle","fontStyle","targetFontStyle","prepareFontWeight","fontWeight","targetFontWeight","fontVariant","fontSize","inherit","inheritFont","font","parts","set","part","variants","weights","x1","Number","NaN","y1","x2","y2","addPoint","p0","p1","p2","p3","forX","b2ac","t1","addX","sumCubic","addY","t2","p0x","p0y","p1x","p1y","p2x","p2y","p3x","p3y","bezierCurveAdd","cp1x","cp1y","cp2x","cp2y","addBezierCurve","control","current","command","commands","previousCommand","angles","xProp","yProp","makeAbsolute","getPoint","CURVE_TO","SMOOTH_CURVE_TO","QUAD_TO","SMOOTH_QUAD_TO","ox","oy","relative","priorTo","angleTo","addMarkerAngle","j","modifiedEmSizeStack","opacityStyle","fromMeasure","fillStyleProp","fillOpacityStyleProp","strokeStyleProp","strokeOpacityProp","isUrlDefinition","fillStyle","getFillStyleDefinition","_fillStyle","_fillStyle2","addOpacity","_strokeStyle","_strokeStyle2","strokeWidthStyleProp","newLineWidth","lineWidth","strokeLinecapStyleProp","strokeLinejoinStyleProp","strokeMiterlimitProp","strokeDasharrayStyleProp","strokeDashoffsetProp","gaps","setLineDash","webkitLineDash","mozDash","offset","lineDashOffset","webkitLineDashOffset","mozDashOffset","fontStyleProp","fontStyleStyleProp","fontVariantStyleProp","fontWeightStyleProp","fontSizeStyleProp","fontFamilyStyleProp","toString","isPixels","globalAlpha","calculateOpacity","popEmSize","pathParser","reset","isEnd","next","MOVE_TO","pathM","LINE_TO","pathL","HORIZ_LINE_TO","pathH","VERT_LINE_TO","pathV","pathC","pathS","pathQ","pathT","ARC","pathA","CLOSE_PATH","pathZ","getMarkerPoints","getMarkerAngles","checkPath","fillRuleStyleProp","fill","setTransform","stroke","markers","getMarkers","markersLastIndex","markerStartStyleProp","markerMidStyleProp","markerEndStyleProp","marker","_marker","_point","_angle","_marker2","_point2","_angle2","getAsCurrentPoint","addMarker","controlPoint","getAsControlPoint","currentPoint","bezierCurveTo","getReflectedControlPoint","addQuadraticCurve","quadraticCurveTo","rX","rY","xRot","lArcFlag","sweepFlag","xAxisRotation","currp","l","s","cpp","centp","a1","ad","dir","ah","halfWay","sx","sy","arc","Boolean","horizAdvX","unicode","arabicForm","measureCache","textBaseline","getTextBaseline","leafTexts","textChunkStart","POSITIVE_INFINITY","maxX","NEGATIVE_INFINITY","getTElementBoundingBox","initializeCoordinates","adjustChildCoordinatesRecursive","childBoundingBox","getChildBoundingBox","addBoundingBox","inheritFontSize","getFontSize","measureText","char","glyph","isArabic","prevChar","nextChar","glyphs","maybeGlyph","missingGlyph","parentNode","lastIndex","renderChild","isWorking","checkBoundingBox","getBoundingBox","renderTElementChildren","renderText","customFont","unitsPerEm","fontFace","ctxFont","isRTL","reverse","dx","getGlyph","lw","fillText","strokeText","firstElement","textAnchor","shift","adjustChildCoordinatesRecursiveCore","applyAnchoring","textParent","adjustChildCoordinates","xAttr","yAttr","dxAttr","dyAttr","getInheritedAttribute","measure","measureTargetText","targetText","_measure","isFirstChild","parentAttr","getTextFromNode","TextNode","root","_this$node$parentNode","setDefaults","getComputedStyle","getPropertyValue","fontSizeProp","refXAttr","refYAttr","viewBoxAttr","setViewBox","removeCurrent","preserveAspectRatio","widthAttr","heightAttr","styleAttr","originWidth","originHeight","preserveAspectRatioAttr","rxAttr","ryAttr","rx","ry","KAPPA","x0","y0","getPoints","parsePath","parentOpacityProp","patternSvg","patternCanvas","patternCtx","getContext","orient","markerUnits","markerSvg","overflow","attributesToInherit","stops","stopsContainer","inheritStopContainer","gradient","getGradient","addParentOpacity","addColorStop","rootView","rect","group","attributeToInherit","isBoundingBoxUnits","getGradientUnits","createLinearGradient","fx","fy","fr","createRadialGradient","stopOpacity","stopColor","duration","initialValue","initialUnits","removed","frozen","begin","getMilliseconds","maxDuration","to","values","valuesAttr","attributeType","attributeName","progress","getProgress","newValue","prop","getProperty","getUnits","updated","calcValue","typeAttr","p","lb","floor","ub","ceil","colorFrom","colorTo","g","transformFrom","transformTo","fontFamilyStyle","ascent","descent","firstChild","hasText","open","ownKeys$2","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","_objectSpread$2","target","source","getOwnPropertyDescriptors","defineProperties","defineProperty","textWidth","textHeight","pathLength","glyphInfo","letterSpacingCache","measuresCache","Map","pathElement","dataArray","parsePathData","theta","dTheta","psi","fs","setTextData","textDecoration","rotation","partialText","idx","anchor","textFullWidth","fullPathWidth","spacesNumber","inputOffset","dy","charI","glyphWidth","getLetterSpacingAt","splineStep","getEquidistantPointOnPath","segment","dyX","dyY","has","get","chars","thisSpacing","parentSpacing","letterSpacing","textLen","dxSum","acc","cur","getPathLength","startOffset","nextOffset","findSegmentToFitChar","pathCommands","startX","startY","nextCommandType","calcLength","commandType","getLineLength","getPointOnCubicBezier","getPointOnQuadraticBezier","end","inc","abs","getPointOnEllipticalArc","dist","fromX","fromY","m","rise","pt","ix","iy","pRise","pRun","distance","fullLen","cumulativePathLength","currentT","getPointOnLine","pct","p4x","p4y","cosPsi","sinPsi","inputStep","inputPrecision","precision","step","equidistantCache","getPointOnPath","targetDistance","buildEquidistantCache","dataUriRegex","loaded","href","isSvg","images","loadSvg","image","console","error","data","atob","decodeURIComponent","svg","subDocument","canvg","forkString","documentElement","_image","complete","drawImage","fonts","fontNode","cssParts","cssClasses","cssProps","cssClass","props","cssProp","substr","src","tempSvg","oldParent","cachedElement","imGet","img","_height","rgba","imSet","val","m1","m2","m3","includeOpacity","_x","_y","srcData","getImageData","nr","ng","nb","na","putImageData","ignoredStyles","removeStyles","maskCanvas","maskCtx","tmpCanvas","tmpCtx","globalCompositeOperation","fillRect","restoreStyles","noop","contextProto","getPrototypeOf","elementTransform","px","py","efd","extraFilterDistance","tmpCanvasWidth","tmpCanvasHeight","_width","blurRadius","body","getUniqueId","display","appendChild","removeChild","elements","circle","ellipse","line","polyline","polygon","pattern","defs","linearGradient","radialGradient","animate","animateColor","animateTransform","font-face","missing-glyph","tspan","tref","textPath","symbol","use","clipPath","feDropShadow","feMorphology","feComposite","feColorMatrix","feGaussianBlur","title","desc","ownKeys$1","_createImage","anonymousCrossOrigin","crossOrigin","reject","onload","onerror","_event","_source","_lineno","_colno","emSizeStack","uniqueId","bindCreateImage","wait","isImagesLoaded","isFontsLoaded","forceAnonymousCrossOrigin","elementType","ElementType","elementTypes","config","_objectSpread$1","ownKeys","_objectSpread","options","createDocumentElement","_arguments","svgDocument","fromString","ready","_arguments2","baseOptions","resize","asyncGeneratorStep","o","done","module","exports","_next","_throw","__esModule","toPropertyKey","configurable","writable","_typeof","toPrimitive","Symbol","TypeError","global","vendors","suffix","raf","caf","last","queue","callback","_now","setTimeout","cp","slice","cancelled","handle","fn","polyfill","requestAnimationFrame","cancelAnimationFrame","getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","performance","hr","uptime","getTime","color_string","charAt","simple_colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","color_defs","re","example","bits","parseInt","processor","channels","toRGB","toHex","getHelpXML","examples","sc","setAttribute","list_item","list_color","RGBColor","example_div","cssText","list_item_value","setPrototypeOf","prototype","hasOwnProperty","constructor","h","O","T","cX","cY","phi1","phi2","N","E","A","C","M","R","I","S","L","ROUND","TO_ABS","TO_REL","NORMALIZE_HVZ","NORMALIZE_ST","QT_TO_C","INFO","SANITIZE","LINE_COMMANDS","MATRIX","ROTATE","TRANSLATE","SCALE","SKEW_X","atan","SKEW_Y","X_AXIS_SYMMETRY","Y_AXIS_SYMMETRY","A_TO_C","H","ANNOTATE_ARCS","CLONE","CALCULATE_BOUNDS","maxY","DRAWING_COMMANDS","w","U","toAbs","toRel","normalizeHVZ","normalizeST","qtToC","aToC","sanitize","xSymmetry","ySymmetry","annotateArcs","charCodeAt","curNumber","curCommandType","curCommandRelative","canParseCommandOrComma","curNumberHasExp","curNumberHasExpDigits","curNumberHasDecimal","curArgs","finish","SyntaxError","isArray","encode","getBounds","obj","iterator","processCanvasRGBA","mulTable","shgTable","getImageDataFromCanvas","topX","topY","getElementById","context","radius","imageData","stackEnd","pixels","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","BlurStack","stack","stackIn","stackOut","yw","yi","mulSum","shgSum","pr","pg","pb","pa","_i","rInSum","gInSum","bInSum","aInSum","rOutSum","gOutSum","bOutSum","aOutSum","rSum","gSum","bSum","aSum","_i2","rbs","paInitial","_a2","_p","_stackOut","_r","_g","_b","_a","_pr","_pg","_pb","_pa","_rOutSum","_gOutSum","_bOutSum","_aOutSum","_rSum","_gSum","_bSum","_aSum","_i3","_gInSum","_bInSum","_aInSum","_rInSum","_i4","_rbs","_p2","processImageDataRGBA","instance","Constructor","_classCallCheck"],"mappings":"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","file":"static/js/3.1070cadc.chunk.js","sourcesContent":["import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport requestAnimationFrame from 'raf';\nimport RGBColor from 'rgbcolor';\nimport { SVGPathData } from 'svg-pathdata';\nimport { canvasRGBA } from 'stackblur-canvas';\n\n/**\r\n * Options preset for `OffscreenCanvas`.\r\n * @param config - Preset requirements.\r\n * @param config.DOMParser - XML/HTML parser from string into DOM Document.\r\n * @returns Preset object.\r\n */\nfunction offscreen() {\n  var {\n    DOMParser: DOMParserFallback\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var preset = {\n    window: null,\n    ignoreAnimation: true,\n    ignoreMouse: true,\n    DOMParser: DOMParserFallback,\n    createCanvas(width, height) {\n      return new OffscreenCanvas(width, height);\n    },\n    createImage(url) {\n      return _asyncToGenerator(function* () {\n        var response = yield fetch(url);\n        var blob = yield response.blob();\n        var img = yield createImageBitmap(blob);\n        return img;\n      })();\n    }\n  };\n  if (typeof DOMParser !== 'undefined' || typeof DOMParserFallback === 'undefined') {\n    Reflect.deleteProperty(preset, 'DOMParser');\n  }\n  return preset;\n}\n\n/**\r\n * Options preset for `node-canvas`.\r\n * @param config - Preset requirements.\r\n * @param config.DOMParser - XML/HTML parser from string into DOM Document.\r\n * @param config.canvas - `node-canvas` exports.\r\n * @param config.fetch - WHATWG-compatible `fetch` function.\r\n * @returns Preset object.\r\n */\nfunction node(_ref) {\n  var {\n    DOMParser,\n    canvas,\n    fetch\n  } = _ref;\n  return {\n    window: null,\n    ignoreAnimation: true,\n    ignoreMouse: true,\n    DOMParser,\n    fetch,\n    createCanvas: canvas.createCanvas,\n    createImage: canvas.loadImage\n  };\n}\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  offscreen: offscreen,\n  node: node\n});\n\n/**\r\n * HTML-safe compress white-spaces.\r\n * @param str - String to compress.\r\n * @returns String.\r\n */\nfunction compressSpaces(str) {\n  return str.replace(/(?!\\u3000)\\s+/gm, ' ');\n}\n/**\r\n * HTML-safe left trim.\r\n * @param str - String to trim.\r\n * @returns String.\r\n */\n\nfunction trimLeft(str) {\n  return str.replace(/^[\\n \\t]+/, '');\n}\n/**\r\n * HTML-safe right trim.\r\n * @param str - String to trim.\r\n * @returns String.\r\n */\n\nfunction trimRight(str) {\n  return str.replace(/[\\n \\t]+$/, '');\n}\n/**\r\n * String to numbers array.\r\n * @param str - Numbers string.\r\n * @returns Numbers array.\r\n */\n\nfunction toNumbers(str) {\n  var matches = (str || '').match(/-?(\\d+(?:\\.\\d*(?:[eE][+-]?\\d+)?)?|\\.\\d+)(?=\\D|$)/gm) || [];\n  return matches.map(parseFloat);\n} // Microsoft Edge fix\n\nvar allUppercase = /^[A-Z-]+$/;\n/**\r\n * Normalize attribute name.\r\n * @param name - Attribute name.\r\n * @returns Normalized attribute name.\r\n */\n\nfunction normalizeAttributeName(name) {\n  if (allUppercase.test(name)) {\n    return name.toLowerCase();\n  }\n  return name;\n}\n/**\r\n * Parse external URL.\r\n * @param url - CSS url string.\r\n * @returns Parsed URL.\r\n */\n\nfunction parseExternalUrl(url) {\n  //                      single quotes [2]\n  //                      v         double quotes [3]\n  //                      v         v         no quotes [4]\n  //                      v         v         v\n  var urlMatch = /url\\(('([^']+)'|\"([^\"]+)\"|([^'\")]+))\\)/.exec(url) || [];\n  return urlMatch[2] || urlMatch[3] || urlMatch[4];\n}\n/**\r\n * Transform floats to integers in rgb colors.\r\n * @param color - Color to normalize.\r\n * @returns Normalized color.\r\n */\n\nfunction normalizeColor(color) {\n  if (!color.startsWith('rgb')) {\n    return color;\n  }\n  var rgbParts = 3;\n  var normalizedColor = color.replace(/\\d+(\\.\\d+)?/g, (num, isFloat) => rgbParts-- && isFloat ? String(Math.round(parseFloat(num))) : num);\n  return normalizedColor;\n}\n\n// slightly modified version of https://github.com/keeganstreet/specificity/blob/master/specificity.js\nvar attributeRegex = /(\\[[^\\]]+\\])/g;\nvar idRegex = /(#[^\\s+>~.[:]+)/g;\nvar classRegex = /(\\.[^\\s+>~.[:]+)/g;\nvar pseudoElementRegex = /(::[^\\s+>~.[:]+|:first-line|:first-letter|:before|:after)/gi;\nvar pseudoClassWithBracketsRegex = /(:[\\w-]+\\([^)]*\\))/gi;\nvar pseudoClassRegex = /(:[^\\s+>~.[:]+)/g;\nvar elementRegex = /([^\\s+>~.[:]+)/g;\nfunction findSelectorMatch(selector, regex) {\n  var matches = regex.exec(selector);\n  if (!matches) {\n    return [selector, 0];\n  }\n  return [selector.replace(regex, ' '), matches.length];\n}\n/**\r\n * Measure selector specificity.\r\n * @param selector - Selector to measure.\r\n * @returns Specificity.\r\n */\n\nfunction getSelectorSpecificity(selector) {\n  var specificity = [0, 0, 0];\n  var currentSelector = selector.replace(/:not\\(([^)]*)\\)/g, '     $1 ').replace(/{[\\s\\S]*/gm, ' ');\n  var delta = 0;\n  [currentSelector, delta] = findSelectorMatch(currentSelector, attributeRegex);\n  specificity[1] += delta;\n  [currentSelector, delta] = findSelectorMatch(currentSelector, idRegex);\n  specificity[0] += delta;\n  [currentSelector, delta] = findSelectorMatch(currentSelector, classRegex);\n  specificity[1] += delta;\n  [currentSelector, delta] = findSelectorMatch(currentSelector, pseudoElementRegex);\n  specificity[2] += delta;\n  [currentSelector, delta] = findSelectorMatch(currentSelector, pseudoClassWithBracketsRegex);\n  specificity[1] += delta;\n  [currentSelector, delta] = findSelectorMatch(currentSelector, pseudoClassRegex);\n  specificity[1] += delta;\n  currentSelector = currentSelector.replace(/[*\\s+>~]/g, ' ').replace(/[#.]/g, ' ');\n  [currentSelector, delta] = findSelectorMatch(currentSelector, elementRegex); // lgtm [js/useless-assignment-to-local]\n\n  specificity[2] += delta;\n  return specificity.join('');\n}\nvar PSEUDO_ZERO = .00000001;\n/**\r\n * Vector magnitude.\r\n * @param v\r\n * @returns Number result.\r\n */\n\nfunction vectorMagnitude(v) {\n  return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2));\n}\n/**\r\n * Ratio between two vectors.\r\n * @param u\r\n * @param v\r\n * @returns Number result.\r\n */\n\nfunction vectorsRatio(u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vectorMagnitude(u) * vectorMagnitude(v));\n}\n/**\r\n * Angle between two vectors.\r\n * @param u\r\n * @param v\r\n * @returns Number result.\r\n */\n\nfunction vectorsAngle(u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vectorsRatio(u, v));\n}\nfunction CB1(t) {\n  return t * t * t;\n}\nfunction CB2(t) {\n  return 3 * t * t * (1 - t);\n}\nfunction CB3(t) {\n  return 3 * t * (1 - t) * (1 - t);\n}\nfunction CB4(t) {\n  return (1 - t) * (1 - t) * (1 - t);\n}\nfunction QB1(t) {\n  return t * t;\n}\nfunction QB2(t) {\n  return 2 * t * (1 - t);\n}\nfunction QB3(t) {\n  return (1 - t) * (1 - t);\n}\nclass Property {\n  constructor(document, name, value) {\n    this.document = document;\n    this.name = name;\n    this.value = value;\n    this.isNormalizedColor = false;\n  }\n  static empty(document) {\n    return new Property(document, 'EMPTY', '');\n  }\n  split() {\n    var separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ' ';\n    var {\n      document,\n      name\n    } = this;\n    return compressSpaces(this.getString()).trim().split(separator).map(value => new Property(document, name, value));\n  }\n  hasValue(zeroIsValue) {\n    var {\n      value\n    } = this;\n    return value !== null && value !== '' && (zeroIsValue || value !== 0) && typeof value !== 'undefined';\n  }\n  isString(regexp) {\n    var {\n      value\n    } = this;\n    var result = typeof value === 'string';\n    if (!result || !regexp) {\n      return result;\n    }\n    return regexp.test(value);\n  }\n  isUrlDefinition() {\n    return this.isString(/^url\\(/);\n  }\n  isPixels() {\n    if (!this.hasValue()) {\n      return false;\n    }\n    var asString = this.getString();\n    switch (true) {\n      case asString.endsWith('px'):\n      case /^[0-9]+$/.test(asString):\n        return true;\n      default:\n        return false;\n    }\n  }\n  setValue(value) {\n    this.value = value;\n    return this;\n  }\n  getValue(def) {\n    if (typeof def === 'undefined' || this.hasValue()) {\n      return this.value;\n    }\n    return def;\n  }\n  getNumber(def) {\n    if (!this.hasValue()) {\n      if (typeof def === 'undefined') {\n        return 0;\n      }\n      return parseFloat(def);\n    }\n    var {\n      value\n    } = this;\n    var n = parseFloat(value);\n    if (this.isString(/%$/)) {\n      n /= 100.0;\n    }\n    return n;\n  }\n  getString(def) {\n    if (typeof def === 'undefined' || this.hasValue()) {\n      return typeof this.value === 'undefined' ? '' : String(this.value);\n    }\n    return String(def);\n  }\n  getColor(def) {\n    var color = this.getString(def);\n    if (this.isNormalizedColor) {\n      return color;\n    }\n    this.isNormalizedColor = true;\n    color = normalizeColor(color);\n    this.value = color;\n    return color;\n  }\n  getDpi() {\n    return 96.0; // TODO: compute?\n  }\n  getRem() {\n    return this.document.rootEmSize;\n  }\n  getEm() {\n    return this.document.emSize;\n  }\n  getUnits() {\n    return this.getString().replace(/[0-9.-]/g, '');\n  }\n  getPixels(axisOrIsFontSize) {\n    var processPercent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!this.hasValue()) {\n      return 0;\n    }\n    var [axis, isFontSize] = typeof axisOrIsFontSize === 'boolean' ? [undefined, axisOrIsFontSize] : [axisOrIsFontSize];\n    var {\n      viewPort\n    } = this.document.screen;\n    switch (true) {\n      case this.isString(/vmin$/):\n        return this.getNumber() / 100.0 * Math.min(viewPort.computeSize('x'), viewPort.computeSize('y'));\n      case this.isString(/vmax$/):\n        return this.getNumber() / 100.0 * Math.max(viewPort.computeSize('x'), viewPort.computeSize('y'));\n      case this.isString(/vw$/):\n        return this.getNumber() / 100.0 * viewPort.computeSize('x');\n      case this.isString(/vh$/):\n        return this.getNumber() / 100.0 * viewPort.computeSize('y');\n      case this.isString(/rem$/):\n        return this.getNumber() * this.getRem();\n      case this.isString(/em$/):\n        return this.getNumber() * this.getEm();\n      case this.isString(/ex$/):\n        return this.getNumber() * this.getEm() / 2.0;\n      case this.isString(/px$/):\n        return this.getNumber();\n      case this.isString(/pt$/):\n        return this.getNumber() * this.getDpi() * (1.0 / 72.0);\n      case this.isString(/pc$/):\n        return this.getNumber() * 15;\n      case this.isString(/cm$/):\n        return this.getNumber() * this.getDpi() / 2.54;\n      case this.isString(/mm$/):\n        return this.getNumber() * this.getDpi() / 25.4;\n      case this.isString(/in$/):\n        return this.getNumber() * this.getDpi();\n      case this.isString(/%$/) && isFontSize:\n        return this.getNumber() * this.getEm();\n      case this.isString(/%$/):\n        return this.getNumber() * viewPort.computeSize(axis);\n      default:\n        {\n          var n = this.getNumber();\n          if (processPercent && n < 1.0) {\n            return n * viewPort.computeSize(axis);\n          }\n          return n;\n        }\n    }\n  }\n  getMilliseconds() {\n    if (!this.hasValue()) {\n      return 0;\n    }\n    if (this.isString(/ms$/)) {\n      return this.getNumber();\n    }\n    return this.getNumber() * 1000;\n  }\n  getRadians() {\n    if (!this.hasValue()) {\n      return 0;\n    }\n    switch (true) {\n      case this.isString(/deg$/):\n        return this.getNumber() * (Math.PI / 180.0);\n      case this.isString(/grad$/):\n        return this.getNumber() * (Math.PI / 200.0);\n      case this.isString(/rad$/):\n        return this.getNumber();\n      default:\n        return this.getNumber() * (Math.PI / 180.0);\n    }\n  }\n  getDefinition() {\n    var asString = this.getString();\n    var name = /#([^)'\"]+)/.exec(asString);\n    if (name) {\n      name = name[1];\n    }\n    if (!name) {\n      name = asString;\n    }\n    return this.document.definitions[name];\n  }\n  getFillStyleDefinition(element, opacity) {\n    var def = this.getDefinition();\n    if (!def) {\n      return null;\n    } // gradient\n\n    if (typeof def.createGradient === 'function') {\n      return def.createGradient(this.document.ctx, element, opacity);\n    } // pattern\n\n    if (typeof def.createPattern === 'function') {\n      if (def.getHrefAttribute().hasValue()) {\n        var patternTransform = def.getAttribute('patternTransform');\n        def = def.getHrefAttribute().getDefinition();\n        if (patternTransform.hasValue()) {\n          def.getAttribute('patternTransform', true).setValue(patternTransform.value);\n        }\n      }\n      return def.createPattern(this.document.ctx, element, opacity);\n    }\n    return null;\n  }\n  getTextBaseline() {\n    if (!this.hasValue()) {\n      return null;\n    }\n    return Property.textBaselineMapping[this.getString()];\n  }\n  addOpacity(opacity) {\n    var value = this.getColor();\n    var len = value.length;\n    var commas = 0; // Simulate old RGBColor version, which can't parse rgba.\n\n    for (var i = 0; i < len; i++) {\n      if (value[i] === ',') {\n        commas++;\n      }\n      if (commas === 3) {\n        break;\n      }\n    }\n    if (opacity.hasValue() && this.isString() && commas !== 3) {\n      var color = new RGBColor(value);\n      if (color.ok) {\n        color.alpha = opacity.getNumber();\n        value = color.toRGBA();\n      }\n    }\n    return new Property(this.document, this.name, value);\n  }\n}\nProperty.textBaselineMapping = {\n  'baseline': 'alphabetic',\n  'before-edge': 'top',\n  'text-before-edge': 'top',\n  'middle': 'middle',\n  'central': 'middle',\n  'after-edge': 'bottom',\n  'text-after-edge': 'bottom',\n  'ideographic': 'ideographic',\n  'alphabetic': 'alphabetic',\n  'hanging': 'hanging',\n  'mathematical': 'alphabetic'\n};\nclass ViewPort {\n  constructor() {\n    this.viewPorts = [];\n  }\n  clear() {\n    this.viewPorts = [];\n  }\n  setCurrent(width, height) {\n    this.viewPorts.push({\n      width,\n      height\n    });\n  }\n  removeCurrent() {\n    this.viewPorts.pop();\n  }\n  getCurrent() {\n    var {\n      viewPorts\n    } = this;\n    return viewPorts[viewPorts.length - 1];\n  }\n  get width() {\n    return this.getCurrent().width;\n  }\n  get height() {\n    return this.getCurrent().height;\n  }\n  computeSize(d) {\n    if (typeof d === 'number') {\n      return d;\n    }\n    if (d === 'x') {\n      return this.width;\n    }\n    if (d === 'y') {\n      return this.height;\n    }\n    return Math.sqrt(Math.pow(this.width, 2) + Math.pow(this.height, 2)) / Math.sqrt(2);\n  }\n}\nclass Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  static parse(point) {\n    var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var [x = defaultValue, y = defaultValue] = toNumbers(point);\n    return new Point(x, y);\n  }\n  static parseScale(scale) {\n    var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var [x = defaultValue, y = x] = toNumbers(scale);\n    return new Point(x, y);\n  }\n  static parsePath(path) {\n    var points = toNumbers(path);\n    var len = points.length;\n    var pathPoints = [];\n    for (var i = 0; i < len; i += 2) {\n      pathPoints.push(new Point(points[i], points[i + 1]));\n    }\n    return pathPoints;\n  }\n  angleTo(point) {\n    return Math.atan2(point.y - this.y, point.x - this.x);\n  }\n  applyTransform(transform) {\n    var {\n      x,\n      y\n    } = this;\n    var xp = x * transform[0] + y * transform[2] + transform[4];\n    var yp = x * transform[1] + y * transform[3] + transform[5];\n    this.x = xp;\n    this.y = yp;\n  }\n}\nclass Mouse {\n  constructor(screen) {\n    this.screen = screen;\n    this.working = false;\n    this.events = [];\n    this.eventElements = []; // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n    this.onClick = this.onClick.bind(this); // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n    this.onMouseMove = this.onMouseMove.bind(this);\n  }\n  isWorking() {\n    return this.working;\n  }\n  start() {\n    if (this.working) {\n      return;\n    }\n    var {\n      screen,\n      onClick,\n      onMouseMove\n    } = this;\n    var canvas = screen.ctx.canvas;\n    canvas.onclick = onClick;\n    canvas.onmousemove = onMouseMove;\n    this.working = true;\n  }\n  stop() {\n    if (!this.working) {\n      return;\n    }\n    var canvas = this.screen.ctx.canvas;\n    this.working = false;\n    canvas.onclick = null;\n    canvas.onmousemove = null;\n  }\n  hasEvents() {\n    return this.working && this.events.length > 0;\n  }\n  runEvents() {\n    if (!this.working) {\n      return;\n    }\n    var {\n      screen: document,\n      events,\n      eventElements\n    } = this;\n    var {\n      style\n    } = document.ctx.canvas;\n    if (style) {\n      style.cursor = '';\n    }\n    events.forEach((_ref, i) => {\n      var {\n        run\n      } = _ref;\n      var element = eventElements[i];\n      while (element) {\n        run(element);\n        element = element.parent;\n      }\n    }); // done running, clear\n\n    this.events = [];\n    this.eventElements = [];\n  }\n  checkPath(element, ctx) {\n    if (!this.working || !ctx) {\n      return;\n    }\n    var {\n      events,\n      eventElements\n    } = this;\n    events.forEach((_ref2, i) => {\n      var {\n        x,\n        y\n      } = _ref2;\n      if (!eventElements[i] && ctx.isPointInPath && ctx.isPointInPath(x, y)) {\n        eventElements[i] = element;\n      }\n    });\n  }\n  checkBoundingBox(element, boundingBox) {\n    if (!this.working || !boundingBox) {\n      return;\n    }\n    var {\n      events,\n      eventElements\n    } = this;\n    events.forEach((_ref3, i) => {\n      var {\n        x,\n        y\n      } = _ref3;\n      if (!eventElements[i] && boundingBox.isPointInBox(x, y)) {\n        eventElements[i] = element;\n      }\n    });\n  }\n  mapXY(x, y) {\n    var {\n      window,\n      ctx\n    } = this.screen;\n    var point = new Point(x, y);\n    var element = ctx.canvas;\n    while (element) {\n      point.x -= element.offsetLeft;\n      point.y -= element.offsetTop;\n      element = element.offsetParent;\n    }\n    if (window.scrollX) {\n      point.x += window.scrollX;\n    }\n    if (window.scrollY) {\n      point.y += window.scrollY;\n    }\n    return point;\n  }\n  onClick(event) {\n    var {\n      x,\n      y\n    } = this.mapXY(event.clientX, event.clientY);\n    this.events.push({\n      type: 'onclick',\n      x,\n      y,\n      run(eventTarget) {\n        if (eventTarget.onClick) {\n          eventTarget.onClick();\n        }\n      }\n    });\n  }\n  onMouseMove(event) {\n    var {\n      x,\n      y\n    } = this.mapXY(event.clientX, event.clientY);\n    this.events.push({\n      type: 'onmousemove',\n      x,\n      y,\n      run(eventTarget) {\n        if (eventTarget.onMouseMove) {\n          eventTarget.onMouseMove();\n        }\n      }\n    });\n  }\n}\nvar defaultWindow = typeof window !== 'undefined' ? window : null;\nvar defaultFetch$1 = typeof fetch !== 'undefined' ? fetch.bind(undefined) // `fetch` depends on context: `someObject.fetch(...)` will throw error.\n: null;\nclass Screen {\n  constructor(ctx) {\n    var {\n      fetch = defaultFetch$1,\n      window = defaultWindow\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.ctx = ctx;\n    this.FRAMERATE = 30;\n    this.MAX_VIRTUAL_PIXELS = 30000;\n    this.CLIENT_WIDTH = 800;\n    this.CLIENT_HEIGHT = 600;\n    this.viewPort = new ViewPort();\n    this.mouse = new Mouse(this);\n    this.animations = [];\n    this.waits = [];\n    this.frameDuration = 0;\n    this.isReadyLock = false;\n    this.isFirstRender = true;\n    this.intervalId = null;\n    this.window = window;\n    this.fetch = fetch;\n  }\n  wait(checker) {\n    this.waits.push(checker);\n  }\n  ready() {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    if (!this.readyPromise) {\n      return Promise.resolve();\n    }\n    return this.readyPromise;\n  }\n  isReady() {\n    if (this.isReadyLock) {\n      return true;\n    }\n    var isReadyLock = this.waits.every(_ => _());\n    if (isReadyLock) {\n      this.waits = [];\n      if (this.resolveReady) {\n        this.resolveReady();\n      }\n    }\n    this.isReadyLock = isReadyLock;\n    return isReadyLock;\n  }\n  setDefaults(ctx) {\n    // initial values and defaults\n    ctx.strokeStyle = 'rgba(0,0,0,0)';\n    ctx.lineCap = 'butt';\n    ctx.lineJoin = 'miter';\n    ctx.miterLimit = 4;\n  }\n  setViewBox(_ref) {\n    var {\n      document,\n      ctx,\n      aspectRatio,\n      width,\n      desiredWidth,\n      height,\n      desiredHeight,\n      minX = 0,\n      minY = 0,\n      refX,\n      refY,\n      clip = false,\n      clipX = 0,\n      clipY = 0\n    } = _ref;\n    // aspect ratio - http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n    var cleanAspectRatio = compressSpaces(aspectRatio).replace(/^defer\\s/, ''); // ignore defer\n\n    var [aspectRatioAlign, aspectRatioMeetOrSlice] = cleanAspectRatio.split(' ');\n    var align = aspectRatioAlign || 'xMidYMid';\n    var meetOrSlice = aspectRatioMeetOrSlice || 'meet'; // calculate scale\n\n    var scaleX = width / desiredWidth;\n    var scaleY = height / desiredHeight;\n    var scaleMin = Math.min(scaleX, scaleY);\n    var scaleMax = Math.max(scaleX, scaleY);\n    var finalDesiredWidth = desiredWidth;\n    var finalDesiredHeight = desiredHeight;\n    if (meetOrSlice === 'meet') {\n      finalDesiredWidth *= scaleMin;\n      finalDesiredHeight *= scaleMin;\n    }\n    if (meetOrSlice === 'slice') {\n      finalDesiredWidth *= scaleMax;\n      finalDesiredHeight *= scaleMax;\n    }\n    var refXProp = new Property(document, 'refX', refX);\n    var refYProp = new Property(document, 'refY', refY);\n    var hasRefs = refXProp.hasValue() && refYProp.hasValue();\n    if (hasRefs) {\n      ctx.translate(-scaleMin * refXProp.getPixels('x'), -scaleMin * refYProp.getPixels('y'));\n    }\n    if (clip) {\n      var scaledClipX = scaleMin * clipX;\n      var scaledClipY = scaleMin * clipY;\n      ctx.beginPath();\n      ctx.moveTo(scaledClipX, scaledClipY);\n      ctx.lineTo(width, scaledClipY);\n      ctx.lineTo(width, height);\n      ctx.lineTo(scaledClipX, height);\n      ctx.closePath();\n      ctx.clip();\n    }\n    if (!hasRefs) {\n      var isMeetMinY = meetOrSlice === 'meet' && scaleMin === scaleY;\n      var isSliceMaxY = meetOrSlice === 'slice' && scaleMax === scaleY;\n      var isMeetMinX = meetOrSlice === 'meet' && scaleMin === scaleX;\n      var isSliceMaxX = meetOrSlice === 'slice' && scaleMax === scaleX;\n      if (align.startsWith('xMid') && (isMeetMinY || isSliceMaxY)) {\n        ctx.translate(width / 2.0 - finalDesiredWidth / 2.0, 0);\n      }\n      if (align.endsWith('YMid') && (isMeetMinX || isSliceMaxX)) {\n        ctx.translate(0, height / 2.0 - finalDesiredHeight / 2.0);\n      }\n      if (align.startsWith('xMax') && (isMeetMinY || isSliceMaxY)) {\n        ctx.translate(width - finalDesiredWidth, 0);\n      }\n      if (align.endsWith('YMax') && (isMeetMinX || isSliceMaxX)) {\n        ctx.translate(0, height - finalDesiredHeight);\n      }\n    } // scale\n\n    switch (true) {\n      case align === 'none':\n        ctx.scale(scaleX, scaleY);\n        break;\n      case meetOrSlice === 'meet':\n        ctx.scale(scaleMin, scaleMin);\n        break;\n      case meetOrSlice === 'slice':\n        ctx.scale(scaleMax, scaleMax);\n        break;\n    } // translate\n\n    ctx.translate(-minX, -minY);\n  }\n  start(element) {\n    var {\n      enableRedraw = false,\n      ignoreMouse = false,\n      ignoreAnimation = false,\n      ignoreDimensions = false,\n      ignoreClear = false,\n      forceRedraw,\n      scaleWidth,\n      scaleHeight,\n      offsetX,\n      offsetY\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var {\n      FRAMERATE,\n      mouse\n    } = this;\n    var frameDuration = 1000 / FRAMERATE;\n    this.frameDuration = frameDuration;\n    this.readyPromise = new Promise(resolve => {\n      this.resolveReady = resolve;\n    });\n    if (this.isReady()) {\n      this.render(element, ignoreDimensions, ignoreClear, scaleWidth, scaleHeight, offsetX, offsetY);\n    }\n    if (!enableRedraw) {\n      return;\n    }\n    var now = Date.now();\n    var then = now;\n    var delta = 0;\n    var tick = () => {\n      now = Date.now();\n      delta = now - then;\n      if (delta >= frameDuration) {\n        then = now - delta % frameDuration;\n        if (this.shouldUpdate(ignoreAnimation, forceRedraw)) {\n          this.render(element, ignoreDimensions, ignoreClear, scaleWidth, scaleHeight, offsetX, offsetY);\n          mouse.runEvents();\n        }\n      }\n      this.intervalId = requestAnimationFrame(tick);\n    };\n    if (!ignoreMouse) {\n      mouse.start();\n    }\n    this.intervalId = requestAnimationFrame(tick);\n  }\n  stop() {\n    if (this.intervalId) {\n      requestAnimationFrame.cancel(this.intervalId);\n      this.intervalId = null;\n    }\n    this.mouse.stop();\n  }\n  shouldUpdate(ignoreAnimation, forceRedraw) {\n    // need update from animations?\n    if (!ignoreAnimation) {\n      var {\n        frameDuration\n      } = this;\n      var shouldUpdate = this.animations.reduce((shouldUpdate, animation) => animation.update(frameDuration) || shouldUpdate, false);\n      if (shouldUpdate) {\n        return true;\n      }\n    } // need update from redraw?\n\n    if (typeof forceRedraw === 'function' && forceRedraw()) {\n      return true;\n    }\n    if (!this.isReadyLock && this.isReady()) {\n      return true;\n    } // need update from mouse events?\n\n    if (this.mouse.hasEvents()) {\n      return true;\n    }\n    return false;\n  }\n  render(element, ignoreDimensions, ignoreClear, scaleWidth, scaleHeight, offsetX, offsetY) {\n    var {\n      CLIENT_WIDTH,\n      CLIENT_HEIGHT,\n      viewPort,\n      ctx,\n      isFirstRender\n    } = this;\n    var canvas = ctx.canvas;\n    viewPort.clear();\n    if (canvas.width && canvas.height) {\n      viewPort.setCurrent(canvas.width, canvas.height);\n    } else {\n      viewPort.setCurrent(CLIENT_WIDTH, CLIENT_HEIGHT);\n    }\n    var widthStyle = element.getStyle('width');\n    var heightStyle = element.getStyle('height');\n    if (!ignoreDimensions && (isFirstRender || typeof scaleWidth !== 'number' && typeof scaleHeight !== 'number')) {\n      // set canvas size\n      if (widthStyle.hasValue()) {\n        canvas.width = widthStyle.getPixels('x');\n        if (canvas.style) {\n          canvas.style.width = \"\".concat(canvas.width, \"px\");\n        }\n      }\n      if (heightStyle.hasValue()) {\n        canvas.height = heightStyle.getPixels('y');\n        if (canvas.style) {\n          canvas.style.height = \"\".concat(canvas.height, \"px\");\n        }\n      }\n    }\n    var cWidth = canvas.clientWidth || canvas.width;\n    var cHeight = canvas.clientHeight || canvas.height;\n    if (ignoreDimensions && widthStyle.hasValue() && heightStyle.hasValue()) {\n      cWidth = widthStyle.getPixels('x');\n      cHeight = heightStyle.getPixels('y');\n    }\n    viewPort.setCurrent(cWidth, cHeight);\n    if (typeof offsetX === 'number') {\n      element.getAttribute('x', true).setValue(offsetX);\n    }\n    if (typeof offsetY === 'number') {\n      element.getAttribute('y', true).setValue(offsetY);\n    }\n    if (typeof scaleWidth === 'number' || typeof scaleHeight === 'number') {\n      var viewBox = toNumbers(element.getAttribute('viewBox').getString());\n      var xRatio = 0;\n      var yRatio = 0;\n      if (typeof scaleWidth === 'number') {\n        var _widthStyle = element.getStyle('width');\n        if (_widthStyle.hasValue()) {\n          xRatio = _widthStyle.getPixels('x') / scaleWidth;\n        } else if (!isNaN(viewBox[2])) {\n          xRatio = viewBox[2] / scaleWidth;\n        }\n      }\n      if (typeof scaleHeight === 'number') {\n        var _heightStyle = element.getStyle('height');\n        if (_heightStyle.hasValue()) {\n          yRatio = _heightStyle.getPixels('y') / scaleHeight;\n        } else if (!isNaN(viewBox[3])) {\n          yRatio = viewBox[3] / scaleHeight;\n        }\n      }\n      if (!xRatio) {\n        xRatio = yRatio;\n      }\n      if (!yRatio) {\n        yRatio = xRatio;\n      }\n      element.getAttribute('width', true).setValue(scaleWidth);\n      element.getAttribute('height', true).setValue(scaleHeight);\n      var transformStyle = element.getStyle('transform', true, true);\n      transformStyle.setValue(\"\".concat(transformStyle.getString(), \" scale(\").concat(1.0 / xRatio, \", \").concat(1.0 / yRatio, \")\"));\n    } // clear and render\n\n    if (!ignoreClear) {\n      ctx.clearRect(0, 0, cWidth, cHeight);\n    }\n    element.render(ctx);\n    if (isFirstRender) {\n      this.isFirstRender = false;\n    }\n  }\n}\nScreen.defaultWindow = defaultWindow;\nScreen.defaultFetch = defaultFetch$1;\nvar {\n  defaultFetch\n} = Screen;\nvar DefaultDOMParser = typeof DOMParser !== 'undefined' ? DOMParser : null;\nclass Parser {\n  constructor() {\n    var {\n      fetch = defaultFetch,\n      DOMParser = DefaultDOMParser\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.fetch = fetch;\n    this.DOMParser = DOMParser;\n  }\n  parse(resource) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (resource.startsWith('<')) {\n        return _this.parseFromString(resource);\n      }\n      return _this.load(resource);\n    })();\n  }\n  parseFromString(xml) {\n    var parser = new this.DOMParser();\n    try {\n      return this.checkDocument(parser.parseFromString(xml, 'image/svg+xml'));\n    } catch (err) {\n      return this.checkDocument(parser.parseFromString(xml, 'text/xml'));\n    }\n  }\n  checkDocument(document) {\n    var parserError = document.getElementsByTagName('parsererror')[0];\n    if (parserError) {\n      throw new Error(parserError.textContent);\n    }\n    return document;\n  }\n  load(url) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      var response = yield _this2.fetch(url);\n      var xml = yield response.text();\n      return _this2.parseFromString(xml);\n    })();\n  }\n}\nclass Translate {\n  constructor(_, point) {\n    this.type = 'translate';\n    this.point = null;\n    this.point = Point.parse(point);\n  }\n  apply(ctx) {\n    var {\n      x,\n      y\n    } = this.point;\n    ctx.translate(x || 0.0, y || 0.0);\n  }\n  unapply(ctx) {\n    var {\n      x,\n      y\n    } = this.point;\n    ctx.translate(-1.0 * x || 0.0, -1.0 * y || 0.0);\n  }\n  applyToPoint(point) {\n    var {\n      x,\n      y\n    } = this.point;\n    point.applyTransform([1, 0, 0, 1, x || 0.0, y || 0.0]);\n  }\n}\nclass Rotate {\n  constructor(document, rotate, transformOrigin) {\n    this.type = 'rotate';\n    this.angle = null;\n    this.originX = null;\n    this.originY = null;\n    this.cx = 0;\n    this.cy = 0;\n    var numbers = toNumbers(rotate);\n    this.angle = new Property(document, 'angle', numbers[0]);\n    this.originX = transformOrigin[0];\n    this.originY = transformOrigin[1];\n    this.cx = numbers[1] || 0;\n    this.cy = numbers[2] || 0;\n  }\n  apply(ctx) {\n    var {\n      cx,\n      cy,\n      originX,\n      originY,\n      angle\n    } = this;\n    var tx = cx + originX.getPixels('x');\n    var ty = cy + originY.getPixels('y');\n    ctx.translate(tx, ty);\n    ctx.rotate(angle.getRadians());\n    ctx.translate(-tx, -ty);\n  }\n  unapply(ctx) {\n    var {\n      cx,\n      cy,\n      originX,\n      originY,\n      angle\n    } = this;\n    var tx = cx + originX.getPixels('x');\n    var ty = cy + originY.getPixels('y');\n    ctx.translate(tx, ty);\n    ctx.rotate(-1.0 * angle.getRadians());\n    ctx.translate(-tx, -ty);\n  }\n  applyToPoint(point) {\n    var {\n      cx,\n      cy,\n      angle\n    } = this;\n    var rad = angle.getRadians();\n    point.applyTransform([1, 0, 0, 1, cx || 0.0, cy || 0.0 // this.p.y\n    ]);\n    point.applyTransform([Math.cos(rad), Math.sin(rad), -Math.sin(rad), Math.cos(rad), 0, 0]);\n    point.applyTransform([1, 0, 0, 1, -cx || 0.0, -cy || 0.0 // -this.p.y\n    ]);\n  }\n}\nclass Scale {\n  constructor(_, scale, transformOrigin) {\n    this.type = 'scale';\n    this.scale = null;\n    this.originX = null;\n    this.originY = null;\n    var scaleSize = Point.parseScale(scale); // Workaround for node-canvas\n\n    if (scaleSize.x === 0 || scaleSize.y === 0) {\n      scaleSize.x = PSEUDO_ZERO;\n      scaleSize.y = PSEUDO_ZERO;\n    }\n    this.scale = scaleSize;\n    this.originX = transformOrigin[0];\n    this.originY = transformOrigin[1];\n  }\n  apply(ctx) {\n    var {\n      scale: {\n        x,\n        y\n      },\n      originX,\n      originY\n    } = this;\n    var tx = originX.getPixels('x');\n    var ty = originY.getPixels('y');\n    ctx.translate(tx, ty);\n    ctx.scale(x, y || x);\n    ctx.translate(-tx, -ty);\n  }\n  unapply(ctx) {\n    var {\n      scale: {\n        x,\n        y\n      },\n      originX,\n      originY\n    } = this;\n    var tx = originX.getPixels('x');\n    var ty = originY.getPixels('y');\n    ctx.translate(tx, ty);\n    ctx.scale(1.0 / x, 1.0 / y || x);\n    ctx.translate(-tx, -ty);\n  }\n  applyToPoint(point) {\n    var {\n      x,\n      y\n    } = this.scale;\n    point.applyTransform([x || 0.0, 0, 0, y || 0.0, 0, 0]);\n  }\n}\nclass Matrix {\n  constructor(_, matrix, transformOrigin) {\n    this.type = 'matrix';\n    this.matrix = [];\n    this.originX = null;\n    this.originY = null;\n    this.matrix = toNumbers(matrix);\n    this.originX = transformOrigin[0];\n    this.originY = transformOrigin[1];\n  }\n  apply(ctx) {\n    var {\n      originX,\n      originY,\n      matrix\n    } = this;\n    var tx = originX.getPixels('x');\n    var ty = originY.getPixels('y');\n    ctx.translate(tx, ty);\n    ctx.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n    ctx.translate(-tx, -ty);\n  }\n  unapply(ctx) {\n    var {\n      originX,\n      originY,\n      matrix\n    } = this;\n    var a = matrix[0];\n    var b = matrix[2];\n    var c = matrix[4];\n    var d = matrix[1];\n    var e = matrix[3];\n    var f = matrix[5];\n    var g = 0.0;\n    var h = 0.0;\n    var i = 1.0;\n    var det = 1 / (a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g));\n    var tx = originX.getPixels('x');\n    var ty = originY.getPixels('y');\n    ctx.translate(tx, ty);\n    ctx.transform(det * (e * i - f * h), det * (f * g - d * i), det * (c * h - b * i), det * (a * i - c * g), det * (b * f - c * e), det * (c * d - a * f));\n    ctx.translate(-tx, -ty);\n  }\n  applyToPoint(point) {\n    point.applyTransform(this.matrix);\n  }\n}\nclass Skew extends Matrix {\n  constructor(document, skew, transformOrigin) {\n    super(document, skew, transformOrigin);\n    this.type = 'skew';\n    this.angle = null;\n    this.angle = new Property(document, 'angle', skew);\n  }\n}\nclass SkewX extends Skew {\n  constructor(document, skew, transformOrigin) {\n    super(document, skew, transformOrigin);\n    this.type = 'skewX';\n    this.matrix = [1, 0, Math.tan(this.angle.getRadians()), 1, 0, 0];\n  }\n}\nclass SkewY extends Skew {\n  constructor(document, skew, transformOrigin) {\n    super(document, skew, transformOrigin);\n    this.type = 'skewY';\n    this.matrix = [1, Math.tan(this.angle.getRadians()), 0, 1, 0, 0];\n  }\n}\nfunction parseTransforms(transform) {\n  return compressSpaces(transform).trim().replace(/\\)([a-zA-Z])/g, ') $1').replace(/\\)(\\s?,\\s?)/g, ') ').split(/\\s(?=[a-z])/);\n}\nfunction parseTransform(transform) {\n  var [type, value] = transform.split('(');\n  return [type.trim(), value.trim().replace(')', '')];\n}\nclass Transform {\n  constructor(document, transform, transformOrigin) {\n    this.document = document;\n    this.transforms = [];\n    var data = parseTransforms(transform);\n    data.forEach(transform => {\n      if (transform === 'none') {\n        return;\n      }\n      var [type, value] = parseTransform(transform);\n      var TransformType = Transform.transformTypes[type];\n      if (typeof TransformType !== 'undefined') {\n        this.transforms.push(new TransformType(this.document, value, transformOrigin));\n      }\n    });\n  }\n  static fromElement(document, element) {\n    var transformStyle = element.getStyle('transform', false, true);\n    var [transformOriginXProperty, transformOriginYProperty = transformOriginXProperty] = element.getStyle('transform-origin', false, true).split();\n    var transformOrigin = [transformOriginXProperty, transformOriginYProperty];\n    if (transformStyle.hasValue()) {\n      return new Transform(document, transformStyle.getString(), transformOrigin);\n    }\n    return null;\n  }\n  apply(ctx) {\n    var {\n      transforms\n    } = this;\n    var len = transforms.length;\n    for (var i = 0; i < len; i++) {\n      transforms[i].apply(ctx);\n    }\n  }\n  unapply(ctx) {\n    var {\n      transforms\n    } = this;\n    var len = transforms.length;\n    for (var i = len - 1; i >= 0; i--) {\n      transforms[i].unapply(ctx);\n    }\n  } // TODO: applyToPoint unused ... remove?\n\n  applyToPoint(point) {\n    var {\n      transforms\n    } = this;\n    var len = transforms.length;\n    for (var i = 0; i < len; i++) {\n      transforms[i].applyToPoint(point);\n    }\n  }\n}\nTransform.transformTypes = {\n  translate: Translate,\n  rotate: Rotate,\n  scale: Scale,\n  matrix: Matrix,\n  skewX: SkewX,\n  skewY: SkewY\n};\nclass Element {\n  constructor(document, node) {\n    var captureTextNodes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    this.document = document;\n    this.node = node;\n    this.captureTextNodes = captureTextNodes;\n    this.attributes = Object.create(null);\n    this.styles = Object.create(null);\n    this.stylesSpecificity = Object.create(null);\n    this.animationFrozen = false;\n    this.animationFrozenValue = '';\n    this.parent = null;\n    this.children = [];\n    if (!node || node.nodeType !== 1) {\n      // ELEMENT_NODE\n      return;\n    } // add attributes\n\n    Array.from(node.attributes).forEach(attribute => {\n      var nodeName = normalizeAttributeName(attribute.nodeName);\n      this.attributes[nodeName] = new Property(document, nodeName, attribute.value);\n    });\n    this.addStylesFromStyleDefinition(); // add inline styles\n\n    if (this.getAttribute('style').hasValue()) {\n      var styles = this.getAttribute('style').getString().split(';').map(_ => _.trim());\n      styles.forEach(style => {\n        if (!style) {\n          return;\n        }\n        var [name, value] = style.split(':').map(_ => _.trim());\n        this.styles[name] = new Property(document, name, value);\n      });\n    }\n    var {\n      definitions\n    } = document;\n    var id = this.getAttribute('id'); // add id\n\n    if (id.hasValue()) {\n      if (!definitions[id.getString()]) {\n        definitions[id.getString()] = this;\n      }\n    }\n    Array.from(node.childNodes).forEach(childNode => {\n      if (childNode.nodeType === 1) {\n        this.addChild(childNode); // ELEMENT_NODE\n      } else if (captureTextNodes && (childNode.nodeType === 3 || childNode.nodeType === 4)) {\n        var textNode = document.createTextNode(childNode);\n        if (textNode.getText().length > 0) {\n          this.addChild(textNode); // TEXT_NODE\n        }\n      }\n    });\n  }\n  getAttribute(name) {\n    var createIfNotExists = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var attr = this.attributes[name];\n    if (!attr && createIfNotExists) {\n      var _attr = new Property(this.document, name, '');\n      this.attributes[name] = _attr;\n      return _attr;\n    }\n    return attr || Property.empty(this.document);\n  }\n  getHrefAttribute() {\n    for (var key in this.attributes) {\n      if (key === 'href' || key.endsWith(':href')) {\n        return this.attributes[key];\n      }\n    }\n    return Property.empty(this.document);\n  }\n  getStyle(name) {\n    var createIfNotExists = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var skipAncestors = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var style = this.styles[name];\n    if (style) {\n      return style;\n    }\n    var attr = this.getAttribute(name);\n    if (attr !== null && attr !== void 0 && attr.hasValue()) {\n      this.styles[name] = attr; // move up to me to cache\n\n      return attr;\n    }\n    if (!skipAncestors) {\n      var {\n        parent\n      } = this;\n      if (parent) {\n        var parentStyle = parent.getStyle(name);\n        if (parentStyle !== null && parentStyle !== void 0 && parentStyle.hasValue()) {\n          return parentStyle;\n        }\n      }\n    }\n    if (createIfNotExists) {\n      var _style = new Property(this.document, name, '');\n      this.styles[name] = _style;\n      return _style;\n    }\n    return style || Property.empty(this.document);\n  }\n  render(ctx) {\n    // don't render display=none\n    // don't render visibility=hidden\n    if (this.getStyle('display').getString() === 'none' || this.getStyle('visibility').getString() === 'hidden') {\n      return;\n    }\n    ctx.save();\n    if (this.getStyle('mask').hasValue()) {\n      // mask\n      var mask = this.getStyle('mask').getDefinition();\n      if (mask) {\n        this.applyEffects(ctx);\n        mask.apply(ctx, this);\n      }\n    } else if (this.getStyle('filter').getValue('none') !== 'none') {\n      // filter\n      var filter = this.getStyle('filter').getDefinition();\n      if (filter) {\n        this.applyEffects(ctx);\n        filter.apply(ctx, this);\n      }\n    } else {\n      this.setContext(ctx);\n      this.renderChildren(ctx);\n      this.clearContext(ctx);\n    }\n    ctx.restore();\n  }\n  setContext(_) {// NO RENDER\n  }\n  applyEffects(ctx) {\n    // transform\n    var transform = Transform.fromElement(this.document, this);\n    if (transform) {\n      transform.apply(ctx);\n    } // clip\n\n    var clipPathStyleProp = this.getStyle('clip-path', false, true);\n    if (clipPathStyleProp.hasValue()) {\n      var clip = clipPathStyleProp.getDefinition();\n      if (clip) {\n        clip.apply(ctx);\n      }\n    }\n  }\n  clearContext(_) {// NO RENDER\n  }\n  renderChildren(ctx) {\n    this.children.forEach(child => {\n      child.render(ctx);\n    });\n  }\n  addChild(childNode) {\n    var child = childNode instanceof Element ? childNode : this.document.createElement(childNode);\n    child.parent = this;\n    if (!Element.ignoreChildTypes.includes(child.type)) {\n      this.children.push(child);\n    }\n  }\n  matchesSelector(selector) {\n    var _node$getAttribute;\n    var {\n      node\n    } = this;\n    if (typeof node.matches === 'function') {\n      return node.matches(selector);\n    }\n    var styleClasses = (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'class');\n    if (!styleClasses || styleClasses === '') {\n      return false;\n    }\n    return styleClasses.split(' ').some(styleClass => \".\".concat(styleClass) === selector);\n  }\n  addStylesFromStyleDefinition() {\n    var {\n      styles,\n      stylesSpecificity\n    } = this.document;\n    for (var selector in styles) {\n      if (!selector.startsWith('@') && this.matchesSelector(selector)) {\n        var style = styles[selector];\n        var specificity = stylesSpecificity[selector];\n        if (style) {\n          for (var name in style) {\n            var existingSpecificity = this.stylesSpecificity[name];\n            if (typeof existingSpecificity === 'undefined') {\n              existingSpecificity = '000';\n            }\n            if (specificity >= existingSpecificity) {\n              this.styles[name] = style[name];\n              this.stylesSpecificity[name] = specificity;\n            }\n          }\n        }\n      }\n    }\n  }\n  removeStyles(element, ignoreStyles) {\n    var toRestore = ignoreStyles.reduce((toRestore, name) => {\n      var styleProp = element.getStyle(name);\n      if (!styleProp.hasValue()) {\n        return toRestore;\n      }\n      var value = styleProp.getString();\n      styleProp.setValue('');\n      return [...toRestore, [name, value]];\n    }, []);\n    return toRestore;\n  }\n  restoreStyles(element, styles) {\n    styles.forEach(_ref => {\n      var [name, value] = _ref;\n      element.getStyle(name, true).setValue(value);\n    });\n  }\n  isFirstChild() {\n    var _this$parent;\n    return ((_this$parent = this.parent) === null || _this$parent === void 0 ? void 0 : _this$parent.children.indexOf(this)) === 0;\n  }\n}\nElement.ignoreChildTypes = ['title'];\nclass UnknownElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n  }\n}\nfunction wrapFontFamily(fontFamily) {\n  var trimmed = fontFamily.trim();\n  return /^('|\")/.test(trimmed) ? trimmed : \"\\\"\".concat(trimmed, \"\\\"\");\n}\nfunction prepareFontFamily(fontFamily) {\n  return typeof process === 'undefined' ? fontFamily : fontFamily.trim().split(',').map(wrapFontFamily).join(',');\n}\n/**\r\n * https://developer.mozilla.org/en-US/docs/Web/CSS/font-style\r\n * @param fontStyle\r\n * @returns CSS font style.\r\n */\n\nfunction prepareFontStyle(fontStyle) {\n  if (!fontStyle) {\n    return '';\n  }\n  var targetFontStyle = fontStyle.trim().toLowerCase();\n  switch (targetFontStyle) {\n    case 'normal':\n    case 'italic':\n    case 'oblique':\n    case 'inherit':\n    case 'initial':\n    case 'unset':\n      return targetFontStyle;\n    default:\n      if (/^oblique\\s+(-|)\\d+deg$/.test(targetFontStyle)) {\n        return targetFontStyle;\n      }\n      return '';\n  }\n}\n/**\r\n * https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight\r\n * @param fontWeight\r\n * @returns CSS font weight.\r\n */\n\nfunction prepareFontWeight(fontWeight) {\n  if (!fontWeight) {\n    return '';\n  }\n  var targetFontWeight = fontWeight.trim().toLowerCase();\n  switch (targetFontWeight) {\n    case 'normal':\n    case 'bold':\n    case 'lighter':\n    case 'bolder':\n    case 'inherit':\n    case 'initial':\n    case 'unset':\n      return targetFontWeight;\n    default:\n      if (/^[\\d.]+$/.test(targetFontWeight)) {\n        return targetFontWeight;\n      }\n      return '';\n  }\n}\nclass Font {\n  constructor(fontStyle, fontVariant, fontWeight, fontSize, fontFamily, inherit) {\n    var inheritFont = inherit ? typeof inherit === 'string' ? Font.parse(inherit) : inherit : {};\n    this.fontFamily = fontFamily || inheritFont.fontFamily;\n    this.fontSize = fontSize || inheritFont.fontSize;\n    this.fontStyle = fontStyle || inheritFont.fontStyle;\n    this.fontWeight = fontWeight || inheritFont.fontWeight;\n    this.fontVariant = fontVariant || inheritFont.fontVariant;\n  }\n  static parse() {\n    var font = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var inherit = arguments.length > 1 ? arguments[1] : undefined;\n    var fontStyle = '';\n    var fontVariant = '';\n    var fontWeight = '';\n    var fontSize = '';\n    var fontFamily = '';\n    var parts = compressSpaces(font).trim().split(' ');\n    var set = {\n      fontSize: false,\n      fontStyle: false,\n      fontWeight: false,\n      fontVariant: false\n    };\n    parts.forEach(part => {\n      switch (true) {\n        case !set.fontStyle && Font.styles.includes(part):\n          if (part !== 'inherit') {\n            fontStyle = part;\n          }\n          set.fontStyle = true;\n          break;\n        case !set.fontVariant && Font.variants.includes(part):\n          if (part !== 'inherit') {\n            fontVariant = part;\n          }\n          set.fontStyle = true;\n          set.fontVariant = true;\n          break;\n        case !set.fontWeight && Font.weights.includes(part):\n          if (part !== 'inherit') {\n            fontWeight = part;\n          }\n          set.fontStyle = true;\n          set.fontVariant = true;\n          set.fontWeight = true;\n          break;\n        case !set.fontSize:\n          if (part !== 'inherit') {\n            [fontSize] = part.split('/');\n          }\n          set.fontStyle = true;\n          set.fontVariant = true;\n          set.fontWeight = true;\n          set.fontSize = true;\n          break;\n        default:\n          if (part !== 'inherit') {\n            fontFamily += part;\n          }\n      }\n    });\n    return new Font(fontStyle, fontVariant, fontWeight, fontSize, fontFamily, inherit);\n  }\n  toString() {\n    return [prepareFontStyle(this.fontStyle), this.fontVariant, prepareFontWeight(this.fontWeight), this.fontSize,\n    // Wrap fontFamily only on nodejs and only for canvas.ctx\n    prepareFontFamily(this.fontFamily)].join(' ').trim();\n  }\n}\nFont.styles = 'normal|italic|oblique|inherit';\nFont.variants = 'normal|small-caps|inherit';\nFont.weights = 'normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit';\nclass BoundingBox {\n  constructor() {\n    var x1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Number.NaN;\n    var y1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.NaN;\n    var x2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.NaN;\n    var y2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Number.NaN;\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n  get x() {\n    return this.x1;\n  }\n  get y() {\n    return this.y1;\n  }\n  get width() {\n    return this.x2 - this.x1;\n  }\n  get height() {\n    return this.y2 - this.y1;\n  }\n  addPoint(x, y) {\n    if (typeof x !== 'undefined') {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x;\n        this.x2 = x;\n      }\n      if (x < this.x1) {\n        this.x1 = x;\n      }\n      if (x > this.x2) {\n        this.x2 = x;\n      }\n    }\n    if (typeof y !== 'undefined') {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y;\n        this.y2 = y;\n      }\n      if (y < this.y1) {\n        this.y1 = y;\n      }\n      if (y > this.y2) {\n        this.y2 = y;\n      }\n    }\n  }\n  addX(x) {\n    this.addPoint(x, null);\n  }\n  addY(y) {\n    this.addPoint(null, y);\n  }\n  addBoundingBox(boundingBox) {\n    if (!boundingBox) {\n      return;\n    }\n    var {\n      x1,\n      y1,\n      x2,\n      y2\n    } = boundingBox;\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n  sumCubic(t, p0, p1, p2, p3) {\n    return Math.pow(1 - t, 3) * p0 + 3 * Math.pow(1 - t, 2) * t * p1 + 3 * (1 - t) * Math.pow(t, 2) * p2 + Math.pow(t, 3) * p3;\n  }\n  bezierCurveAdd(forX, p0, p1, p2, p3) {\n    var b = 6 * p0 - 12 * p1 + 6 * p2;\n    var a = -3 * p0 + 9 * p1 - 9 * p2 + 3 * p3;\n    var c = 3 * p1 - 3 * p0;\n    if (a === 0) {\n      if (b === 0) {\n        return;\n      }\n      var t = -c / b;\n      if (0 < t && t < 1) {\n        if (forX) {\n          this.addX(this.sumCubic(t, p0, p1, p2, p3));\n        } else {\n          this.addY(this.sumCubic(t, p0, p1, p2, p3));\n        }\n      }\n      return;\n    }\n    var b2ac = Math.pow(b, 2) - 4 * c * a;\n    if (b2ac < 0) {\n      return;\n    }\n    var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n    if (0 < t1 && t1 < 1) {\n      if (forX) {\n        this.addX(this.sumCubic(t1, p0, p1, p2, p3));\n      } else {\n        this.addY(this.sumCubic(t1, p0, p1, p2, p3));\n      }\n    }\n    var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n    if (0 < t2 && t2 < 1) {\n      if (forX) {\n        this.addX(this.sumCubic(t2, p0, p1, p2, p3));\n      } else {\n        this.addY(this.sumCubic(t2, p0, p1, p2, p3));\n      }\n    }\n  } // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\n  addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n    this.addPoint(p0x, p0y);\n    this.addPoint(p3x, p3y);\n    this.bezierCurveAdd(true, p0x, p1x, p2x, p3x);\n    this.bezierCurveAdd(false, p0y, p1y, p2y, p3y);\n  }\n  addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n    var cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n\n    var cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n\n    var cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n\n    var cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n\n    this.addBezierCurve(p0x, p0y, cp1x, cp2x, cp1y, cp2y, p2x, p2y);\n  }\n  isPointInBox(x, y) {\n    var {\n      x1,\n      y1,\n      x2,\n      y2\n    } = this;\n    return x1 <= x && x <= x2 && y1 <= y && y <= y2;\n  }\n}\nclass PathParser extends SVGPathData {\n  constructor(path) {\n    super(path // Fix spaces after signs.\n    .replace(/([+\\-.])\\s+/gm, '$1') // Remove invalid part.\n    .replace(/[^MmZzLlHhVvCcSsQqTtAae\\d\\s.,+-].*/g, ''));\n    this.control = null;\n    this.start = null;\n    this.current = null;\n    this.command = null;\n    this.commands = this.commands;\n    this.i = -1;\n    this.previousCommand = null;\n    this.points = [];\n    this.angles = [];\n  }\n  reset() {\n    this.i = -1;\n    this.command = null;\n    this.previousCommand = null;\n    this.start = new Point(0, 0);\n    this.control = new Point(0, 0);\n    this.current = new Point(0, 0);\n    this.points = [];\n    this.angles = [];\n  }\n  isEnd() {\n    var {\n      i,\n      commands\n    } = this;\n    return i >= commands.length - 1;\n  }\n  next() {\n    var command = this.commands[++this.i];\n    this.previousCommand = this.command;\n    this.command = command;\n    return command;\n  }\n  getPoint() {\n    var xProp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'x';\n    var yProp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'y';\n    var point = new Point(this.command[xProp], this.command[yProp]);\n    return this.makeAbsolute(point);\n  }\n  getAsControlPoint(xProp, yProp) {\n    var point = this.getPoint(xProp, yProp);\n    this.control = point;\n    return point;\n  }\n  getAsCurrentPoint(xProp, yProp) {\n    var point = this.getPoint(xProp, yProp);\n    this.current = point;\n    return point;\n  }\n  getReflectedControlPoint() {\n    var previousCommand = this.previousCommand.type;\n    if (previousCommand !== SVGPathData.CURVE_TO && previousCommand !== SVGPathData.SMOOTH_CURVE_TO && previousCommand !== SVGPathData.QUAD_TO && previousCommand !== SVGPathData.SMOOTH_QUAD_TO) {\n      return this.current;\n    } // reflect point\n\n    var {\n      current: {\n        x: cx,\n        y: cy\n      },\n      control: {\n        x: ox,\n        y: oy\n      }\n    } = this;\n    var point = new Point(2 * cx - ox, 2 * cy - oy);\n    return point;\n  }\n  makeAbsolute(point) {\n    if (this.command.relative) {\n      var {\n        x,\n        y\n      } = this.current;\n      point.x += x;\n      point.y += y;\n    }\n    return point;\n  }\n  addMarker(point, from, priorTo) {\n    var {\n      points,\n      angles\n    } = this; // if the last angle isn't filled in because we didn't have this point yet ...\n\n    if (priorTo && angles.length > 0 && !angles[angles.length - 1]) {\n      angles[angles.length - 1] = points[points.length - 1].angleTo(priorTo);\n    }\n    this.addMarkerAngle(point, from ? from.angleTo(point) : null);\n  }\n  addMarkerAngle(point, angle) {\n    this.points.push(point);\n    this.angles.push(angle);\n  }\n  getMarkerPoints() {\n    return this.points;\n  }\n  getMarkerAngles() {\n    var {\n      angles\n    } = this;\n    var len = angles.length;\n    for (var i = 0; i < len; i++) {\n      if (!angles[i]) {\n        for (var j = i + 1; j < len; j++) {\n          if (angles[j]) {\n            angles[i] = angles[j];\n            break;\n          }\n        }\n      }\n    }\n    return angles;\n  }\n}\nclass RenderedElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.modifiedEmSizeStack = false;\n  }\n  calculateOpacity() {\n    var opacity = 1.0; // eslint-disable-next-line @typescript-eslint/no-this-alias, consistent-this\n\n    var element = this;\n    while (element) {\n      var opacityStyle = element.getStyle('opacity', false, true); // no ancestors on style call\n\n      if (opacityStyle.hasValue(true)) {\n        opacity *= opacityStyle.getNumber();\n      }\n      element = element.parent;\n    }\n    return opacity;\n  }\n  setContext(ctx) {\n    var fromMeasure = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!fromMeasure) {\n      // causes stack overflow when measuring text with gradients\n      // fill\n      var fillStyleProp = this.getStyle('fill');\n      var fillOpacityStyleProp = this.getStyle('fill-opacity');\n      var strokeStyleProp = this.getStyle('stroke');\n      var strokeOpacityProp = this.getStyle('stroke-opacity');\n      if (fillStyleProp.isUrlDefinition()) {\n        var fillStyle = fillStyleProp.getFillStyleDefinition(this, fillOpacityStyleProp);\n        if (fillStyle) {\n          ctx.fillStyle = fillStyle;\n        }\n      } else if (fillStyleProp.hasValue()) {\n        if (fillStyleProp.getString() === 'currentColor') {\n          fillStyleProp.setValue(this.getStyle('color').getColor());\n        }\n        var _fillStyle = fillStyleProp.getColor();\n        if (_fillStyle !== 'inherit') {\n          ctx.fillStyle = _fillStyle === 'none' ? 'rgba(0,0,0,0)' : _fillStyle;\n        }\n      }\n      if (fillOpacityStyleProp.hasValue()) {\n        var _fillStyle2 = new Property(this.document, 'fill', ctx.fillStyle).addOpacity(fillOpacityStyleProp).getColor();\n        ctx.fillStyle = _fillStyle2;\n      } // stroke\n\n      if (strokeStyleProp.isUrlDefinition()) {\n        var strokeStyle = strokeStyleProp.getFillStyleDefinition(this, strokeOpacityProp);\n        if (strokeStyle) {\n          ctx.strokeStyle = strokeStyle;\n        }\n      } else if (strokeStyleProp.hasValue()) {\n        if (strokeStyleProp.getString() === 'currentColor') {\n          strokeStyleProp.setValue(this.getStyle('color').getColor());\n        }\n        var _strokeStyle = strokeStyleProp.getString();\n        if (_strokeStyle !== 'inherit') {\n          ctx.strokeStyle = _strokeStyle === 'none' ? 'rgba(0,0,0,0)' : _strokeStyle;\n        }\n      }\n      if (strokeOpacityProp.hasValue()) {\n        var _strokeStyle2 = new Property(this.document, 'stroke', ctx.strokeStyle).addOpacity(strokeOpacityProp).getString();\n        ctx.strokeStyle = _strokeStyle2;\n      }\n      var strokeWidthStyleProp = this.getStyle('stroke-width');\n      if (strokeWidthStyleProp.hasValue()) {\n        var newLineWidth = strokeWidthStyleProp.getPixels();\n        ctx.lineWidth = !newLineWidth ? PSEUDO_ZERO // browsers don't respect 0 (or node-canvas? :-)\n        : newLineWidth;\n      }\n      var strokeLinecapStyleProp = this.getStyle('stroke-linecap');\n      var strokeLinejoinStyleProp = this.getStyle('stroke-linejoin');\n      var strokeMiterlimitProp = this.getStyle('stroke-miterlimit'); // NEED TEST\n      // const pointOrderStyleProp = this.getStyle('paint-order');\n\n      var strokeDasharrayStyleProp = this.getStyle('stroke-dasharray');\n      var strokeDashoffsetProp = this.getStyle('stroke-dashoffset');\n      if (strokeLinecapStyleProp.hasValue()) {\n        ctx.lineCap = strokeLinecapStyleProp.getString();\n      }\n      if (strokeLinejoinStyleProp.hasValue()) {\n        ctx.lineJoin = strokeLinejoinStyleProp.getString();\n      }\n      if (strokeMiterlimitProp.hasValue()) {\n        ctx.miterLimit = strokeMiterlimitProp.getNumber();\n      } // NEED TEST\n      // if (pointOrderStyleProp.hasValue()) {\n      // \t// ?\n      // \tctx.paintOrder = pointOrderStyleProp.getValue();\n      // }\n\n      if (strokeDasharrayStyleProp.hasValue() && strokeDasharrayStyleProp.getString() !== 'none') {\n        var gaps = toNumbers(strokeDasharrayStyleProp.getString());\n        if (typeof ctx.setLineDash !== 'undefined') {\n          ctx.setLineDash(gaps);\n        } else\n          // @ts-expect-error Handle browser prefix.\n          if (typeof ctx.webkitLineDash !== 'undefined') {\n            // @ts-expect-error Handle browser prefix.\n            ctx.webkitLineDash = gaps;\n          } else\n            // @ts-expect-error Handle browser prefix.\n            if (typeof ctx.mozDash !== 'undefined' && !(gaps.length === 1 && gaps[0] === 0)) {\n              // @ts-expect-error Handle browser prefix.\n              ctx.mozDash = gaps;\n            }\n        var offset = strokeDashoffsetProp.getPixels();\n        if (typeof ctx.lineDashOffset !== 'undefined') {\n          ctx.lineDashOffset = offset;\n        } else\n          // @ts-expect-error Handle browser prefix.\n          if (typeof ctx.webkitLineDashOffset !== 'undefined') {\n            // @ts-expect-error Handle browser prefix.\n            ctx.webkitLineDashOffset = offset;\n          } else\n            // @ts-expect-error Handle browser prefix.\n            if (typeof ctx.mozDashOffset !== 'undefined') {\n              // @ts-expect-error Handle browser prefix.\n              ctx.mozDashOffset = offset;\n            }\n      }\n    } // font\n\n    this.modifiedEmSizeStack = false;\n    if (typeof ctx.font !== 'undefined') {\n      var fontStyleProp = this.getStyle('font');\n      var fontStyleStyleProp = this.getStyle('font-style');\n      var fontVariantStyleProp = this.getStyle('font-variant');\n      var fontWeightStyleProp = this.getStyle('font-weight');\n      var fontSizeStyleProp = this.getStyle('font-size');\n      var fontFamilyStyleProp = this.getStyle('font-family');\n      var font = new Font(fontStyleStyleProp.getString(), fontVariantStyleProp.getString(), fontWeightStyleProp.getString(), fontSizeStyleProp.hasValue() ? \"\".concat(fontSizeStyleProp.getPixels(true), \"px\") : '', fontFamilyStyleProp.getString(), Font.parse(fontStyleProp.getString(), ctx.font));\n      fontStyleStyleProp.setValue(font.fontStyle);\n      fontVariantStyleProp.setValue(font.fontVariant);\n      fontWeightStyleProp.setValue(font.fontWeight);\n      fontSizeStyleProp.setValue(font.fontSize);\n      fontFamilyStyleProp.setValue(font.fontFamily);\n      ctx.font = font.toString();\n      if (fontSizeStyleProp.isPixels()) {\n        this.document.emSize = fontSizeStyleProp.getPixels();\n        this.modifiedEmSizeStack = true;\n      }\n    }\n    if (!fromMeasure) {\n      // effects\n      this.applyEffects(ctx); // opacity\n\n      ctx.globalAlpha = this.calculateOpacity();\n    }\n  }\n  clearContext(ctx) {\n    super.clearContext(ctx);\n    if (this.modifiedEmSizeStack) {\n      this.document.popEmSize();\n    }\n  }\n}\nclass PathElement extends RenderedElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'path';\n    this.pathParser = null;\n    this.pathParser = new PathParser(this.getAttribute('d').getString());\n  }\n  path(ctx) {\n    var {\n      pathParser\n    } = this;\n    var boundingBox = new BoundingBox();\n    pathParser.reset();\n    if (ctx) {\n      ctx.beginPath();\n    }\n    while (!pathParser.isEnd()) {\n      switch (pathParser.next().type) {\n        case PathParser.MOVE_TO:\n          this.pathM(ctx, boundingBox);\n          break;\n        case PathParser.LINE_TO:\n          this.pathL(ctx, boundingBox);\n          break;\n        case PathParser.HORIZ_LINE_TO:\n          this.pathH(ctx, boundingBox);\n          break;\n        case PathParser.VERT_LINE_TO:\n          this.pathV(ctx, boundingBox);\n          break;\n        case PathParser.CURVE_TO:\n          this.pathC(ctx, boundingBox);\n          break;\n        case PathParser.SMOOTH_CURVE_TO:\n          this.pathS(ctx, boundingBox);\n          break;\n        case PathParser.QUAD_TO:\n          this.pathQ(ctx, boundingBox);\n          break;\n        case PathParser.SMOOTH_QUAD_TO:\n          this.pathT(ctx, boundingBox);\n          break;\n        case PathParser.ARC:\n          this.pathA(ctx, boundingBox);\n          break;\n        case PathParser.CLOSE_PATH:\n          this.pathZ(ctx, boundingBox);\n          break;\n      }\n    }\n    return boundingBox;\n  }\n  getBoundingBox(_) {\n    return this.path();\n  }\n  getMarkers() {\n    var {\n      pathParser\n    } = this;\n    var points = pathParser.getMarkerPoints();\n    var angles = pathParser.getMarkerAngles();\n    var markers = points.map((point, i) => [point, angles[i]]);\n    return markers;\n  }\n  renderChildren(ctx) {\n    this.path(ctx);\n    this.document.screen.mouse.checkPath(this, ctx);\n    var fillRuleStyleProp = this.getStyle('fill-rule');\n    if (ctx.fillStyle !== '') {\n      if (fillRuleStyleProp.getString('inherit') !== 'inherit') {\n        ctx.fill(fillRuleStyleProp.getString());\n      } else {\n        ctx.fill();\n      }\n    }\n    if (ctx.strokeStyle !== '') {\n      if (this.getAttribute('vector-effect').getString() === 'non-scaling-stroke') {\n        ctx.save();\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        ctx.stroke();\n      }\n    }\n    var markers = this.getMarkers();\n    if (markers) {\n      var markersLastIndex = markers.length - 1;\n      var markerStartStyleProp = this.getStyle('marker-start');\n      var markerMidStyleProp = this.getStyle('marker-mid');\n      var markerEndStyleProp = this.getStyle('marker-end');\n      if (markerStartStyleProp.isUrlDefinition()) {\n        var marker = markerStartStyleProp.getDefinition();\n        var [point, angle] = markers[0];\n        marker.render(ctx, point, angle);\n      }\n      if (markerMidStyleProp.isUrlDefinition()) {\n        var _marker = markerMidStyleProp.getDefinition();\n        for (var i = 1; i < markersLastIndex; i++) {\n          var [_point, _angle] = markers[i];\n          _marker.render(ctx, _point, _angle);\n        }\n      }\n      if (markerEndStyleProp.isUrlDefinition()) {\n        var _marker2 = markerEndStyleProp.getDefinition();\n        var [_point2, _angle2] = markers[markersLastIndex];\n        _marker2.render(ctx, _point2, _angle2);\n      }\n    }\n  }\n  static pathM(pathParser) {\n    var point = pathParser.getAsCurrentPoint();\n    pathParser.start = pathParser.current;\n    return {\n      point\n    };\n  }\n  pathM(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      point\n    } = PathElement.pathM(pathParser);\n    var {\n      x,\n      y\n    } = point;\n    pathParser.addMarker(point);\n    boundingBox.addPoint(x, y);\n    if (ctx) {\n      ctx.moveTo(x, y);\n    }\n  }\n  static pathL(pathParser) {\n    var {\n      current\n    } = pathParser;\n    var point = pathParser.getAsCurrentPoint();\n    return {\n      current,\n      point\n    };\n  }\n  pathL(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      current,\n      point\n    } = PathElement.pathL(pathParser);\n    var {\n      x,\n      y\n    } = point;\n    pathParser.addMarker(point, current);\n    boundingBox.addPoint(x, y);\n    if (ctx) {\n      ctx.lineTo(x, y);\n    }\n  }\n  static pathH(pathParser) {\n    var {\n      current,\n      command\n    } = pathParser;\n    var point = new Point((command.relative ? current.x : 0) + command.x, current.y);\n    pathParser.current = point;\n    return {\n      current,\n      point\n    };\n  }\n  pathH(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      current,\n      point\n    } = PathElement.pathH(pathParser);\n    var {\n      x,\n      y\n    } = point;\n    pathParser.addMarker(point, current);\n    boundingBox.addPoint(x, y);\n    if (ctx) {\n      ctx.lineTo(x, y);\n    }\n  }\n  static pathV(pathParser) {\n    var {\n      current,\n      command\n    } = pathParser;\n    var point = new Point(current.x, (command.relative ? current.y : 0) + command.y);\n    pathParser.current = point;\n    return {\n      current,\n      point\n    };\n  }\n  pathV(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      current,\n      point\n    } = PathElement.pathV(pathParser);\n    var {\n      x,\n      y\n    } = point;\n    pathParser.addMarker(point, current);\n    boundingBox.addPoint(x, y);\n    if (ctx) {\n      ctx.lineTo(x, y);\n    }\n  }\n  static pathC(pathParser) {\n    var {\n      current\n    } = pathParser;\n    var point = pathParser.getPoint('x1', 'y1');\n    var controlPoint = pathParser.getAsControlPoint('x2', 'y2');\n    var currentPoint = pathParser.getAsCurrentPoint();\n    return {\n      current,\n      point,\n      controlPoint,\n      currentPoint\n    };\n  }\n  pathC(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      current,\n      point,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathC(pathParser);\n    pathParser.addMarker(currentPoint, controlPoint, point);\n    boundingBox.addBezierCurve(current.x, current.y, point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    if (ctx) {\n      ctx.bezierCurveTo(point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    }\n  }\n  static pathS(pathParser) {\n    var {\n      current\n    } = pathParser;\n    var point = pathParser.getReflectedControlPoint();\n    var controlPoint = pathParser.getAsControlPoint('x2', 'y2');\n    var currentPoint = pathParser.getAsCurrentPoint();\n    return {\n      current,\n      point,\n      controlPoint,\n      currentPoint\n    };\n  }\n  pathS(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      current,\n      point,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathS(pathParser);\n    pathParser.addMarker(currentPoint, controlPoint, point);\n    boundingBox.addBezierCurve(current.x, current.y, point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    if (ctx) {\n      ctx.bezierCurveTo(point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    }\n  }\n  static pathQ(pathParser) {\n    var {\n      current\n    } = pathParser;\n    var controlPoint = pathParser.getAsControlPoint('x1', 'y1');\n    var currentPoint = pathParser.getAsCurrentPoint();\n    return {\n      current,\n      controlPoint,\n      currentPoint\n    };\n  }\n  pathQ(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      current,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathQ(pathParser);\n    pathParser.addMarker(currentPoint, controlPoint, controlPoint);\n    boundingBox.addQuadraticCurve(current.x, current.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    if (ctx) {\n      ctx.quadraticCurveTo(controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    }\n  }\n  static pathT(pathParser) {\n    var {\n      current\n    } = pathParser;\n    var controlPoint = pathParser.getReflectedControlPoint();\n    pathParser.control = controlPoint;\n    var currentPoint = pathParser.getAsCurrentPoint();\n    return {\n      current,\n      controlPoint,\n      currentPoint\n    };\n  }\n  pathT(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      current,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathT(pathParser);\n    pathParser.addMarker(currentPoint, controlPoint, controlPoint);\n    boundingBox.addQuadraticCurve(current.x, current.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    if (ctx) {\n      ctx.quadraticCurveTo(controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    }\n  }\n  static pathA(pathParser) {\n    var {\n      current,\n      command\n    } = pathParser;\n    var {\n      rX,\n      rY,\n      xRot,\n      lArcFlag,\n      sweepFlag\n    } = command;\n    var xAxisRotation = xRot * (Math.PI / 180.0);\n    var currentPoint = pathParser.getAsCurrentPoint(); // Conversion from endpoint to center parameterization\n    // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n    // x1', y1'\n\n    var currp = new Point(Math.cos(xAxisRotation) * (current.x - currentPoint.x) / 2.0 + Math.sin(xAxisRotation) * (current.y - currentPoint.y) / 2.0, -Math.sin(xAxisRotation) * (current.x - currentPoint.x) / 2.0 + Math.cos(xAxisRotation) * (current.y - currentPoint.y) / 2.0); // adjust radii\n\n    var l = Math.pow(currp.x, 2) / Math.pow(rX, 2) + Math.pow(currp.y, 2) / Math.pow(rY, 2);\n    if (l > 1) {\n      rX *= Math.sqrt(l);\n      rY *= Math.sqrt(l);\n    } // cx', cy'\n\n    var s = (lArcFlag === sweepFlag ? -1 : 1) * Math.sqrt((Math.pow(rX, 2) * Math.pow(rY, 2) - Math.pow(rX, 2) * Math.pow(currp.y, 2) - Math.pow(rY, 2) * Math.pow(currp.x, 2)) / (Math.pow(rX, 2) * Math.pow(currp.y, 2) + Math.pow(rY, 2) * Math.pow(currp.x, 2)));\n    if (isNaN(s)) {\n      s = 0;\n    }\n    var cpp = new Point(s * rX * currp.y / rY, s * -rY * currp.x / rX); // cx, cy\n\n    var centp = new Point((current.x + currentPoint.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y, (current.y + currentPoint.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y); // initial angle\n\n    var a1 = vectorsAngle([1, 0], [(currp.x - cpp.x) / rX, (currp.y - cpp.y) / rY]); // θ1\n    // angle delta\n\n    var u = [(currp.x - cpp.x) / rX, (currp.y - cpp.y) / rY];\n    var v = [(-currp.x - cpp.x) / rX, (-currp.y - cpp.y) / rY];\n    var ad = vectorsAngle(u, v); // Δθ\n\n    if (vectorsRatio(u, v) <= -1) {\n      ad = Math.PI;\n    }\n    if (vectorsRatio(u, v) >= 1) {\n      ad = 0;\n    }\n    return {\n      currentPoint,\n      rX,\n      rY,\n      sweepFlag,\n      xAxisRotation,\n      centp,\n      a1,\n      ad\n    };\n  }\n  pathA(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      currentPoint,\n      rX,\n      rY,\n      sweepFlag,\n      xAxisRotation,\n      centp,\n      a1,\n      ad\n    } = PathElement.pathA(pathParser); // for markers\n\n    var dir = 1 - sweepFlag ? 1.0 : -1.0;\n    var ah = a1 + dir * (ad / 2.0);\n    var halfWay = new Point(centp.x + rX * Math.cos(ah), centp.y + rY * Math.sin(ah));\n    pathParser.addMarkerAngle(halfWay, ah - dir * Math.PI / 2);\n    pathParser.addMarkerAngle(currentPoint, ah - dir * Math.PI);\n    boundingBox.addPoint(currentPoint.x, currentPoint.y); // TODO: this is too naive, make it better\n\n    if (ctx && !isNaN(a1) && !isNaN(ad)) {\n      var r = rX > rY ? rX : rY;\n      var sx = rX > rY ? 1 : rX / rY;\n      var sy = rX > rY ? rY / rX : 1;\n      ctx.translate(centp.x, centp.y);\n      ctx.rotate(xAxisRotation);\n      ctx.scale(sx, sy);\n      ctx.arc(0, 0, r, a1, a1 + ad, Boolean(1 - sweepFlag));\n      ctx.scale(1 / sx, 1 / sy);\n      ctx.rotate(-xAxisRotation);\n      ctx.translate(-centp.x, -centp.y);\n    }\n  }\n  static pathZ(pathParser) {\n    pathParser.current = pathParser.start;\n  }\n  pathZ(ctx, boundingBox) {\n    PathElement.pathZ(this.pathParser);\n    if (ctx) {\n      // only close path if it is not a straight line\n      if (boundingBox.x1 !== boundingBox.x2 && boundingBox.y1 !== boundingBox.y2) {\n        ctx.closePath();\n      }\n    }\n  }\n}\nclass GlyphElement extends PathElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'glyph';\n    this.horizAdvX = this.getAttribute('horiz-adv-x').getNumber();\n    this.unicode = this.getAttribute('unicode').getString();\n    this.arabicForm = this.getAttribute('arabic-form').getString();\n  }\n}\nclass TextElement extends RenderedElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, new.target === TextElement ? true : captureTextNodes);\n    this.type = 'text';\n    this.x = 0;\n    this.y = 0;\n    this.measureCache = -1;\n  }\n  setContext(ctx) {\n    var fromMeasure = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    super.setContext(ctx, fromMeasure);\n    var textBaseline = this.getStyle('dominant-baseline').getTextBaseline() || this.getStyle('alignment-baseline').getTextBaseline();\n    if (textBaseline) {\n      ctx.textBaseline = textBaseline;\n    }\n  }\n  initializeCoordinates() {\n    this.x = 0;\n    this.y = 0;\n    this.leafTexts = [];\n    this.textChunkStart = 0;\n    this.minX = Number.POSITIVE_INFINITY;\n    this.maxX = Number.NEGATIVE_INFINITY;\n  }\n  getBoundingBox(ctx) {\n    if (this.type !== 'text') {\n      return this.getTElementBoundingBox(ctx);\n    } // first, calculate child positions\n\n    this.initializeCoordinates();\n    this.adjustChildCoordinatesRecursive(ctx);\n    var boundingBox = null; // then calculate bounding box\n\n    this.children.forEach((_, i) => {\n      var childBoundingBox = this.getChildBoundingBox(ctx, this, this, i);\n      if (!boundingBox) {\n        boundingBox = childBoundingBox;\n      } else {\n        boundingBox.addBoundingBox(childBoundingBox);\n      }\n    });\n    return boundingBox;\n  }\n  getFontSize() {\n    var {\n      document,\n      parent\n    } = this;\n    var inheritFontSize = Font.parse(document.ctx.font).fontSize;\n    var fontSize = parent.getStyle('font-size').getNumber(inheritFontSize);\n    return fontSize;\n  }\n  getTElementBoundingBox(ctx) {\n    var fontSize = this.getFontSize();\n    return new BoundingBox(this.x, this.y - fontSize, this.x + this.measureText(ctx), this.y);\n  }\n  getGlyph(font, text, i) {\n    var char = text[i];\n    var glyph = null;\n    if (font.isArabic) {\n      var len = text.length;\n      var prevChar = text[i - 1];\n      var nextChar = text[i + 1];\n      var arabicForm = 'isolated';\n      if ((i === 0 || prevChar === ' ') && i < len - 1 && nextChar !== ' ') {\n        arabicForm = 'terminal';\n      }\n      if (i > 0 && prevChar !== ' ' && i < len - 1 && nextChar !== ' ') {\n        arabicForm = 'medial';\n      }\n      if (i > 0 && prevChar !== ' ' && (i === len - 1 || nextChar === ' ')) {\n        arabicForm = 'initial';\n      }\n      if (typeof font.glyphs[char] !== 'undefined') {\n        // NEED TEST\n        var maybeGlyph = font.glyphs[char];\n        glyph = maybeGlyph instanceof GlyphElement ? maybeGlyph : maybeGlyph[arabicForm];\n      }\n    } else {\n      glyph = font.glyphs[char];\n    }\n    if (!glyph) {\n      glyph = font.missingGlyph;\n    }\n    return glyph;\n  }\n  getText() {\n    return '';\n  }\n  getTextFromNode(node) {\n    var textNode = node || this.node;\n    var childNodes = Array.from(textNode.parentNode.childNodes);\n    var index = childNodes.indexOf(textNode);\n    var lastIndex = childNodes.length - 1;\n    var text = compressSpaces(\n    // textNode.value\n    // || textNode.text\n    textNode.textContent || '');\n    if (index === 0) {\n      text = trimLeft(text);\n    }\n    if (index === lastIndex) {\n      text = trimRight(text);\n    }\n    return text;\n  }\n  renderChildren(ctx) {\n    if (this.type !== 'text') {\n      this.renderTElementChildren(ctx);\n      return;\n    } // first, calculate child positions\n\n    this.initializeCoordinates();\n    this.adjustChildCoordinatesRecursive(ctx); // then render\n\n    this.children.forEach((_, i) => {\n      this.renderChild(ctx, this, this, i);\n    });\n    var {\n      mouse\n    } = this.document.screen; // Do not calc bounding box if mouse is not working.\n\n    if (mouse.isWorking()) {\n      mouse.checkBoundingBox(this, this.getBoundingBox(ctx));\n    }\n  }\n  renderTElementChildren(ctx) {\n    var {\n      document,\n      parent\n    } = this;\n    var renderText = this.getText();\n    var customFont = parent.getStyle('font-family').getDefinition();\n    if (customFont) {\n      var {\n        unitsPerEm\n      } = customFont.fontFace;\n      var ctxFont = Font.parse(document.ctx.font);\n      var fontSize = parent.getStyle('font-size').getNumber(ctxFont.fontSize);\n      var fontStyle = parent.getStyle('font-style').getString(ctxFont.fontStyle);\n      var scale = fontSize / unitsPerEm;\n      var text = customFont.isRTL ? renderText.split('').reverse().join('') : renderText;\n      var dx = toNumbers(parent.getAttribute('dx').getString());\n      var len = text.length;\n      for (var i = 0; i < len; i++) {\n        var glyph = this.getGlyph(customFont, text, i);\n        ctx.translate(this.x, this.y);\n        ctx.scale(scale, -scale);\n        var lw = ctx.lineWidth;\n        ctx.lineWidth = ctx.lineWidth * unitsPerEm / fontSize;\n        if (fontStyle === 'italic') {\n          ctx.transform(1, 0, .4, 1, 0, 0);\n        }\n        glyph.render(ctx);\n        if (fontStyle === 'italic') {\n          ctx.transform(1, 0, -.4, 1, 0, 0);\n        }\n        ctx.lineWidth = lw;\n        ctx.scale(1 / scale, -1 / scale);\n        ctx.translate(-this.x, -this.y);\n        this.x += fontSize * (glyph.horizAdvX || customFont.horizAdvX) / unitsPerEm;\n        if (typeof dx[i] !== 'undefined' && !isNaN(dx[i])) {\n          this.x += dx[i];\n        }\n      }\n      return;\n    }\n    var {\n      x,\n      y\n    } = this; // NEED TEST\n    // if (ctx.paintOrder === 'stroke') {\n    // \tif (ctx.strokeStyle) {\n    // \t\tctx.strokeText(renderText, x, y);\n    // \t}\n    // \tif (ctx.fillStyle) {\n    // \t\tctx.fillText(renderText, x, y);\n    // \t}\n    // } else {\n\n    if (ctx.fillStyle) {\n      ctx.fillText(renderText, x, y);\n    }\n    if (ctx.strokeStyle) {\n      ctx.strokeText(renderText, x, y);\n    } // }\n  }\n  applyAnchoring() {\n    if (this.textChunkStart >= this.leafTexts.length) {\n      return;\n    } // This is basically the \"Apply anchoring\" part of https://www.w3.org/TR/SVG2/text.html#TextLayoutAlgorithm.\n    // The difference is that we apply the anchoring as soon as a chunk is finished. This saves some extra looping.\n    // Vertical text is not supported.\n\n    var firstElement = this.leafTexts[this.textChunkStart];\n    var textAnchor = firstElement.getStyle('text-anchor').getString('start');\n    var isRTL = false; // we treat RTL like LTR\n\n    var shift = 0;\n    if (textAnchor === 'start' && !isRTL || textAnchor === 'end' && isRTL) {\n      shift = firstElement.x - this.minX;\n    } else if (textAnchor === 'end' && !isRTL || textAnchor === 'start' && isRTL) {\n      shift = firstElement.x - this.maxX;\n    } else {\n      shift = firstElement.x - (this.minX + this.maxX) / 2;\n    }\n    for (var i = this.textChunkStart; i < this.leafTexts.length; i++) {\n      this.leafTexts[i].x += shift;\n    } // start new chunk\n\n    this.minX = Number.POSITIVE_INFINITY;\n    this.maxX = Number.NEGATIVE_INFINITY;\n    this.textChunkStart = this.leafTexts.length;\n  }\n  adjustChildCoordinatesRecursive(ctx) {\n    this.children.forEach((_, i) => {\n      this.adjustChildCoordinatesRecursiveCore(ctx, this, this, i);\n    });\n    this.applyAnchoring();\n  }\n  adjustChildCoordinatesRecursiveCore(ctx, textParent, parent, i) {\n    var child = parent.children[i];\n    if (child.children.length > 0) {\n      child.children.forEach((_, i) => {\n        textParent.adjustChildCoordinatesRecursiveCore(ctx, textParent, child, i);\n      });\n    } else {\n      // only leafs are relevant\n      this.adjustChildCoordinates(ctx, textParent, parent, i);\n    }\n  }\n  adjustChildCoordinates(ctx, textParent, parent, i) {\n    var child = parent.children[i];\n    if (typeof child.measureText !== 'function') {\n      return child;\n    }\n    ctx.save();\n    child.setContext(ctx, true);\n    var xAttr = child.getAttribute('x');\n    var yAttr = child.getAttribute('y');\n    var dxAttr = child.getAttribute('dx');\n    var dyAttr = child.getAttribute('dy');\n    var customFont = child.getStyle('font-family').getDefinition();\n    var isRTL = Boolean(customFont) && customFont.isRTL;\n    if (i === 0) {\n      // First children inherit attributes from parent(s). Positional attributes\n      // are only inherited from a parent to it's first child.\n      if (!xAttr.hasValue()) {\n        xAttr.setValue(child.getInheritedAttribute('x'));\n      }\n      if (!yAttr.hasValue()) {\n        yAttr.setValue(child.getInheritedAttribute('y'));\n      }\n      if (!dxAttr.hasValue()) {\n        dxAttr.setValue(child.getInheritedAttribute('dx'));\n      }\n      if (!dyAttr.hasValue()) {\n        dyAttr.setValue(child.getInheritedAttribute('dy'));\n      }\n    }\n    var width = child.measureText(ctx);\n    if (isRTL) {\n      textParent.x -= width;\n    }\n    if (xAttr.hasValue()) {\n      // an \"x\" attribute marks the start of a new chunk\n      textParent.applyAnchoring();\n      child.x = xAttr.getPixels('x');\n      if (dxAttr.hasValue()) {\n        child.x += dxAttr.getPixels('x');\n      }\n    } else {\n      if (dxAttr.hasValue()) {\n        textParent.x += dxAttr.getPixels('x');\n      }\n      child.x = textParent.x;\n    }\n    textParent.x = child.x;\n    if (!isRTL) {\n      textParent.x += width;\n    }\n    if (yAttr.hasValue()) {\n      child.y = yAttr.getPixels('y');\n      if (dyAttr.hasValue()) {\n        child.y += dyAttr.getPixels('y');\n      }\n    } else {\n      if (dyAttr.hasValue()) {\n        textParent.y += dyAttr.getPixels('y');\n      }\n      child.y = textParent.y;\n    }\n    textParent.y = child.y; // update the current chunk and it's bounds\n\n    textParent.leafTexts.push(child);\n    textParent.minX = Math.min(textParent.minX, child.x, child.x + width);\n    textParent.maxX = Math.max(textParent.maxX, child.x, child.x + width);\n    child.clearContext(ctx);\n    ctx.restore();\n    return child;\n  }\n  getChildBoundingBox(ctx, textParent, parent, i) {\n    var child = parent.children[i]; // not a text node?\n\n    if (typeof child.getBoundingBox !== 'function') {\n      return null;\n    }\n    var boundingBox = child.getBoundingBox(ctx);\n    if (!boundingBox) {\n      return null;\n    }\n    child.children.forEach((_, i) => {\n      var childBoundingBox = textParent.getChildBoundingBox(ctx, textParent, child, i);\n      boundingBox.addBoundingBox(childBoundingBox);\n    });\n    return boundingBox;\n  }\n  renderChild(ctx, textParent, parent, i) {\n    var child = parent.children[i];\n    child.render(ctx);\n    child.children.forEach((_, i) => {\n      textParent.renderChild(ctx, textParent, child, i);\n    });\n  }\n  measureText(ctx) {\n    var {\n      measureCache\n    } = this;\n    if (~measureCache) {\n      return measureCache;\n    }\n    var renderText = this.getText();\n    var measure = this.measureTargetText(ctx, renderText);\n    this.measureCache = measure;\n    return measure;\n  }\n  measureTargetText(ctx, targetText) {\n    if (!targetText.length) {\n      return 0;\n    }\n    var {\n      parent\n    } = this;\n    var customFont = parent.getStyle('font-family').getDefinition();\n    if (customFont) {\n      var fontSize = this.getFontSize();\n      var text = customFont.isRTL ? targetText.split('').reverse().join('') : targetText;\n      var dx = toNumbers(parent.getAttribute('dx').getString());\n      var len = text.length;\n      var _measure = 0;\n      for (var i = 0; i < len; i++) {\n        var glyph = this.getGlyph(customFont, text, i);\n        _measure += (glyph.horizAdvX || customFont.horizAdvX) * fontSize / customFont.fontFace.unitsPerEm;\n        if (typeof dx[i] !== 'undefined' && !isNaN(dx[i])) {\n          _measure += dx[i];\n        }\n      }\n      return _measure;\n    }\n    if (!ctx.measureText) {\n      return targetText.length * 10;\n    }\n    ctx.save();\n    this.setContext(ctx, true);\n    var {\n      width: measure\n    } = ctx.measureText(targetText);\n    this.clearContext(ctx);\n    ctx.restore();\n    return measure;\n  }\n  /**\r\n   * Inherits positional attributes from {@link TextElement} parent(s). Attributes\r\n   * are only inherited from a parent to its first child.\r\n   * @param name - The attribute name.\r\n   * @returns The attribute value or null.\r\n   */\n\n  getInheritedAttribute(name) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias,consistent-this\n    var current = this;\n    while (current instanceof TextElement && current.isFirstChild()) {\n      var parentAttr = current.parent.getAttribute(name);\n      if (parentAttr.hasValue(true)) {\n        return parentAttr.getValue('0');\n      }\n      current = current.parent;\n    }\n    return null;\n  }\n}\nclass TSpanElement extends TextElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, new.target === TSpanElement ? true : captureTextNodes);\n    this.type = 'tspan'; // if this node has children, then they own the text\n\n    this.text = this.children.length > 0 ? '' : this.getTextFromNode();\n  }\n  getText() {\n    return this.text;\n  }\n}\nclass TextNode extends TSpanElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'textNode';\n  }\n}\nclass SVGElement extends RenderedElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'svg';\n    this.root = false;\n  }\n  setContext(ctx) {\n    var _this$node$parentNode;\n    var {\n      document\n    } = this;\n    var {\n      screen,\n      window\n    } = document;\n    var canvas = ctx.canvas;\n    screen.setDefaults(ctx);\n    if (canvas.style && typeof ctx.font !== 'undefined' && window && typeof window.getComputedStyle !== 'undefined') {\n      ctx.font = window.getComputedStyle(canvas).getPropertyValue('font');\n      var fontSizeProp = new Property(document, 'fontSize', Font.parse(ctx.font).fontSize);\n      if (fontSizeProp.hasValue()) {\n        document.rootEmSize = fontSizeProp.getPixels('y');\n        document.emSize = document.rootEmSize;\n      }\n    } // create new view port\n\n    if (!this.getAttribute('x').hasValue()) {\n      this.getAttribute('x', true).setValue(0);\n    }\n    if (!this.getAttribute('y').hasValue()) {\n      this.getAttribute('y', true).setValue(0);\n    }\n    var {\n      width,\n      height\n    } = screen.viewPort;\n    if (!this.getStyle('width').hasValue()) {\n      this.getStyle('width', true).setValue('100%');\n    }\n    if (!this.getStyle('height').hasValue()) {\n      this.getStyle('height', true).setValue('100%');\n    }\n    if (!this.getStyle('color').hasValue()) {\n      this.getStyle('color', true).setValue('black');\n    }\n    var refXAttr = this.getAttribute('refX');\n    var refYAttr = this.getAttribute('refY');\n    var viewBoxAttr = this.getAttribute('viewBox');\n    var viewBox = viewBoxAttr.hasValue() ? toNumbers(viewBoxAttr.getString()) : null;\n    var clip = !this.root && this.getStyle('overflow').getValue('hidden') !== 'visible';\n    var minX = 0;\n    var minY = 0;\n    var clipX = 0;\n    var clipY = 0;\n    if (viewBox) {\n      minX = viewBox[0];\n      minY = viewBox[1];\n    }\n    if (!this.root) {\n      width = this.getStyle('width').getPixels('x');\n      height = this.getStyle('height').getPixels('y');\n      if (this.type === 'marker') {\n        clipX = minX;\n        clipY = minY;\n        minX = 0;\n        minY = 0;\n      }\n    }\n    screen.viewPort.setCurrent(width, height); // Default value of transform-origin is center only for root SVG elements\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform-origin\n\n    if (this.node // is not temporary SVGElement\n    && (!this.parent || ((_this$node$parentNode = this.node.parentNode) === null || _this$node$parentNode === void 0 ? void 0 : _this$node$parentNode.nodeName) === 'foreignObject') && this.getStyle('transform', false, true).hasValue() && !this.getStyle('transform-origin', false, true).hasValue()) {\n      this.getStyle('transform-origin', true, true).setValue('50% 50%');\n    }\n    super.setContext(ctx);\n    ctx.translate(this.getAttribute('x').getPixels('x'), this.getAttribute('y').getPixels('y'));\n    if (viewBox) {\n      width = viewBox[2];\n      height = viewBox[3];\n    }\n    document.setViewBox({\n      ctx,\n      aspectRatio: this.getAttribute('preserveAspectRatio').getString(),\n      width: screen.viewPort.width,\n      desiredWidth: width,\n      height: screen.viewPort.height,\n      desiredHeight: height,\n      minX,\n      minY,\n      refX: refXAttr.getValue(),\n      refY: refYAttr.getValue(),\n      clip,\n      clipX,\n      clipY\n    });\n    if (viewBox) {\n      screen.viewPort.removeCurrent();\n      screen.viewPort.setCurrent(width, height);\n    }\n  }\n  clearContext(ctx) {\n    super.clearContext(ctx);\n    this.document.screen.viewPort.removeCurrent();\n  }\n  /**\r\n   * Resize SVG to fit in given size.\r\n   * @param width\r\n   * @param height\r\n   * @param preserveAspectRatio\r\n   */\n\n  resize(width) {\n    var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : width;\n    var preserveAspectRatio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var widthAttr = this.getAttribute('width', true);\n    var heightAttr = this.getAttribute('height', true);\n    var viewBoxAttr = this.getAttribute('viewBox');\n    var styleAttr = this.getAttribute('style');\n    var originWidth = widthAttr.getNumber(0);\n    var originHeight = heightAttr.getNumber(0);\n    if (preserveAspectRatio) {\n      if (typeof preserveAspectRatio === 'string') {\n        this.getAttribute('preserveAspectRatio', true).setValue(preserveAspectRatio);\n      } else {\n        var preserveAspectRatioAttr = this.getAttribute('preserveAspectRatio');\n        if (preserveAspectRatioAttr.hasValue()) {\n          preserveAspectRatioAttr.setValue(preserveAspectRatioAttr.getString().replace(/^\\s*(\\S.*\\S)\\s*$/, '$1'));\n        }\n      }\n    }\n    widthAttr.setValue(width);\n    heightAttr.setValue(height);\n    if (!viewBoxAttr.hasValue()) {\n      viewBoxAttr.setValue(\"0 0 \".concat(originWidth || width, \" \").concat(originHeight || height));\n    }\n    if (styleAttr.hasValue()) {\n      var widthStyle = this.getStyle('width');\n      var heightStyle = this.getStyle('height');\n      if (widthStyle.hasValue()) {\n        widthStyle.setValue(\"\".concat(width, \"px\"));\n      }\n      if (heightStyle.hasValue()) {\n        heightStyle.setValue(\"\".concat(height, \"px\"));\n      }\n    }\n  }\n}\nclass RectElement extends PathElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'rect';\n  }\n  path(ctx) {\n    var x = this.getAttribute('x').getPixels('x');\n    var y = this.getAttribute('y').getPixels('y');\n    var width = this.getStyle('width', false, true).getPixels('x');\n    var height = this.getStyle('height', false, true).getPixels('y');\n    var rxAttr = this.getAttribute('rx');\n    var ryAttr = this.getAttribute('ry');\n    var rx = rxAttr.getPixels('x');\n    var ry = ryAttr.getPixels('y');\n    if (rxAttr.hasValue() && !ryAttr.hasValue()) {\n      ry = rx;\n    }\n    if (ryAttr.hasValue() && !rxAttr.hasValue()) {\n      rx = ry;\n    }\n    rx = Math.min(rx, width / 2.0);\n    ry = Math.min(ry, height / 2.0);\n    if (ctx) {\n      var KAPPA = 4 * ((Math.sqrt(2) - 1) / 3);\n      ctx.beginPath(); // always start the path so we don't fill prior paths\n\n      if (height > 0 && width > 0) {\n        ctx.moveTo(x + rx, y);\n        ctx.lineTo(x + width - rx, y);\n        ctx.bezierCurveTo(x + width - rx + KAPPA * rx, y, x + width, y + ry - KAPPA * ry, x + width, y + ry);\n        ctx.lineTo(x + width, y + height - ry);\n        ctx.bezierCurveTo(x + width, y + height - ry + KAPPA * ry, x + width - rx + KAPPA * rx, y + height, x + width - rx, y + height);\n        ctx.lineTo(x + rx, y + height);\n        ctx.bezierCurveTo(x + rx - KAPPA * rx, y + height, x, y + height - ry + KAPPA * ry, x, y + height - ry);\n        ctx.lineTo(x, y + ry);\n        ctx.bezierCurveTo(x, y + ry - KAPPA * ry, x + rx - KAPPA * rx, y, x + rx, y);\n        ctx.closePath();\n      }\n    }\n    return new BoundingBox(x, y, x + width, y + height);\n  }\n  getMarkers() {\n    return null;\n  }\n}\nclass CircleElement extends PathElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'circle';\n  }\n  path(ctx) {\n    var cx = this.getAttribute('cx').getPixels('x');\n    var cy = this.getAttribute('cy').getPixels('y');\n    var r = this.getAttribute('r').getPixels();\n    if (ctx && r > 0) {\n      ctx.beginPath();\n      ctx.arc(cx, cy, r, 0, Math.PI * 2, false);\n      ctx.closePath();\n    }\n    return new BoundingBox(cx - r, cy - r, cx + r, cy + r);\n  }\n  getMarkers() {\n    return null;\n  }\n}\nclass EllipseElement extends PathElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'ellipse';\n  }\n  path(ctx) {\n    var KAPPA = 4 * ((Math.sqrt(2) - 1) / 3);\n    var rx = this.getAttribute('rx').getPixels('x');\n    var ry = this.getAttribute('ry').getPixels('y');\n    var cx = this.getAttribute('cx').getPixels('x');\n    var cy = this.getAttribute('cy').getPixels('y');\n    if (ctx && rx > 0 && ry > 0) {\n      ctx.beginPath();\n      ctx.moveTo(cx + rx, cy);\n      ctx.bezierCurveTo(cx + rx, cy + KAPPA * ry, cx + KAPPA * rx, cy + ry, cx, cy + ry);\n      ctx.bezierCurveTo(cx - KAPPA * rx, cy + ry, cx - rx, cy + KAPPA * ry, cx - rx, cy);\n      ctx.bezierCurveTo(cx - rx, cy - KAPPA * ry, cx - KAPPA * rx, cy - ry, cx, cy - ry);\n      ctx.bezierCurveTo(cx + KAPPA * rx, cy - ry, cx + rx, cy - KAPPA * ry, cx + rx, cy);\n      ctx.closePath();\n    }\n    return new BoundingBox(cx - rx, cy - ry, cx + rx, cy + ry);\n  }\n  getMarkers() {\n    return null;\n  }\n}\nclass LineElement extends PathElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'line';\n  }\n  getPoints() {\n    return [new Point(this.getAttribute('x1').getPixels('x'), this.getAttribute('y1').getPixels('y')), new Point(this.getAttribute('x2').getPixels('x'), this.getAttribute('y2').getPixels('y'))];\n  }\n  path(ctx) {\n    var [{\n      x: x0,\n      y: y0\n    }, {\n      x: x1,\n      y: y1\n    }] = this.getPoints();\n    if (ctx) {\n      ctx.beginPath();\n      ctx.moveTo(x0, y0);\n      ctx.lineTo(x1, y1);\n    }\n    return new BoundingBox(x0, y0, x1, y1);\n  }\n  getMarkers() {\n    var [p0, p1] = this.getPoints();\n    var a = p0.angleTo(p1);\n    return [[p0, a], [p1, a]];\n  }\n}\nclass PolylineElement extends PathElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'polyline';\n    this.points = [];\n    this.points = Point.parsePath(this.getAttribute('points').getString());\n  }\n  path(ctx) {\n    var {\n      points\n    } = this;\n    var [{\n      x: x0,\n      y: y0\n    }] = points;\n    var boundingBox = new BoundingBox(x0, y0);\n    if (ctx) {\n      ctx.beginPath();\n      ctx.moveTo(x0, y0);\n    }\n    points.forEach(_ref => {\n      var {\n        x,\n        y\n      } = _ref;\n      boundingBox.addPoint(x, y);\n      if (ctx) {\n        ctx.lineTo(x, y);\n      }\n    });\n    return boundingBox;\n  }\n  getMarkers() {\n    var {\n      points\n    } = this;\n    var lastIndex = points.length - 1;\n    var markers = [];\n    points.forEach((point, i) => {\n      if (i === lastIndex) {\n        return;\n      }\n      markers.push([point, point.angleTo(points[i + 1])]);\n    });\n    if (markers.length > 0) {\n      markers.push([points[points.length - 1], markers[markers.length - 1][1]]);\n    }\n    return markers;\n  }\n}\nclass PolygonElement extends PolylineElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'polygon';\n  }\n  path(ctx) {\n    var boundingBox = super.path(ctx);\n    var [{\n      x,\n      y\n    }] = this.points;\n    if (ctx) {\n      ctx.lineTo(x, y);\n      ctx.closePath();\n    }\n    return boundingBox;\n  }\n}\nclass PatternElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'pattern';\n  }\n  createPattern(ctx, _, parentOpacityProp) {\n    var width = this.getStyle('width').getPixels('x', true);\n    var height = this.getStyle('height').getPixels('y', true); // render me using a temporary svg element\n\n    var patternSvg = new SVGElement(this.document, null);\n    patternSvg.attributes.viewBox = new Property(this.document, 'viewBox', this.getAttribute('viewBox').getValue());\n    patternSvg.attributes.width = new Property(this.document, 'width', \"\".concat(width, \"px\"));\n    patternSvg.attributes.height = new Property(this.document, 'height', \"\".concat(height, \"px\"));\n    patternSvg.attributes.transform = new Property(this.document, 'transform', this.getAttribute('patternTransform').getValue());\n    patternSvg.children = this.children;\n    var patternCanvas = this.document.createCanvas(width, height);\n    var patternCtx = patternCanvas.getContext('2d');\n    var xAttr = this.getAttribute('x');\n    var yAttr = this.getAttribute('y');\n    if (xAttr.hasValue() && yAttr.hasValue()) {\n      patternCtx.translate(xAttr.getPixels('x', true), yAttr.getPixels('y', true));\n    }\n    if (parentOpacityProp.hasValue()) {\n      this.styles['fill-opacity'] = parentOpacityProp;\n    } else {\n      Reflect.deleteProperty(this.styles, 'fill-opacity');\n    } // render 3x3 grid so when we transform there's no white space on edges\n\n    for (var x = -1; x <= 1; x++) {\n      for (var y = -1; y <= 1; y++) {\n        patternCtx.save();\n        patternSvg.attributes.x = new Property(this.document, 'x', x * patternCanvas.width);\n        patternSvg.attributes.y = new Property(this.document, 'y', y * patternCanvas.height);\n        patternSvg.render(patternCtx);\n        patternCtx.restore();\n      }\n    }\n    var pattern = ctx.createPattern(patternCanvas, 'repeat');\n    return pattern;\n  }\n}\nclass MarkerElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'marker';\n  }\n  render(ctx, point, angle) {\n    if (!point) {\n      return;\n    }\n    var {\n      x,\n      y\n    } = point;\n    var orient = this.getAttribute('orient').getString('auto');\n    var markerUnits = this.getAttribute('markerUnits').getString('strokeWidth');\n    ctx.translate(x, y);\n    if (orient === 'auto') {\n      ctx.rotate(angle);\n    }\n    if (markerUnits === 'strokeWidth') {\n      ctx.scale(ctx.lineWidth, ctx.lineWidth);\n    }\n    ctx.save(); // render me using a temporary svg element\n\n    var markerSvg = new SVGElement(this.document, null);\n    markerSvg.type = this.type;\n    markerSvg.attributes.viewBox = new Property(this.document, 'viewBox', this.getAttribute('viewBox').getValue());\n    markerSvg.attributes.refX = new Property(this.document, 'refX', this.getAttribute('refX').getValue());\n    markerSvg.attributes.refY = new Property(this.document, 'refY', this.getAttribute('refY').getValue());\n    markerSvg.attributes.width = new Property(this.document, 'width', this.getAttribute('markerWidth').getValue());\n    markerSvg.attributes.height = new Property(this.document, 'height', this.getAttribute('markerHeight').getValue());\n    markerSvg.attributes.overflow = new Property(this.document, 'overflow', this.getAttribute('overflow').getValue());\n    markerSvg.attributes.fill = new Property(this.document, 'fill', this.getAttribute('fill').getColor('black'));\n    markerSvg.attributes.stroke = new Property(this.document, 'stroke', this.getAttribute('stroke').getValue('none'));\n    markerSvg.children = this.children;\n    markerSvg.render(ctx);\n    ctx.restore();\n    if (markerUnits === 'strokeWidth') {\n      ctx.scale(1 / ctx.lineWidth, 1 / ctx.lineWidth);\n    }\n    if (orient === 'auto') {\n      ctx.rotate(-angle);\n    }\n    ctx.translate(-x, -y);\n  }\n}\nclass DefsElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'defs';\n  }\n  render() {// NOOP\n  }\n}\nclass GElement extends RenderedElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'g';\n  }\n  getBoundingBox(ctx) {\n    var boundingBox = new BoundingBox();\n    this.children.forEach(child => {\n      boundingBox.addBoundingBox(child.getBoundingBox(ctx));\n    });\n    return boundingBox;\n  }\n}\nclass GradientElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.attributesToInherit = ['gradientUnits'];\n    this.stops = [];\n    var {\n      stops,\n      children\n    } = this;\n    children.forEach(child => {\n      if (child.type === 'stop') {\n        stops.push(child);\n      }\n    });\n  }\n  getGradientUnits() {\n    return this.getAttribute('gradientUnits').getString('objectBoundingBox');\n  }\n  createGradient(ctx, element, parentOpacityProp) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias, consistent-this\n    var stopsContainer = this;\n    if (this.getHrefAttribute().hasValue()) {\n      stopsContainer = this.getHrefAttribute().getDefinition();\n      this.inheritStopContainer(stopsContainer);\n    }\n    var {\n      stops\n    } = stopsContainer;\n    var gradient = this.getGradient(ctx, element);\n    if (!gradient) {\n      return this.addParentOpacity(parentOpacityProp, stops[stops.length - 1].color);\n    }\n    stops.forEach(stop => {\n      gradient.addColorStop(stop.offset, this.addParentOpacity(parentOpacityProp, stop.color));\n    });\n    if (this.getAttribute('gradientTransform').hasValue()) {\n      // render as transformed pattern on temporary canvas\n      var {\n        document\n      } = this;\n      var {\n        MAX_VIRTUAL_PIXELS,\n        viewPort\n      } = document.screen;\n      var [rootView] = viewPort.viewPorts;\n      var rect = new RectElement(document, null);\n      rect.attributes.x = new Property(document, 'x', -MAX_VIRTUAL_PIXELS / 3.0);\n      rect.attributes.y = new Property(document, 'y', -MAX_VIRTUAL_PIXELS / 3.0);\n      rect.attributes.width = new Property(document, 'width', MAX_VIRTUAL_PIXELS);\n      rect.attributes.height = new Property(document, 'height', MAX_VIRTUAL_PIXELS);\n      var group = new GElement(document, null);\n      group.attributes.transform = new Property(document, 'transform', this.getAttribute('gradientTransform').getValue());\n      group.children = [rect];\n      var patternSvg = new SVGElement(document, null);\n      patternSvg.attributes.x = new Property(document, 'x', 0);\n      patternSvg.attributes.y = new Property(document, 'y', 0);\n      patternSvg.attributes.width = new Property(document, 'width', rootView.width);\n      patternSvg.attributes.height = new Property(document, 'height', rootView.height);\n      patternSvg.children = [group];\n      var patternCanvas = document.createCanvas(rootView.width, rootView.height);\n      var patternCtx = patternCanvas.getContext('2d');\n      patternCtx.fillStyle = gradient;\n      patternSvg.render(patternCtx);\n      return patternCtx.createPattern(patternCanvas, 'no-repeat');\n    }\n    return gradient;\n  }\n  inheritStopContainer(stopsContainer) {\n    this.attributesToInherit.forEach(attributeToInherit => {\n      if (!this.getAttribute(attributeToInherit).hasValue() && stopsContainer.getAttribute(attributeToInherit).hasValue()) {\n        this.getAttribute(attributeToInherit, true).setValue(stopsContainer.getAttribute(attributeToInherit).getValue());\n      }\n    });\n  }\n  addParentOpacity(parentOpacityProp, color) {\n    if (parentOpacityProp.hasValue()) {\n      var colorProp = new Property(this.document, 'color', color);\n      return colorProp.addOpacity(parentOpacityProp).getColor();\n    }\n    return color;\n  }\n}\nclass LinearGradientElement extends GradientElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'linearGradient';\n    this.attributesToInherit.push('x1', 'y1', 'x2', 'y2');\n  }\n  getGradient(ctx, element) {\n    var isBoundingBoxUnits = this.getGradientUnits() === 'objectBoundingBox';\n    var boundingBox = isBoundingBoxUnits ? element.getBoundingBox(ctx) : null;\n    if (isBoundingBoxUnits && !boundingBox) {\n      return null;\n    }\n    if (!this.getAttribute('x1').hasValue() && !this.getAttribute('y1').hasValue() && !this.getAttribute('x2').hasValue() && !this.getAttribute('y2').hasValue()) {\n      this.getAttribute('x1', true).setValue(0);\n      this.getAttribute('y1', true).setValue(0);\n      this.getAttribute('x2', true).setValue(1);\n      this.getAttribute('y2', true).setValue(0);\n    }\n    var x1 = isBoundingBoxUnits ? boundingBox.x + boundingBox.width * this.getAttribute('x1').getNumber() : this.getAttribute('x1').getPixels('x');\n    var y1 = isBoundingBoxUnits ? boundingBox.y + boundingBox.height * this.getAttribute('y1').getNumber() : this.getAttribute('y1').getPixels('y');\n    var x2 = isBoundingBoxUnits ? boundingBox.x + boundingBox.width * this.getAttribute('x2').getNumber() : this.getAttribute('x2').getPixels('x');\n    var y2 = isBoundingBoxUnits ? boundingBox.y + boundingBox.height * this.getAttribute('y2').getNumber() : this.getAttribute('y2').getPixels('y');\n    if (x1 === x2 && y1 === y2) {\n      return null;\n    }\n    return ctx.createLinearGradient(x1, y1, x2, y2);\n  }\n}\nclass RadialGradientElement extends GradientElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'radialGradient';\n    this.attributesToInherit.push('cx', 'cy', 'r', 'fx', 'fy', 'fr');\n  }\n  getGradient(ctx, element) {\n    var isBoundingBoxUnits = this.getGradientUnits() === 'objectBoundingBox';\n    var boundingBox = element.getBoundingBox(ctx);\n    if (isBoundingBoxUnits && !boundingBox) {\n      return null;\n    }\n    if (!this.getAttribute('cx').hasValue()) {\n      this.getAttribute('cx', true).setValue('50%');\n    }\n    if (!this.getAttribute('cy').hasValue()) {\n      this.getAttribute('cy', true).setValue('50%');\n    }\n    if (!this.getAttribute('r').hasValue()) {\n      this.getAttribute('r', true).setValue('50%');\n    }\n    var cx = isBoundingBoxUnits ? boundingBox.x + boundingBox.width * this.getAttribute('cx').getNumber() : this.getAttribute('cx').getPixels('x');\n    var cy = isBoundingBoxUnits ? boundingBox.y + boundingBox.height * this.getAttribute('cy').getNumber() : this.getAttribute('cy').getPixels('y');\n    var fx = cx;\n    var fy = cy;\n    if (this.getAttribute('fx').hasValue()) {\n      fx = isBoundingBoxUnits ? boundingBox.x + boundingBox.width * this.getAttribute('fx').getNumber() : this.getAttribute('fx').getPixels('x');\n    }\n    if (this.getAttribute('fy').hasValue()) {\n      fy = isBoundingBoxUnits ? boundingBox.y + boundingBox.height * this.getAttribute('fy').getNumber() : this.getAttribute('fy').getPixels('y');\n    }\n    var r = isBoundingBoxUnits ? (boundingBox.width + boundingBox.height) / 2.0 * this.getAttribute('r').getNumber() : this.getAttribute('r').getPixels();\n    var fr = this.getAttribute('fr').getPixels();\n    return ctx.createRadialGradient(fx, fy, fr, cx, cy, r);\n  }\n}\nclass StopElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'stop';\n    var offset = Math.max(0, Math.min(1, this.getAttribute('offset').getNumber()));\n    var stopOpacity = this.getStyle('stop-opacity');\n    var stopColor = this.getStyle('stop-color', true);\n    if (stopColor.getString() === '') {\n      stopColor.setValue('#000');\n    }\n    if (stopOpacity.hasValue()) {\n      stopColor = stopColor.addOpacity(stopOpacity);\n    }\n    this.offset = offset;\n    this.color = stopColor.getColor();\n  }\n}\nclass AnimateElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'animate';\n    this.duration = 0;\n    this.initialValue = null;\n    this.initialUnits = '';\n    this.removed = false;\n    this.frozen = false;\n    document.screen.animations.push(this);\n    this.begin = this.getAttribute('begin').getMilliseconds();\n    this.maxDuration = this.begin + this.getAttribute('dur').getMilliseconds();\n    this.from = this.getAttribute('from');\n    this.to = this.getAttribute('to');\n    this.values = new Property(document, 'values', null);\n    var valuesAttr = this.getAttribute('values');\n    if (valuesAttr.hasValue()) {\n      this.values.setValue(valuesAttr.getString().split(';'));\n    }\n  }\n  getProperty() {\n    var attributeType = this.getAttribute('attributeType').getString();\n    var attributeName = this.getAttribute('attributeName').getString();\n    if (attributeType === 'CSS') {\n      return this.parent.getStyle(attributeName, true);\n    }\n    return this.parent.getAttribute(attributeName, true);\n  }\n  calcValue() {\n    var {\n      initialUnits\n    } = this;\n    var {\n      progress,\n      from,\n      to\n    } = this.getProgress(); // tween value linearly\n\n    var newValue = from.getNumber() + (to.getNumber() - from.getNumber()) * progress;\n    if (initialUnits === '%') {\n      newValue *= 100.0; // numValue() returns 0-1 whereas properties are 0-100\n    }\n    return \"\".concat(newValue).concat(initialUnits);\n  }\n  update(delta) {\n    var {\n      parent\n    } = this;\n    var prop = this.getProperty(); // set initial value\n\n    if (!this.initialValue) {\n      this.initialValue = prop.getString();\n      this.initialUnits = prop.getUnits();\n    } // if we're past the end time\n\n    if (this.duration > this.maxDuration) {\n      var fill = this.getAttribute('fill').getString('remove'); // loop for indefinitely repeating animations\n\n      if (this.getAttribute('repeatCount').getString() === 'indefinite' || this.getAttribute('repeatDur').getString() === 'indefinite') {\n        this.duration = 0;\n      } else if (fill === 'freeze' && !this.frozen) {\n        this.frozen = true;\n        parent.animationFrozen = true;\n        parent.animationFrozenValue = prop.getString();\n      } else if (fill === 'remove' && !this.removed) {\n        this.removed = true;\n        prop.setValue(parent.animationFrozen ? parent.animationFrozenValue : this.initialValue);\n        return true;\n      }\n      return false;\n    }\n    this.duration += delta; // if we're past the begin time\n\n    var updated = false;\n    if (this.begin < this.duration) {\n      var newValue = this.calcValue(); // tween\n\n      var typeAttr = this.getAttribute('type');\n      if (typeAttr.hasValue()) {\n        // for transform, etc.\n        var type = typeAttr.getString();\n        newValue = \"\".concat(type, \"(\").concat(newValue, \")\");\n      }\n      prop.setValue(newValue);\n      updated = true;\n    }\n    return updated;\n  }\n  getProgress() {\n    var {\n      document,\n      values\n    } = this;\n    var result = {\n      progress: (this.duration - this.begin) / (this.maxDuration - this.begin)\n    };\n    if (values.hasValue()) {\n      var p = result.progress * (values.getValue().length - 1);\n      var lb = Math.floor(p);\n      var ub = Math.ceil(p);\n      result.from = new Property(document, 'from', parseFloat(values.getValue()[lb]));\n      result.to = new Property(document, 'to', parseFloat(values.getValue()[ub]));\n      result.progress = (p - lb) / (ub - lb);\n    } else {\n      result.from = this.from;\n      result.to = this.to;\n    }\n    return result;\n  }\n}\nclass AnimateColorElement extends AnimateElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'animateColor';\n  }\n  calcValue() {\n    var {\n      progress,\n      from,\n      to\n    } = this.getProgress();\n    var colorFrom = new RGBColor(from.getColor());\n    var colorTo = new RGBColor(to.getColor());\n    if (colorFrom.ok && colorTo.ok) {\n      // tween color linearly\n      var r = colorFrom.r + (colorTo.r - colorFrom.r) * progress;\n      var g = colorFrom.g + (colorTo.g - colorFrom.g) * progress;\n      var b = colorFrom.b + (colorTo.b - colorFrom.b) * progress; // ? alpha\n\n      return \"rgb(\".concat(Math.floor(r), \", \").concat(Math.floor(g), \", \").concat(Math.floor(b), \")\");\n    }\n    return this.getAttribute('from').getColor();\n  }\n}\nclass AnimateTransformElement extends AnimateElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'animateTransform';\n  }\n  calcValue() {\n    var {\n      progress,\n      from,\n      to\n    } = this.getProgress(); // tween value linearly\n\n    var transformFrom = toNumbers(from.getString());\n    var transformTo = toNumbers(to.getString());\n    var newValue = transformFrom.map((from, i) => {\n      var to = transformTo[i];\n      return from + (to - from) * progress;\n    }).join(' ');\n    return newValue;\n  }\n}\nclass FontElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'font';\n    this.glyphs = Object.create(null);\n    this.horizAdvX = this.getAttribute('horiz-adv-x').getNumber();\n    var {\n      definitions\n    } = document;\n    var {\n      children\n    } = this;\n    for (var child of children) {\n      switch (child.type) {\n        case 'font-face':\n          {\n            this.fontFace = child;\n            var fontFamilyStyle = child.getStyle('font-family');\n            if (fontFamilyStyle.hasValue()) {\n              definitions[fontFamilyStyle.getString()] = this;\n            }\n            break;\n          }\n        case 'missing-glyph':\n          this.missingGlyph = child;\n          break;\n        case 'glyph':\n          {\n            var glyph = child;\n            if (glyph.arabicForm) {\n              this.isRTL = true;\n              this.isArabic = true;\n              if (typeof this.glyphs[glyph.unicode] === 'undefined') {\n                this.glyphs[glyph.unicode] = Object.create(null);\n              }\n              this.glyphs[glyph.unicode][glyph.arabicForm] = glyph;\n            } else {\n              this.glyphs[glyph.unicode] = glyph;\n            }\n            break;\n          }\n      }\n    }\n  }\n  render() {// NO RENDER\n  }\n}\nclass FontFaceElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'font-face';\n    this.ascent = this.getAttribute('ascent').getNumber();\n    this.descent = this.getAttribute('descent').getNumber();\n    this.unitsPerEm = this.getAttribute('units-per-em').getNumber();\n  }\n}\nclass MissingGlyphElement extends PathElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'missing-glyph';\n    this.horizAdvX = 0;\n  }\n}\nclass TRefElement extends TextElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'tref';\n  }\n  getText() {\n    var element = this.getHrefAttribute().getDefinition();\n    if (element) {\n      var firstChild = element.children[0];\n      if (firstChild) {\n        return firstChild.getText();\n      }\n    }\n    return '';\n  }\n}\nclass AElement extends TextElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'a';\n    var {\n      childNodes\n    } = node;\n    var firstChild = childNodes[0];\n    var hasText = childNodes.length > 0 && Array.from(childNodes).every(node => node.nodeType === 3);\n    this.hasText = hasText;\n    this.text = hasText ? this.getTextFromNode(firstChild) : '';\n  }\n  getText() {\n    return this.text;\n  }\n  renderChildren(ctx) {\n    if (this.hasText) {\n      // render as text element\n      super.renderChildren(ctx);\n      var {\n        document,\n        x,\n        y\n      } = this;\n      var {\n        mouse\n      } = document.screen;\n      var fontSize = new Property(document, 'fontSize', Font.parse(document.ctx.font).fontSize); // Do not calc bounding box if mouse is not working.\n\n      if (mouse.isWorking()) {\n        mouse.checkBoundingBox(this, new BoundingBox(x, y - fontSize.getPixels('y'), x + this.measureText(ctx), y));\n      }\n    } else if (this.children.length > 0) {\n      // render as temporary group\n      var g = new GElement(this.document, null);\n      g.children = this.children;\n      g.parent = this;\n      g.render(ctx);\n    }\n  }\n  onClick() {\n    var {\n      window\n    } = this.document;\n    if (window) {\n      window.open(this.getHrefAttribute().getString());\n    }\n  }\n  onMouseMove() {\n    var ctx = this.document.ctx;\n    ctx.canvas.style.cursor = 'pointer';\n  }\n}\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys$2(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$2(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nclass TextPathElement extends TextElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'textPath';\n    this.textWidth = 0;\n    this.textHeight = 0;\n    this.pathLength = -1;\n    this.glyphInfo = null;\n    this.letterSpacingCache = [];\n    this.measuresCache = new Map([['', 0]]);\n    var pathElement = this.getHrefAttribute().getDefinition();\n    this.text = this.getTextFromNode();\n    this.dataArray = this.parsePathData(pathElement);\n  }\n  getText() {\n    return this.text;\n  }\n  path(ctx) {\n    var {\n      dataArray\n    } = this;\n    if (ctx) {\n      ctx.beginPath();\n    }\n    dataArray.forEach(_ref => {\n      var {\n        type,\n        points\n      } = _ref;\n      switch (type) {\n        case PathParser.LINE_TO:\n          if (ctx) {\n            ctx.lineTo(points[0], points[1]);\n          }\n          break;\n        case PathParser.MOVE_TO:\n          if (ctx) {\n            ctx.moveTo(points[0], points[1]);\n          }\n          break;\n        case PathParser.CURVE_TO:\n          if (ctx) {\n            ctx.bezierCurveTo(points[0], points[1], points[2], points[3], points[4], points[5]);\n          }\n          break;\n        case PathParser.QUAD_TO:\n          if (ctx) {\n            ctx.quadraticCurveTo(points[0], points[1], points[2], points[3]);\n          }\n          break;\n        case PathParser.ARC:\n          {\n            var [cx, cy, rx, ry, theta, dTheta, psi, fs] = points;\n            var r = rx > ry ? rx : ry;\n            var scaleX = rx > ry ? 1 : rx / ry;\n            var scaleY = rx > ry ? ry / rx : 1;\n            if (ctx) {\n              ctx.translate(cx, cy);\n              ctx.rotate(psi);\n              ctx.scale(scaleX, scaleY);\n              ctx.arc(0, 0, r, theta, theta + dTheta, Boolean(1 - fs));\n              ctx.scale(1 / scaleX, 1 / scaleY);\n              ctx.rotate(-psi);\n              ctx.translate(-cx, -cy);\n            }\n            break;\n          }\n        case PathParser.CLOSE_PATH:\n          if (ctx) {\n            ctx.closePath();\n          }\n          break;\n      }\n    });\n  }\n  renderChildren(ctx) {\n    this.setTextData(ctx);\n    ctx.save();\n    var textDecoration = this.parent.getStyle('text-decoration').getString();\n    var fontSize = this.getFontSize();\n    var {\n      glyphInfo\n    } = this;\n    var fill = ctx.fillStyle;\n    if (textDecoration === 'underline') {\n      ctx.beginPath();\n    }\n    glyphInfo.forEach((glyph, i) => {\n      var {\n        p0,\n        p1,\n        rotation,\n        text: partialText\n      } = glyph;\n      ctx.save();\n      ctx.translate(p0.x, p0.y);\n      ctx.rotate(rotation);\n      if (ctx.fillStyle) {\n        ctx.fillText(partialText, 0, 0);\n      }\n      if (ctx.strokeStyle) {\n        ctx.strokeText(partialText, 0, 0);\n      }\n      ctx.restore();\n      if (textDecoration === 'underline') {\n        if (i === 0) {\n          ctx.moveTo(p0.x, p0.y + fontSize / 8);\n        }\n        ctx.lineTo(p1.x, p1.y + fontSize / 5);\n      } // // To assist with debugging visually, uncomment following\n      //\n      // ctx.beginPath();\n      // if (i % 2)\n      // \tctx.strokeStyle = 'red';\n      // else\n      // \tctx.strokeStyle = 'green';\n      // ctx.moveTo(p0.x, p0.y);\n      // ctx.lineTo(p1.x, p1.y);\n      // ctx.stroke();\n      // ctx.closePath();\n    });\n    if (textDecoration === 'underline') {\n      ctx.lineWidth = fontSize / 20;\n      ctx.strokeStyle = fill;\n      ctx.stroke();\n      ctx.closePath();\n    }\n    ctx.restore();\n  }\n  getLetterSpacingAt() {\n    var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return this.letterSpacingCache[idx] || 0;\n  }\n  findSegmentToFitChar(ctx, anchor, textFullWidth, fullPathWidth, spacesNumber, inputOffset, dy, c, charI) {\n    var offset = inputOffset;\n    var glyphWidth = this.measureText(ctx, c);\n    if (c === ' ' && anchor === 'justify' && textFullWidth < fullPathWidth) {\n      glyphWidth += (fullPathWidth - textFullWidth) / spacesNumber;\n    }\n    if (charI > -1) {\n      offset += this.getLetterSpacingAt(charI);\n    }\n    var splineStep = this.textHeight / 20;\n    var p0 = this.getEquidistantPointOnPath(offset, splineStep, 0);\n    var p1 = this.getEquidistantPointOnPath(offset + glyphWidth, splineStep, 0);\n    var segment = {\n      p0,\n      p1\n    };\n    var rotation = p0 && p1 ? Math.atan2(p1.y - p0.y, p1.x - p0.x) : 0;\n    if (dy) {\n      var dyX = Math.cos(Math.PI / 2 + rotation) * dy;\n      var dyY = Math.cos(-rotation) * dy;\n      segment.p0 = _objectSpread$2(_objectSpread$2({}, p0), {}, {\n        x: p0.x + dyX,\n        y: p0.y + dyY\n      });\n      segment.p1 = _objectSpread$2(_objectSpread$2({}, p1), {}, {\n        x: p1.x + dyX,\n        y: p1.y + dyY\n      });\n    }\n    offset += glyphWidth;\n    return {\n      offset,\n      segment,\n      rotation\n    };\n  }\n  measureText(ctx, text) {\n    var {\n      measuresCache\n    } = this;\n    var targetText = text || this.getText();\n    if (measuresCache.has(targetText)) {\n      return measuresCache.get(targetText);\n    }\n    var measure = this.measureTargetText(ctx, targetText);\n    measuresCache.set(targetText, measure);\n    return measure;\n  } // This method supposes what all custom fonts already loaded.\n  // If some font will be loaded after this method call, <textPath> will not be rendered correctly.\n  // You need to call this method manually to update glyphs cache.\n\n  setTextData(ctx) {\n    if (this.glyphInfo) {\n      return;\n    }\n    var renderText = this.getText();\n    var chars = renderText.split('');\n    var spacesNumber = renderText.split(' ').length - 1;\n    var dx = this.parent.getAttribute('dx').split().map(_ => _.getPixels('x'));\n    var dy = this.parent.getAttribute('dy').getPixels('y');\n    var anchor = this.parent.getStyle('text-anchor').getString('start');\n    var thisSpacing = this.getStyle('letter-spacing');\n    var parentSpacing = this.parent.getStyle('letter-spacing');\n    var letterSpacing = 0;\n    if (!thisSpacing.hasValue() || thisSpacing.getValue() === 'inherit') {\n      letterSpacing = parentSpacing.getPixels();\n    } else if (thisSpacing.hasValue()) {\n      if (thisSpacing.getValue() !== 'initial' && thisSpacing.getValue() !== 'unset') {\n        letterSpacing = thisSpacing.getPixels();\n      }\n    } // fill letter-spacing cache\n\n    var letterSpacingCache = [];\n    var textLen = renderText.length;\n    this.letterSpacingCache = letterSpacingCache;\n    for (var i = 0; i < textLen; i++) {\n      letterSpacingCache.push(typeof dx[i] !== 'undefined' ? dx[i] : letterSpacing);\n    }\n    var dxSum = letterSpacingCache.reduce((acc, cur, i) => i === 0 ? 0 : acc + cur || 0, 0);\n    var textWidth = this.measureText(ctx);\n    var textFullWidth = Math.max(textWidth + dxSum, 0);\n    this.textWidth = textWidth;\n    this.textHeight = this.getFontSize();\n    this.glyphInfo = [];\n    var fullPathWidth = this.getPathLength();\n    var startOffset = this.getStyle('startOffset').getNumber(0) * fullPathWidth;\n    var offset = 0;\n    if (anchor === 'middle' || anchor === 'center') {\n      offset = -textFullWidth / 2;\n    }\n    if (anchor === 'end' || anchor === 'right') {\n      offset = -textFullWidth;\n    }\n    offset += startOffset;\n    chars.forEach((char, i) => {\n      // Find such segment what distance between p0 and p1 is approx. width of glyph\n      var {\n        offset: nextOffset,\n        segment,\n        rotation\n      } = this.findSegmentToFitChar(ctx, anchor, textFullWidth, fullPathWidth, spacesNumber, offset, dy, char, i);\n      offset = nextOffset;\n      if (!segment.p0 || !segment.p1) {\n        return;\n      } // const width = this.getLineLength(\n      // \tsegment.p0.x,\n      // \tsegment.p0.y,\n      // \tsegment.p1.x,\n      // \tsegment.p1.y\n      // );\n      // Note: Since glyphs are rendered one at a time, any kerning pair data built into the font will not be used.\n      // Can foresee having a rough pair table built in that the developer can override as needed.\n      // Or use \"dx\" attribute of the <text> node as a naive replacement\n      // const kern = 0;\n      // placeholder for future implementation\n      // const midpoint = this.getPointOnLine(\n      // \tkern + width / 2.0,\n      // \tsegment.p0.x, segment.p0.y, segment.p1.x, segment.p1.y\n      // );\n\n      this.glyphInfo.push({\n        // transposeX: midpoint.x,\n        // transposeY: midpoint.y,\n        text: chars[i],\n        p0: segment.p0,\n        p1: segment.p1,\n        rotation\n      });\n    });\n  }\n  parsePathData(path) {\n    this.pathLength = -1; // reset path length\n\n    if (!path) {\n      return [];\n    }\n    var pathCommands = [];\n    var {\n      pathParser\n    } = path;\n    pathParser.reset(); // convert l, H, h, V, and v to L\n\n    while (!pathParser.isEnd()) {\n      var {\n        current\n      } = pathParser;\n      var startX = current ? current.x : 0;\n      var startY = current ? current.y : 0;\n      var command = pathParser.next();\n      var nextCommandType = command.type;\n      var points = [];\n      switch (command.type) {\n        case PathParser.MOVE_TO:\n          this.pathM(pathParser, points);\n          break;\n        case PathParser.LINE_TO:\n          nextCommandType = this.pathL(pathParser, points);\n          break;\n        case PathParser.HORIZ_LINE_TO:\n          nextCommandType = this.pathH(pathParser, points);\n          break;\n        case PathParser.VERT_LINE_TO:\n          nextCommandType = this.pathV(pathParser, points);\n          break;\n        case PathParser.CURVE_TO:\n          this.pathC(pathParser, points);\n          break;\n        case PathParser.SMOOTH_CURVE_TO:\n          nextCommandType = this.pathS(pathParser, points);\n          break;\n        case PathParser.QUAD_TO:\n          this.pathQ(pathParser, points);\n          break;\n        case PathParser.SMOOTH_QUAD_TO:\n          nextCommandType = this.pathT(pathParser, points);\n          break;\n        case PathParser.ARC:\n          points = this.pathA(pathParser);\n          break;\n        case PathParser.CLOSE_PATH:\n          PathElement.pathZ(pathParser);\n          break;\n      }\n      if (command.type !== PathParser.CLOSE_PATH) {\n        pathCommands.push({\n          type: nextCommandType,\n          points,\n          start: {\n            x: startX,\n            y: startY\n          },\n          pathLength: this.calcLength(startX, startY, nextCommandType, points)\n        });\n      } else {\n        pathCommands.push({\n          type: PathParser.CLOSE_PATH,\n          points: [],\n          pathLength: 0\n        });\n      }\n    }\n    return pathCommands;\n  }\n  pathM(pathParser, points) {\n    var {\n      x,\n      y\n    } = PathElement.pathM(pathParser).point;\n    points.push(x, y);\n  }\n  pathL(pathParser, points) {\n    var {\n      x,\n      y\n    } = PathElement.pathL(pathParser).point;\n    points.push(x, y);\n    return PathParser.LINE_TO;\n  }\n  pathH(pathParser, points) {\n    var {\n      x,\n      y\n    } = PathElement.pathH(pathParser).point;\n    points.push(x, y);\n    return PathParser.LINE_TO;\n  }\n  pathV(pathParser, points) {\n    var {\n      x,\n      y\n    } = PathElement.pathV(pathParser).point;\n    points.push(x, y);\n    return PathParser.LINE_TO;\n  }\n  pathC(pathParser, points) {\n    var {\n      point,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathC(pathParser);\n    points.push(point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n  }\n  pathS(pathParser, points) {\n    var {\n      point,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathS(pathParser);\n    points.push(point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    return PathParser.CURVE_TO;\n  }\n  pathQ(pathParser, points) {\n    var {\n      controlPoint,\n      currentPoint\n    } = PathElement.pathQ(pathParser);\n    points.push(controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n  }\n  pathT(pathParser, points) {\n    var {\n      controlPoint,\n      currentPoint\n    } = PathElement.pathT(pathParser);\n    points.push(controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    return PathParser.QUAD_TO;\n  }\n  pathA(pathParser) {\n    var {\n      rX,\n      rY,\n      sweepFlag,\n      xAxisRotation,\n      centp,\n      a1,\n      ad\n    } = PathElement.pathA(pathParser);\n    if (sweepFlag === 0 && ad > 0) {\n      ad -= 2 * Math.PI;\n    }\n    if (sweepFlag === 1 && ad < 0) {\n      ad += 2 * Math.PI;\n    }\n    return [centp.x, centp.y, rX, rY, a1, ad, xAxisRotation, sweepFlag];\n  }\n  calcLength(x, y, commandType, points) {\n    var len = 0;\n    var p1 = null;\n    var p2 = null;\n    var t = 0;\n    switch (commandType) {\n      case PathParser.LINE_TO:\n        return this.getLineLength(x, y, points[0], points[1]);\n      case PathParser.CURVE_TO:\n        // Approximates by breaking curve into 100 line segments\n        len = 0.0;\n        p1 = this.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = this.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n          len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          p1 = p2;\n        }\n        return len;\n      case PathParser.QUAD_TO:\n        // Approximates by breaking curve into 100 line segments\n        len = 0.0;\n        p1 = this.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = this.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\n          len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          p1 = p2;\n        }\n        return len;\n      case PathParser.ARC:\n        {\n          // Approximates by breaking curve into line segments\n          len = 0.0;\n          var start = points[4]; // 4 = theta\n\n          var dTheta = points[5]; // 5 = dTheta\n\n          var end = points[4] + dTheta;\n          var inc = Math.PI / 180.0; // 1 degree resolution\n\n          if (Math.abs(start - end) < inc) {\n            inc = Math.abs(start - end);\n          } // Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi\n\n          p1 = this.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n          if (dTheta < 0) {\n            // clockwise\n            for (t = start - inc; t > end; t -= inc) {\n              p2 = this.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n              len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);\n              p1 = p2;\n            }\n          } else {\n            // counter-clockwise\n            for (t = start + inc; t < end; t += inc) {\n              p2 = this.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n              len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);\n              p1 = p2;\n            }\n          }\n          p2 = this.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n          len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          return len;\n        }\n    }\n    return 0;\n  }\n  getPointOnLine(dist, p1x, p1y, p2x, p2y) {\n    var fromX = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : p1x;\n    var fromY = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : p1y;\n    var m = (p2y - p1y) / (p2x - p1x + PSEUDO_ZERO);\n    var run = Math.sqrt(dist * dist / (1 + m * m));\n    if (p2x < p1x) {\n      run *= -1;\n    }\n    var rise = m * run;\n    var pt = null;\n    if (p2x === p1x) {\n      // vertical line\n      pt = {\n        x: fromX,\n        y: fromY + rise\n      };\n    } else if ((fromY - p1y) / (fromX - p1x + PSEUDO_ZERO) === m) {\n      pt = {\n        x: fromX + run,\n        y: fromY + rise\n      };\n    } else {\n      var ix = 0;\n      var iy = 0;\n      var len = this.getLineLength(p1x, p1y, p2x, p2y);\n      if (len < PSEUDO_ZERO) {\n        return null;\n      }\n      var u = (fromX - p1x) * (p2x - p1x) + (fromY - p1y) * (p2y - p1y);\n      u /= len * len;\n      ix = p1x + u * (p2x - p1x);\n      iy = p1y + u * (p2y - p1y);\n      var pRise = this.getLineLength(fromX, fromY, ix, iy);\n      var pRun = Math.sqrt(dist * dist - pRise * pRise);\n      run = Math.sqrt(pRun * pRun / (1 + m * m));\n      if (p2x < p1x) {\n        run *= -1;\n      }\n      rise = m * run;\n      pt = {\n        x: ix + run,\n        y: iy + rise\n      };\n    }\n    return pt;\n  }\n  getPointOnPath(distance) {\n    var fullLen = this.getPathLength();\n    var cumulativePathLength = 0;\n    var p = null;\n    if (distance < -0.00005 || distance - 0.00005 > fullLen) {\n      return null;\n    }\n    var {\n      dataArray\n    } = this;\n    for (var command of dataArray) {\n      if (command && (command.pathLength < 0.00005 || cumulativePathLength + command.pathLength + 0.00005 < distance)) {\n        cumulativePathLength += command.pathLength;\n        continue;\n      }\n      var delta = distance - cumulativePathLength;\n      var currentT = 0;\n      switch (command.type) {\n        case PathParser.LINE_TO:\n          p = this.getPointOnLine(delta, command.start.x, command.start.y, command.points[0], command.points[1], command.start.x, command.start.y);\n          break;\n        case PathParser.ARC:\n          {\n            var start = command.points[4]; // 4 = theta\n\n            var dTheta = command.points[5]; // 5 = dTheta\n\n            var end = command.points[4] + dTheta;\n            currentT = start + delta / command.pathLength * dTheta;\n            if (dTheta < 0 && currentT < end || dTheta >= 0 && currentT > end) {\n              break;\n            }\n            p = this.getPointOnEllipticalArc(command.points[0], command.points[1], command.points[2], command.points[3], currentT, command.points[6]);\n            break;\n          }\n        case PathParser.CURVE_TO:\n          currentT = delta / command.pathLength;\n          if (currentT > 1) {\n            currentT = 1;\n          }\n          p = this.getPointOnCubicBezier(currentT, command.start.x, command.start.y, command.points[0], command.points[1], command.points[2], command.points[3], command.points[4], command.points[5]);\n          break;\n        case PathParser.QUAD_TO:\n          currentT = delta / command.pathLength;\n          if (currentT > 1) {\n            currentT = 1;\n          }\n          p = this.getPointOnQuadraticBezier(currentT, command.start.x, command.start.y, command.points[0], command.points[1], command.points[2], command.points[3]);\n          break;\n      }\n      if (p) {\n        return p;\n      }\n      break;\n    }\n    return null;\n  }\n  getLineLength(x1, y1, x2, y2) {\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  getPathLength() {\n    if (this.pathLength === -1) {\n      this.pathLength = this.dataArray.reduce((length, command) => command.pathLength > 0 ? length + command.pathLength : length, 0);\n    }\n    return this.pathLength;\n  }\n  getPointOnCubicBezier(pct, p1x, p1y, p2x, p2y, p3x, p3y, p4x, p4y) {\n    var x = p4x * CB1(pct) + p3x * CB2(pct) + p2x * CB3(pct) + p1x * CB4(pct);\n    var y = p4y * CB1(pct) + p3y * CB2(pct) + p2y * CB3(pct) + p1y * CB4(pct);\n    return {\n      x,\n      y\n    };\n  }\n  getPointOnQuadraticBezier(pct, p1x, p1y, p2x, p2y, p3x, p3y) {\n    var x = p3x * QB1(pct) + p2x * QB2(pct) + p1x * QB3(pct);\n    var y = p3y * QB1(pct) + p2y * QB2(pct) + p1y * QB3(pct);\n    return {\n      x,\n      y\n    };\n  }\n  getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n    var cosPsi = Math.cos(psi);\n    var sinPsi = Math.sin(psi);\n    var pt = {\n      x: rx * Math.cos(theta),\n      y: ry * Math.sin(theta)\n    };\n    return {\n      x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n      y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n    };\n  } // TODO need some optimisations. possibly build cache only for curved segments?\n\n  buildEquidistantCache(inputStep, inputPrecision) {\n    var fullLen = this.getPathLength();\n    var precision = inputPrecision || 0.25; // accuracy vs performance\n\n    var step = inputStep || fullLen / 100;\n    if (!this.equidistantCache || this.equidistantCache.step !== step || this.equidistantCache.precision !== precision) {\n      // Prepare cache\n      this.equidistantCache = {\n        step,\n        precision,\n        points: []\n      }; // Calculate points\n\n      var s = 0;\n      for (var l = 0; l <= fullLen; l += precision) {\n        var p0 = this.getPointOnPath(l);\n        var p1 = this.getPointOnPath(l + precision);\n        if (!p0 || !p1) {\n          continue;\n        }\n        s += this.getLineLength(p0.x, p0.y, p1.x, p1.y);\n        if (s >= step) {\n          this.equidistantCache.points.push({\n            x: p0.x,\n            y: p0.y,\n            distance: l\n          });\n          s -= step;\n        }\n      }\n    }\n  }\n  getEquidistantPointOnPath(targetDistance, step, precision) {\n    this.buildEquidistantCache(step, precision);\n    if (targetDistance < 0 || targetDistance - this.getPathLength() > 0.00005) {\n      return null;\n    }\n    var idx = Math.round(targetDistance / this.getPathLength() * (this.equidistantCache.points.length - 1));\n    return this.equidistantCache.points[idx] || null;\n  }\n}\nvar dataUriRegex = /^\\s*data:(([^/,;]+\\/[^/,;]+)(?:;([^,;=]+=[^,;=]+))?)?(?:;(base64))?,(.*)$/i;\nclass ImageElement extends RenderedElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'image';\n    this.loaded = false;\n    var href = this.getHrefAttribute().getString();\n    if (!href) {\n      return;\n    }\n    var isSvg = href.endsWith('.svg') || /^\\s*data:image\\/svg\\+xml/i.test(href);\n    document.images.push(this);\n    if (!isSvg) {\n      void this.loadImage(href);\n    } else {\n      void this.loadSvg(href);\n    }\n    this.isSvg = isSvg;\n  }\n  loadImage(href) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        var image = yield _this.document.createImage(href);\n        _this.image = image;\n      } catch (err) {\n        console.error(\"Error while loading image \\\"\".concat(href, \"\\\":\"), err);\n      }\n      _this.loaded = true;\n    })();\n  }\n  loadSvg(href) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      var match = dataUriRegex.exec(href);\n      if (match) {\n        var data = match[5];\n        if (match[4] === 'base64') {\n          _this2.image = atob(data);\n        } else {\n          _this2.image = decodeURIComponent(data);\n        }\n      } else {\n        try {\n          var response = yield _this2.document.fetch(href);\n          var svg = yield response.text();\n          _this2.image = svg;\n        } catch (err) {\n          console.error(\"Error while loading image \\\"\".concat(href, \"\\\":\"), err);\n        }\n      }\n      _this2.loaded = true;\n    })();\n  }\n  renderChildren(ctx) {\n    var {\n      document,\n      image,\n      loaded\n    } = this;\n    var x = this.getAttribute('x').getPixels('x');\n    var y = this.getAttribute('y').getPixels('y');\n    var width = this.getStyle('width').getPixels('x');\n    var height = this.getStyle('height').getPixels('y');\n    if (!loaded || !image || !width || !height) {\n      return;\n    }\n    ctx.save();\n    ctx.translate(x, y);\n    if (this.isSvg) {\n      var subDocument = document.canvg.forkString(ctx, this.image, {\n        ignoreMouse: true,\n        ignoreAnimation: true,\n        ignoreDimensions: true,\n        ignoreClear: true,\n        offsetX: 0,\n        offsetY: 0,\n        scaleWidth: width,\n        scaleHeight: height\n      });\n      subDocument.document.documentElement.parent = this;\n      void subDocument.render();\n    } else {\n      var _image = this.image;\n      document.setViewBox({\n        ctx,\n        aspectRatio: this.getAttribute('preserveAspectRatio').getString(),\n        width,\n        desiredWidth: _image.width,\n        height,\n        desiredHeight: _image.height\n      });\n      if (this.loaded) {\n        if (typeof _image.complete === 'undefined' || _image.complete) {\n          ctx.drawImage(_image, 0, 0);\n        }\n      }\n    }\n    ctx.restore();\n  }\n  getBoundingBox() {\n    var x = this.getAttribute('x').getPixels('x');\n    var y = this.getAttribute('y').getPixels('y');\n    var width = this.getStyle('width').getPixels('x');\n    var height = this.getStyle('height').getPixels('y');\n    return new BoundingBox(x, y, x + width, y + height);\n  }\n}\nclass SymbolElement extends RenderedElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'symbol';\n  }\n  render(_) {// NO RENDER\n  }\n}\nclass SVGFontLoader {\n  constructor(document) {\n    this.document = document;\n    this.loaded = false;\n    document.fonts.push(this);\n  }\n  load(fontFamily, url) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        var {\n          document\n        } = _this;\n        var svgDocument = yield document.canvg.parser.load(url);\n        var fonts = svgDocument.getElementsByTagName('font');\n        Array.from(fonts).forEach(fontNode => {\n          var font = document.createElement(fontNode);\n          document.definitions[fontFamily] = font;\n        });\n      } catch (err) {\n        console.error(\"Error while loading font \\\"\".concat(url, \"\\\":\"), err);\n      }\n      _this.loaded = true;\n    })();\n  }\n}\nclass StyleElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'style';\n    var css = compressSpaces(Array.from(node.childNodes) // NEED TEST\n    .map(_ => _.textContent).join('').replace(/(\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\/)|(^[\\s]*\\/\\/.*)/gm, '') // remove comments\n    .replace(/@import.*;/g, '') // remove imports\n    );\n    var cssDefs = css.split('}');\n    cssDefs.forEach(_ => {\n      var def = _.trim();\n      if (!def) {\n        return;\n      }\n      var cssParts = def.split('{');\n      var cssClasses = cssParts[0].split(',');\n      var cssProps = cssParts[1].split(';');\n      cssClasses.forEach(_ => {\n        var cssClass = _.trim();\n        if (!cssClass) {\n          return;\n        }\n        var props = document.styles[cssClass] || {};\n        cssProps.forEach(cssProp => {\n          var prop = cssProp.indexOf(':');\n          var name = cssProp.substr(0, prop).trim();\n          var value = cssProp.substr(prop + 1, cssProp.length - prop).trim();\n          if (name && value) {\n            props[name] = new Property(document, name, value);\n          }\n        });\n        document.styles[cssClass] = props;\n        document.stylesSpecificity[cssClass] = getSelectorSpecificity(cssClass);\n        if (cssClass === '@font-face') {\n          //  && !nodeEnv\n          var fontFamily = props['font-family'].getString().replace(/\"|'/g, '');\n          var srcs = props.src.getString().split(',');\n          srcs.forEach(src => {\n            if (src.indexOf('format(\"svg\")') > 0) {\n              var url = parseExternalUrl(src);\n              if (url) {\n                void new SVGFontLoader(document).load(fontFamily, url);\n              }\n            }\n          });\n        }\n      });\n    });\n  }\n}\nStyleElement.parseExternalUrl = parseExternalUrl;\nclass UseElement extends RenderedElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'use';\n  }\n  setContext(ctx) {\n    super.setContext(ctx);\n    var xAttr = this.getAttribute('x');\n    var yAttr = this.getAttribute('y');\n    if (xAttr.hasValue()) {\n      ctx.translate(xAttr.getPixels('x'), 0);\n    }\n    if (yAttr.hasValue()) {\n      ctx.translate(0, yAttr.getPixels('y'));\n    }\n  }\n  path(ctx) {\n    var {\n      element\n    } = this;\n    if (element) {\n      element.path(ctx);\n    }\n  }\n  renderChildren(ctx) {\n    var {\n      document,\n      element\n    } = this;\n    if (element) {\n      var tempSvg = element;\n      if (element.type === 'symbol') {\n        // render me using a temporary svg element in symbol cases (http://www.w3.org/TR/SVG/struct.html#UseElement)\n        tempSvg = new SVGElement(document, null);\n        tempSvg.attributes.viewBox = new Property(document, 'viewBox', element.getAttribute('viewBox').getString());\n        tempSvg.attributes.preserveAspectRatio = new Property(document, 'preserveAspectRatio', element.getAttribute('preserveAspectRatio').getString());\n        tempSvg.attributes.overflow = new Property(document, 'overflow', element.getAttribute('overflow').getString());\n        tempSvg.children = element.children; // element is still the parent of the children\n\n        element.styles.opacity = new Property(document, 'opacity', this.calculateOpacity());\n      }\n      if (tempSvg.type === 'svg') {\n        var widthStyle = this.getStyle('width', false, true);\n        var heightStyle = this.getStyle('height', false, true); // if symbol or svg, inherit width/height from me\n\n        if (widthStyle.hasValue()) {\n          tempSvg.attributes.width = new Property(document, 'width', widthStyle.getString());\n        }\n        if (heightStyle.hasValue()) {\n          tempSvg.attributes.height = new Property(document, 'height', heightStyle.getString());\n        }\n      }\n      var oldParent = tempSvg.parent;\n      tempSvg.parent = this;\n      tempSvg.render(ctx);\n      tempSvg.parent = oldParent;\n    }\n  }\n  getBoundingBox(ctx) {\n    var {\n      element\n    } = this;\n    if (element) {\n      return element.getBoundingBox(ctx);\n    }\n    return null;\n  }\n  elementTransform() {\n    var {\n      document,\n      element\n    } = this;\n    return Transform.fromElement(document, element);\n  }\n  get element() {\n    if (!this.cachedElement) {\n      this.cachedElement = this.getHrefAttribute().getDefinition();\n    }\n    return this.cachedElement;\n  }\n}\nfunction imGet(img, x, y, width, _height, rgba) {\n  return img[y * width * 4 + x * 4 + rgba];\n}\nfunction imSet(img, x, y, width, _height, rgba, val) {\n  img[y * width * 4 + x * 4 + rgba] = val;\n}\nfunction m(matrix, i, v) {\n  var mi = matrix[i];\n  return mi * v;\n}\nfunction c(a, m1, m2, m3) {\n  return m1 + Math.cos(a) * m2 + Math.sin(a) * m3;\n}\nclass FeColorMatrixElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'feColorMatrix';\n    var matrix = toNumbers(this.getAttribute('values').getString());\n    switch (this.getAttribute('type').getString('matrix')) {\n      // http://www.w3.org/TR/SVG/filters.html#feColorMatrixElement\n      case 'saturate':\n        {\n          var s = matrix[0];\n          /* eslint-disable array-element-newline */\n\n          matrix = [0.213 + 0.787 * s, 0.715 - 0.715 * s, 0.072 - 0.072 * s, 0, 0, 0.213 - 0.213 * s, 0.715 + 0.285 * s, 0.072 - 0.072 * s, 0, 0, 0.213 - 0.213 * s, 0.715 - 0.715 * s, 0.072 + 0.928 * s, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\n          /* eslint-enable array-element-newline */\n\n          break;\n        }\n      case 'hueRotate':\n        {\n          var a = matrix[0] * Math.PI / 180.0;\n          /* eslint-disable array-element-newline */\n\n          matrix = [c(a, 0.213, 0.787, -0.213), c(a, 0.715, -0.715, -0.715), c(a, 0.072, -0.072, 0.928), 0, 0, c(a, 0.213, -0.213, 0.143), c(a, 0.715, 0.285, 0.140), c(a, 0.072, -0.072, -0.283), 0, 0, c(a, 0.213, -0.213, -0.787), c(a, 0.715, -0.715, 0.715), c(a, 0.072, 0.928, 0.072), 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\n          /* eslint-enable array-element-newline */\n\n          break;\n        }\n      case 'luminanceToAlpha':\n        /* eslint-disable array-element-newline */\n        matrix = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2125, 0.7154, 0.0721, 0, 0, 0, 0, 0, 0, 1];\n        /* eslint-enable array-element-newline */\n\n        break;\n    }\n    this.matrix = matrix;\n    this.includeOpacity = this.getAttribute('includeOpacity').hasValue();\n  }\n  apply(ctx, _x, _y, width, height) {\n    // assuming x==0 && y==0 for now\n    var {\n      includeOpacity,\n      matrix\n    } = this;\n    var srcData = ctx.getImageData(0, 0, width, height);\n    for (var y = 0; y < height; y++) {\n      for (var x = 0; x < width; x++) {\n        var r = imGet(srcData.data, x, y, width, height, 0);\n        var g = imGet(srcData.data, x, y, width, height, 1);\n        var b = imGet(srcData.data, x, y, width, height, 2);\n        var a = imGet(srcData.data, x, y, width, height, 3);\n        var nr = m(matrix, 0, r) + m(matrix, 1, g) + m(matrix, 2, b) + m(matrix, 3, a) + m(matrix, 4, 1);\n        var ng = m(matrix, 5, r) + m(matrix, 6, g) + m(matrix, 7, b) + m(matrix, 8, a) + m(matrix, 9, 1);\n        var nb = m(matrix, 10, r) + m(matrix, 11, g) + m(matrix, 12, b) + m(matrix, 13, a) + m(matrix, 14, 1);\n        var na = m(matrix, 15, r) + m(matrix, 16, g) + m(matrix, 17, b) + m(matrix, 18, a) + m(matrix, 19, 1);\n        if (includeOpacity) {\n          nr = 0;\n          ng = 0;\n          nb = 0;\n          na *= a / 255;\n        }\n        imSet(srcData.data, x, y, width, height, 0, nr);\n        imSet(srcData.data, x, y, width, height, 1, ng);\n        imSet(srcData.data, x, y, width, height, 2, nb);\n        imSet(srcData.data, x, y, width, height, 3, na);\n      }\n    }\n    ctx.clearRect(0, 0, width, height);\n    ctx.putImageData(srcData, 0, 0);\n  }\n}\nclass MaskElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'mask';\n  }\n  apply(ctx, element) {\n    var {\n      document\n    } = this; // render as temp svg\n\n    var x = this.getAttribute('x').getPixels('x');\n    var y = this.getAttribute('y').getPixels('y');\n    var width = this.getStyle('width').getPixels('x');\n    var height = this.getStyle('height').getPixels('y');\n    if (!width && !height) {\n      var boundingBox = new BoundingBox();\n      this.children.forEach(child => {\n        boundingBox.addBoundingBox(child.getBoundingBox(ctx));\n      });\n      x = Math.floor(boundingBox.x1);\n      y = Math.floor(boundingBox.y1);\n      width = Math.floor(boundingBox.width);\n      height = Math.floor(boundingBox.height);\n    }\n    var ignoredStyles = this.removeStyles(element, MaskElement.ignoreStyles);\n    var maskCanvas = document.createCanvas(x + width, y + height);\n    var maskCtx = maskCanvas.getContext('2d');\n    document.screen.setDefaults(maskCtx);\n    this.renderChildren(maskCtx); // convert mask to alpha with a fake node\n    // TODO: refactor out apply from feColorMatrix\n\n    new FeColorMatrixElement(document, {\n      nodeType: 1,\n      childNodes: [],\n      attributes: [{\n        nodeName: 'type',\n        value: 'luminanceToAlpha'\n      }, {\n        nodeName: 'includeOpacity',\n        value: 'true'\n      }]\n    }).apply(maskCtx, 0, 0, x + width, y + height);\n    var tmpCanvas = document.createCanvas(x + width, y + height);\n    var tmpCtx = tmpCanvas.getContext('2d');\n    document.screen.setDefaults(tmpCtx);\n    element.render(tmpCtx);\n    tmpCtx.globalCompositeOperation = 'destination-in';\n    tmpCtx.fillStyle = maskCtx.createPattern(maskCanvas, 'no-repeat');\n    tmpCtx.fillRect(0, 0, x + width, y + height);\n    ctx.fillStyle = tmpCtx.createPattern(tmpCanvas, 'no-repeat');\n    ctx.fillRect(0, 0, x + width, y + height); // reassign mask\n\n    this.restoreStyles(element, ignoredStyles);\n  }\n  render(_) {// NO RENDER\n  }\n}\nMaskElement.ignoreStyles = ['mask', 'transform', 'clip-path'];\nvar noop = () => {// NOOP\n};\nclass ClipPathElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'clipPath';\n  }\n  apply(ctx) {\n    var {\n      document\n    } = this;\n    var contextProto = Reflect.getPrototypeOf(ctx);\n    var {\n      beginPath,\n      closePath\n    } = ctx;\n    if (contextProto) {\n      contextProto.beginPath = noop;\n      contextProto.closePath = noop;\n    }\n    Reflect.apply(beginPath, ctx, []);\n    this.children.forEach(child => {\n      if (typeof child.path === 'undefined') {\n        return;\n      }\n      var transform = typeof child.elementTransform !== 'undefined' ? child.elementTransform() : null; // handle <use />\n\n      if (!transform) {\n        transform = Transform.fromElement(document, child);\n      }\n      if (transform) {\n        transform.apply(ctx);\n      }\n      child.path(ctx);\n      if (contextProto) {\n        contextProto.closePath = closePath;\n      }\n      if (transform) {\n        transform.unapply(ctx);\n      }\n    });\n    Reflect.apply(closePath, ctx, []);\n    ctx.clip();\n    if (contextProto) {\n      contextProto.beginPath = beginPath;\n      contextProto.closePath = closePath;\n    }\n  }\n  render(_) {// NO RENDER\n  }\n}\nclass FilterElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'filter';\n  }\n  apply(ctx, element) {\n    // render as temp svg\n    var {\n      document,\n      children\n    } = this;\n    var boundingBox = element.getBoundingBox(ctx);\n    if (!boundingBox) {\n      return;\n    }\n    var px = 0;\n    var py = 0;\n    children.forEach(child => {\n      var efd = child.extraFilterDistance || 0;\n      px = Math.max(px, efd);\n      py = Math.max(py, efd);\n    });\n    var width = Math.floor(boundingBox.width);\n    var height = Math.floor(boundingBox.height);\n    var tmpCanvasWidth = width + 2 * px;\n    var tmpCanvasHeight = height + 2 * py;\n    if (tmpCanvasWidth < 1 || tmpCanvasHeight < 1) {\n      return;\n    }\n    var x = Math.floor(boundingBox.x);\n    var y = Math.floor(boundingBox.y);\n    var ignoredStyles = this.removeStyles(element, FilterElement.ignoreStyles);\n    var tmpCanvas = document.createCanvas(tmpCanvasWidth, tmpCanvasHeight);\n    var tmpCtx = tmpCanvas.getContext('2d');\n    document.screen.setDefaults(tmpCtx);\n    tmpCtx.translate(-x + px, -y + py);\n    element.render(tmpCtx); // apply filters\n\n    children.forEach(child => {\n      if (typeof child.apply === 'function') {\n        child.apply(tmpCtx, 0, 0, tmpCanvasWidth, tmpCanvasHeight);\n      }\n    }); // render on me\n\n    ctx.drawImage(tmpCanvas, 0, 0, tmpCanvasWidth, tmpCanvasHeight, x - px, y - py, tmpCanvasWidth, tmpCanvasHeight);\n    this.restoreStyles(element, ignoredStyles);\n  }\n  render(_) {// NO RENDER\n  }\n}\nFilterElement.ignoreStyles = ['filter', 'transform', 'clip-path'];\nclass FeDropShadowElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'feDropShadow';\n    this.addStylesFromStyleDefinition();\n  }\n  apply(_, _x, _y, _width, _height) {// TODO: implement\n  }\n}\nclass FeMorphologyElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'feMorphology';\n  }\n  apply(_, _x, _y, _width, _height) {// TODO: implement\n  }\n}\nclass FeCompositeElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'feComposite';\n  }\n  apply(_, _x, _y, _width, _height) {// TODO: implement\n  }\n}\nclass FeGaussianBlurElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'feGaussianBlur';\n    this.blurRadius = Math.floor(this.getAttribute('stdDeviation').getNumber());\n    this.extraFilterDistance = this.blurRadius;\n  }\n  apply(ctx, x, y, width, height) {\n    var {\n      document,\n      blurRadius\n    } = this;\n    var body = document.window ? document.window.document.body : null;\n    var canvas = ctx.canvas; // StackBlur requires canvas be on document\n\n    canvas.id = document.getUniqueId();\n    if (body) {\n      canvas.style.display = 'none';\n      body.appendChild(canvas);\n    }\n    canvasRGBA(canvas, x, y, width, height, blurRadius);\n    if (body) {\n      body.removeChild(canvas);\n    }\n  }\n}\nclass TitleElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'title';\n  }\n}\nclass DescElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'desc';\n  }\n}\nvar elements = {\n  'svg': SVGElement,\n  'rect': RectElement,\n  'circle': CircleElement,\n  'ellipse': EllipseElement,\n  'line': LineElement,\n  'polyline': PolylineElement,\n  'polygon': PolygonElement,\n  'path': PathElement,\n  'pattern': PatternElement,\n  'marker': MarkerElement,\n  'defs': DefsElement,\n  'linearGradient': LinearGradientElement,\n  'radialGradient': RadialGradientElement,\n  'stop': StopElement,\n  'animate': AnimateElement,\n  'animateColor': AnimateColorElement,\n  'animateTransform': AnimateTransformElement,\n  'font': FontElement,\n  'font-face': FontFaceElement,\n  'missing-glyph': MissingGlyphElement,\n  'glyph': GlyphElement,\n  'text': TextElement,\n  'tspan': TSpanElement,\n  'tref': TRefElement,\n  'a': AElement,\n  'textPath': TextPathElement,\n  'image': ImageElement,\n  'g': GElement,\n  'symbol': SymbolElement,\n  'style': StyleElement,\n  'use': UseElement,\n  'mask': MaskElement,\n  'clipPath': ClipPathElement,\n  'filter': FilterElement,\n  'feDropShadow': FeDropShadowElement,\n  'feMorphology': FeMorphologyElement,\n  'feComposite': FeCompositeElement,\n  'feColorMatrix': FeColorMatrixElement,\n  'feGaussianBlur': FeGaussianBlurElement,\n  'title': TitleElement,\n  'desc': DescElement\n};\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys$1(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$1(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction createCanvas(width, height) {\n  var canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\nfunction createImage(_x) {\n  return _createImage.apply(this, arguments);\n}\nfunction _createImage() {\n  _createImage = _asyncToGenerator(function* (src) {\n    var anonymousCrossOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var image = document.createElement('img');\n    if (anonymousCrossOrigin) {\n      image.crossOrigin = 'Anonymous';\n    }\n    return new Promise((resolve, reject) => {\n      image.onload = () => {\n        resolve(image);\n      };\n      image.onerror = (_event, _source, _lineno, _colno, error) => {\n        reject(error);\n      };\n      image.src = src;\n    });\n  });\n  return _createImage.apply(this, arguments);\n}\nclass Document {\n  constructor(canvg) {\n    var {\n      rootEmSize = 12,\n      emSize = 12,\n      createCanvas = Document.createCanvas,\n      createImage = Document.createImage,\n      anonymousCrossOrigin\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.canvg = canvg;\n    this.definitions = Object.create(null);\n    this.styles = Object.create(null);\n    this.stylesSpecificity = Object.create(null);\n    this.images = [];\n    this.fonts = [];\n    this.emSizeStack = [];\n    this.uniqueId = 0;\n    this.screen = canvg.screen;\n    this.rootEmSize = rootEmSize;\n    this.emSize = emSize;\n    this.createCanvas = createCanvas;\n    this.createImage = this.bindCreateImage(createImage, anonymousCrossOrigin);\n    this.screen.wait(this.isImagesLoaded.bind(this));\n    this.screen.wait(this.isFontsLoaded.bind(this));\n  }\n  bindCreateImage(createImage, anonymousCrossOrigin) {\n    if (typeof anonymousCrossOrigin === 'boolean') {\n      return (source, forceAnonymousCrossOrigin) => createImage(source, typeof forceAnonymousCrossOrigin === 'boolean' ? forceAnonymousCrossOrigin : anonymousCrossOrigin);\n    }\n    return createImage;\n  }\n  get window() {\n    return this.screen.window;\n  }\n  get fetch() {\n    return this.screen.fetch;\n  }\n  get ctx() {\n    return this.screen.ctx;\n  }\n  get emSize() {\n    var {\n      emSizeStack\n    } = this;\n    return emSizeStack[emSizeStack.length - 1];\n  }\n  set emSize(value) {\n    var {\n      emSizeStack\n    } = this;\n    emSizeStack.push(value);\n  }\n  popEmSize() {\n    var {\n      emSizeStack\n    } = this;\n    emSizeStack.pop();\n  }\n  getUniqueId() {\n    return \"canvg\".concat(++this.uniqueId);\n  }\n  isImagesLoaded() {\n    return this.images.every(_ => _.loaded);\n  }\n  isFontsLoaded() {\n    return this.fonts.every(_ => _.loaded);\n  }\n  createDocumentElement(document) {\n    var documentElement = this.createElement(document.documentElement);\n    documentElement.root = true;\n    documentElement.addStylesFromStyleDefinition();\n    this.documentElement = documentElement;\n    return documentElement;\n  }\n  createElement(node) {\n    var elementType = node.nodeName.replace(/^[^:]+:/, '');\n    var ElementType = Document.elementTypes[elementType];\n    if (typeof ElementType !== 'undefined') {\n      return new ElementType(this, node);\n    }\n    return new UnknownElement(this, node);\n  }\n  createTextNode(node) {\n    return new TextNode(this, node);\n  }\n  setViewBox(config) {\n    this.screen.setViewBox(_objectSpread$1({\n      document: this\n    }, config));\n  }\n}\nDocument.createCanvas = createCanvas;\nDocument.createImage = createImage;\nDocument.elementTypes = elements;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\n/**\r\n * SVG renderer on canvas.\r\n */\n\nclass Canvg {\n  /**\r\n   * Main constructor.\r\n   * @param ctx - Rendering context.\r\n   * @param svg - SVG Document.\r\n   * @param options - Rendering options.\r\n   */\n  constructor(ctx, svg) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.parser = new Parser(options);\n    this.screen = new Screen(ctx, options);\n    this.options = options;\n    var document = new Document(this, options);\n    var documentElement = document.createDocumentElement(svg);\n    this.document = document;\n    this.documentElement = documentElement;\n  }\n  /**\r\n   * Create Canvg instance from SVG source string or URL.\r\n   * @param ctx - Rendering context.\r\n   * @param svg - SVG source string or URL.\r\n   * @param options - Rendering options.\r\n   * @returns Canvg instance.\r\n   */\n\n  static from(ctx, svg) {\n    var _arguments = arguments;\n    return _asyncToGenerator(function* () {\n      var options = _arguments.length > 2 && _arguments[2] !== undefined ? _arguments[2] : {};\n      var parser = new Parser(options);\n      var svgDocument = yield parser.parse(svg);\n      return new Canvg(ctx, svgDocument, options);\n    })();\n  }\n  /**\r\n   * Create Canvg instance from SVG source string.\r\n   * @param ctx - Rendering context.\r\n   * @param svg - SVG source string.\r\n   * @param options - Rendering options.\r\n   * @returns Canvg instance.\r\n   */\n\n  static fromString(ctx, svg) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var parser = new Parser(options);\n    var svgDocument = parser.parseFromString(svg);\n    return new Canvg(ctx, svgDocument, options);\n  }\n  /**\r\n   * Create new Canvg instance with inherited options.\r\n   * @param ctx - Rendering context.\r\n   * @param svg - SVG source string or URL.\r\n   * @param options - Rendering options.\r\n   * @returns Canvg instance.\r\n   */\n\n  fork(ctx, svg) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return Canvg.from(ctx, svg, _objectSpread(_objectSpread({}, this.options), options));\n  }\n  /**\r\n   * Create new Canvg instance with inherited options.\r\n   * @param ctx - Rendering context.\r\n   * @param svg - SVG source string.\r\n   * @param options - Rendering options.\r\n   * @returns Canvg instance.\r\n   */\n\n  forkString(ctx, svg) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return Canvg.fromString(ctx, svg, _objectSpread(_objectSpread({}, this.options), options));\n  }\n  /**\r\n   * Document is ready promise.\r\n   * @returns Ready promise.\r\n   */\n\n  ready() {\n    return this.screen.ready();\n  }\n  /**\r\n   * Document is ready value.\r\n   * @returns Is ready or not.\r\n   */\n\n  isReady() {\n    return this.screen.isReady();\n  }\n  /**\r\n   * Render only first frame, ignoring animations and mouse.\r\n   * @param options - Rendering options.\r\n   */\n\n  render() {\n    var _arguments2 = arguments,\n      _this = this;\n    return _asyncToGenerator(function* () {\n      var options = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : {};\n      _this.start(_objectSpread({\n        enableRedraw: true,\n        ignoreAnimation: true,\n        ignoreMouse: true\n      }, options));\n      yield _this.ready();\n      _this.stop();\n    })();\n  }\n  /**\r\n   * Start rendering.\r\n   * @param options - Render options.\r\n   */\n\n  start() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var {\n      documentElement,\n      screen,\n      options: baseOptions\n    } = this;\n    screen.start(documentElement, _objectSpread(_objectSpread({\n      enableRedraw: true\n    }, baseOptions), options));\n  }\n  /**\r\n   * Stop rendering.\r\n   */\n\n  stop() {\n    this.screen.stop();\n  }\n  /**\r\n   * Resize SVG to fit in given size.\r\n   * @param width\r\n   * @param height\r\n   * @param preserveAspectRatio\r\n   */\n\n  resize(width) {\n    var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : width;\n    var preserveAspectRatio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    this.documentElement.resize(width, height, preserveAspectRatio);\n  }\n}\nexport { AElement, AnimateColorElement, AnimateElement, AnimateTransformElement, BoundingBox, CB1, CB2, CB3, CB4, Canvg, CircleElement, ClipPathElement, DefsElement, DescElement, Document, Element, EllipseElement, FeColorMatrixElement, FeCompositeElement, FeDropShadowElement, FeGaussianBlurElement, FeMorphologyElement, FilterElement, Font, FontElement, FontFaceElement, GElement, GlyphElement, GradientElement, ImageElement, LineElement, LinearGradientElement, MarkerElement, MaskElement, Matrix, MissingGlyphElement, Mouse, PSEUDO_ZERO, Parser, PathElement, PathParser, PatternElement, Point, PolygonElement, PolylineElement, Property, QB1, QB2, QB3, RadialGradientElement, RectElement, RenderedElement, Rotate, SVGElement, SVGFontLoader, Scale, Screen, Skew, SkewX, SkewY, StopElement, StyleElement, SymbolElement, TRefElement, TSpanElement, TextElement, TextPathElement, TitleElement, Transform, Translate, UnknownElement, UseElement, ViewPort, compressSpaces, Canvg as default, getSelectorSpecificity, normalizeAttributeName, normalizeColor, parseExternalUrl, index as presets, toNumbers, trimLeft, trimRight, vectorMagnitude, vectorsAngle, vectorsRatio };","function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var now = require('performance-now'),\n  root = typeof window === 'undefined' ? global : window,\n  vendors = ['moz', 'webkit'],\n  suffix = 'AnimationFrame',\n  raf = root['request' + suffix],\n  caf = root['cancel' + suffix] || root['cancelRequest' + suffix];\nfor (var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix];\n  caf = root[vendors[i] + 'Cancel' + suffix] || root[vendors[i] + 'CancelRequest' + suffix];\n}\n\n// Some versions of FF have rAF but not cAF\nif (!raf || !caf) {\n  var last = 0,\n    id = 0,\n    queue = [],\n    frameDuration = 1000 / 60;\n  raf = function (callback) {\n    if (queue.length === 0) {\n      var _now = now(),\n        next = Math.max(0, frameDuration - (_now - last));\n      last = next + _now;\n      setTimeout(function () {\n        var cp = queue.slice(0);\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0;\n        for (var i = 0; i < cp.length; i++) {\n          if (!cp[i].cancelled) {\n            try {\n              cp[i].callback(last);\n            } catch (e) {\n              setTimeout(function () {\n                throw e;\n              }, 0);\n            }\n          }\n        }\n      }, Math.round(next));\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    });\n    return id;\n  };\n  caf = function (handle) {\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].handle === handle) {\n        queue[i].cancelled = true;\n      }\n    }\n  };\n}\nmodule.exports = function (fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn);\n};\nmodule.exports.cancel = function () {\n  caf.apply(root, arguments);\n};\nmodule.exports.polyfill = function (object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf;\n  object.cancelAnimationFrame = caf;\n};","// Generated by CoffeeScript 1.12.2\n(function () {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n  if (typeof performance !== \"undefined\" && performance !== null && performance.now) {\n    module.exports = function () {\n      return performance.now();\n    };\n  } else if (typeof process !== \"undefined\" && process !== null && process.hrtime) {\n    module.exports = function () {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function () {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function () {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function () {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n}).call(this);","/*\n\tBased on rgbcolor.js by Stoyan Stefanov <sstoo@gmail.com>\n\thttp://www.phpied.com/rgb-color-parser-in-javascript/\n*/\n\nmodule.exports = function (color_string) {\n  this.ok = false;\n  this.alpha = 1.0;\n\n  // strip any leading #\n  if (color_string.charAt(0) == '#') {\n    // remove # if any\n    color_string = color_string.substr(1, 6);\n  }\n  color_string = color_string.replace(/ /g, '');\n  color_string = color_string.toLowerCase();\n\n  // before getting into regexps, try simple matches\n  // and overwrite the input\n  var simple_colors = {\n    aliceblue: 'f0f8ff',\n    antiquewhite: 'faebd7',\n    aqua: '00ffff',\n    aquamarine: '7fffd4',\n    azure: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '000000',\n    blanchedalmond: 'ffebcd',\n    blue: '0000ff',\n    blueviolet: '8a2be2',\n    brown: 'a52a2a',\n    burlywood: 'deb887',\n    cadetblue: '5f9ea0',\n    chartreuse: '7fff00',\n    chocolate: 'd2691e',\n    coral: 'ff7f50',\n    cornflowerblue: '6495ed',\n    cornsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: '00ffff',\n    darkblue: '00008b',\n    darkcyan: '008b8b',\n    darkgoldenrod: 'b8860b',\n    darkgray: 'a9a9a9',\n    darkgreen: '006400',\n    darkkhaki: 'bdb76b',\n    darkmagenta: '8b008b',\n    darkolivegreen: '556b2f',\n    darkorange: 'ff8c00',\n    darkorchid: '9932cc',\n    darkred: '8b0000',\n    darksalmon: 'e9967a',\n    darkseagreen: '8fbc8f',\n    darkslateblue: '483d8b',\n    darkslategray: '2f4f4f',\n    darkturquoise: '00ced1',\n    darkviolet: '9400d3',\n    deeppink: 'ff1493',\n    deepskyblue: '00bfff',\n    dimgray: '696969',\n    dodgerblue: '1e90ff',\n    feldspar: 'd19275',\n    firebrick: 'b22222',\n    floralwhite: 'fffaf0',\n    forestgreen: '228b22',\n    fuchsia: 'ff00ff',\n    gainsboro: 'dcdcdc',\n    ghostwhite: 'f8f8ff',\n    gold: 'ffd700',\n    goldenrod: 'daa520',\n    gray: '808080',\n    green: '008000',\n    greenyellow: 'adff2f',\n    honeydew: 'f0fff0',\n    hotpink: 'ff69b4',\n    indianred: 'cd5c5c',\n    indigo: '4b0082',\n    ivory: 'fffff0',\n    khaki: 'f0e68c',\n    lavender: 'e6e6fa',\n    lavenderblush: 'fff0f5',\n    lawngreen: '7cfc00',\n    lemonchiffon: 'fffacd',\n    lightblue: 'add8e6',\n    lightcoral: 'f08080',\n    lightcyan: 'e0ffff',\n    lightgoldenrodyellow: 'fafad2',\n    lightgrey: 'd3d3d3',\n    lightgreen: '90ee90',\n    lightpink: 'ffb6c1',\n    lightsalmon: 'ffa07a',\n    lightseagreen: '20b2aa',\n    lightskyblue: '87cefa',\n    lightslateblue: '8470ff',\n    lightslategray: '778899',\n    lightsteelblue: 'b0c4de',\n    lightyellow: 'ffffe0',\n    lime: '00ff00',\n    limegreen: '32cd32',\n    linen: 'faf0e6',\n    magenta: 'ff00ff',\n    maroon: '800000',\n    mediumaquamarine: '66cdaa',\n    mediumblue: '0000cd',\n    mediumorchid: 'ba55d3',\n    mediumpurple: '9370d8',\n    mediumseagreen: '3cb371',\n    mediumslateblue: '7b68ee',\n    mediumspringgreen: '00fa9a',\n    mediumturquoise: '48d1cc',\n    mediumvioletred: 'c71585',\n    midnightblue: '191970',\n    mintcream: 'f5fffa',\n    mistyrose: 'ffe4e1',\n    moccasin: 'ffe4b5',\n    navajowhite: 'ffdead',\n    navy: '000080',\n    oldlace: 'fdf5e6',\n    olive: '808000',\n    olivedrab: '6b8e23',\n    orange: 'ffa500',\n    orangered: 'ff4500',\n    orchid: 'da70d6',\n    palegoldenrod: 'eee8aa',\n    palegreen: '98fb98',\n    paleturquoise: 'afeeee',\n    palevioletred: 'd87093',\n    papayawhip: 'ffefd5',\n    peachpuff: 'ffdab9',\n    peru: 'cd853f',\n    pink: 'ffc0cb',\n    plum: 'dda0dd',\n    powderblue: 'b0e0e6',\n    purple: '800080',\n    rebeccapurple: '663399',\n    red: 'ff0000',\n    rosybrown: 'bc8f8f',\n    royalblue: '4169e1',\n    saddlebrown: '8b4513',\n    salmon: 'fa8072',\n    sandybrown: 'f4a460',\n    seagreen: '2e8b57',\n    seashell: 'fff5ee',\n    sienna: 'a0522d',\n    silver: 'c0c0c0',\n    skyblue: '87ceeb',\n    slateblue: '6a5acd',\n    slategray: '708090',\n    snow: 'fffafa',\n    springgreen: '00ff7f',\n    steelblue: '4682b4',\n    tan: 'd2b48c',\n    teal: '008080',\n    thistle: 'd8bfd8',\n    tomato: 'ff6347',\n    turquoise: '40e0d0',\n    violet: 'ee82ee',\n    violetred: 'd02090',\n    wheat: 'f5deb3',\n    white: 'ffffff',\n    whitesmoke: 'f5f5f5',\n    yellow: 'ffff00',\n    yellowgreen: '9acd32'\n  };\n  color_string = simple_colors[color_string] || color_string;\n  // emd of simple type-in colors\n\n  // array of color definition objects\n  var color_defs = [{\n    re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*((?:\\d?\\.)?\\d)\\)$/,\n    example: ['rgba(123, 234, 45, 0.8)', 'rgba(255,234,245,1.0)'],\n    process: function (bits) {\n      return [parseInt(bits[1]), parseInt(bits[2]), parseInt(bits[3]), parseFloat(bits[4])];\n    }\n  }, {\n    re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n    example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],\n    process: function (bits) {\n      return [parseInt(bits[1]), parseInt(bits[2]), parseInt(bits[3])];\n    }\n  }, {\n    re: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    example: ['#00ff00', '336699'],\n    process: function (bits) {\n      return [parseInt(bits[1], 16), parseInt(bits[2], 16), parseInt(bits[3], 16)];\n    }\n  }, {\n    re: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    example: ['#fb0', 'f0f'],\n    process: function (bits) {\n      return [parseInt(bits[1] + bits[1], 16), parseInt(bits[2] + bits[2], 16), parseInt(bits[3] + bits[3], 16)];\n    }\n  }];\n\n  // search through the definitions to find a match\n  for (var i = 0; i < color_defs.length; i++) {\n    var re = color_defs[i].re;\n    var processor = color_defs[i].process;\n    var bits = re.exec(color_string);\n    if (bits) {\n      var channels = processor(bits);\n      this.r = channels[0];\n      this.g = channels[1];\n      this.b = channels[2];\n      if (channels.length > 3) {\n        this.alpha = channels[3];\n      }\n      this.ok = true;\n    }\n  }\n\n  // validate/cleanup values\n  this.r = this.r < 0 || isNaN(this.r) ? 0 : this.r > 255 ? 255 : this.r;\n  this.g = this.g < 0 || isNaN(this.g) ? 0 : this.g > 255 ? 255 : this.g;\n  this.b = this.b < 0 || isNaN(this.b) ? 0 : this.b > 255 ? 255 : this.b;\n  this.alpha = this.alpha < 0 ? 0 : this.alpha > 1.0 || isNaN(this.alpha) ? 1.0 : this.alpha;\n\n  // some getters\n  this.toRGB = function () {\n    return 'rgb(' + this.r + ', ' + this.g + ', ' + this.b + ')';\n  };\n  this.toRGBA = function () {\n    return 'rgba(' + this.r + ', ' + this.g + ', ' + this.b + ', ' + this.alpha + ')';\n  };\n  this.toHex = function () {\n    var r = this.r.toString(16);\n    var g = this.g.toString(16);\n    var b = this.b.toString(16);\n    if (r.length == 1) r = '0' + r;\n    if (g.length == 1) g = '0' + g;\n    if (b.length == 1) b = '0' + b;\n    return '#' + r + g + b;\n  };\n\n  // help\n  this.getHelpXML = function () {\n    var examples = new Array();\n    // add regexps\n    for (var i = 0; i < color_defs.length; i++) {\n      var example = color_defs[i].example;\n      for (var j = 0; j < example.length; j++) {\n        examples[examples.length] = example[j];\n      }\n    }\n    // add type-in colors\n    for (var sc in simple_colors) {\n      examples[examples.length] = sc;\n    }\n    var xml = document.createElement('ul');\n    xml.setAttribute('id', 'rgbcolor-examples');\n    for (var i = 0; i < examples.length; i++) {\n      try {\n        var list_item = document.createElement('li');\n        var list_color = new RGBColor(examples[i]);\n        var example_div = document.createElement('div');\n        example_div.style.cssText = 'margin: 3px; ' + 'border: 1px solid black; ' + 'background:' + list_color.toHex() + '; ' + 'color:' + list_color.toHex();\n        example_div.appendChild(document.createTextNode('test'));\n        var list_item_value = document.createTextNode(' ' + examples[i] + ' -> ' + list_color.toRGB() + ' -> ' + list_color.toHex());\n        list_item.appendChild(example_div);\n        list_item.appendChild(list_item_value);\n        xml.appendChild(list_item);\n      } catch (e) {}\n    }\n    return xml;\n  };\n};","/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\nvar t = function (r, e) {\n  return (t = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (t, r) {\n    t.__proto__ = r;\n  } || function (t, r) {\n    for (var e in r) Object.prototype.hasOwnProperty.call(r, e) && (t[e] = r[e]);\n  })(r, e);\n};\nfunction r(r, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Class extends value \" + String(e) + \" is not a constructor or null\");\n  function i() {\n    this.constructor = r;\n  }\n  t(r, e), r.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());\n}\nfunction e(t) {\n  var r = \"\";\n  Array.isArray(t) || (t = [t]);\n  for (var e = 0; e < t.length; e++) {\n    var i = t[e];\n    if (i.type === _.CLOSE_PATH) r += \"z\";else if (i.type === _.HORIZ_LINE_TO) r += (i.relative ? \"h\" : \"H\") + i.x;else if (i.type === _.VERT_LINE_TO) r += (i.relative ? \"v\" : \"V\") + i.y;else if (i.type === _.MOVE_TO) r += (i.relative ? \"m\" : \"M\") + i.x + \" \" + i.y;else if (i.type === _.LINE_TO) r += (i.relative ? \"l\" : \"L\") + i.x + \" \" + i.y;else if (i.type === _.CURVE_TO) r += (i.relative ? \"c\" : \"C\") + i.x1 + \" \" + i.y1 + \" \" + i.x2 + \" \" + i.y2 + \" \" + i.x + \" \" + i.y;else if (i.type === _.SMOOTH_CURVE_TO) r += (i.relative ? \"s\" : \"S\") + i.x2 + \" \" + i.y2 + \" \" + i.x + \" \" + i.y;else if (i.type === _.QUAD_TO) r += (i.relative ? \"q\" : \"Q\") + i.x1 + \" \" + i.y1 + \" \" + i.x + \" \" + i.y;else if (i.type === _.SMOOTH_QUAD_TO) r += (i.relative ? \"t\" : \"T\") + i.x + \" \" + i.y;else {\n      if (i.type !== _.ARC) throw new Error('Unexpected command type \"' + i.type + '\" at index ' + e + \".\");\n      r += (i.relative ? \"a\" : \"A\") + i.rX + \" \" + i.rY + \" \" + i.xRot + \" \" + +i.lArcFlag + \" \" + +i.sweepFlag + \" \" + i.x + \" \" + i.y;\n    }\n  }\n  return r;\n}\nfunction i(t, r) {\n  var e = t[0],\n    i = t[1];\n  return [e * Math.cos(r) - i * Math.sin(r), e * Math.sin(r) + i * Math.cos(r)];\n}\nfunction a() {\n  for (var t = [], r = 0; r < arguments.length; r++) t[r] = arguments[r];\n  for (var e = 0; e < t.length; e++) if (\"number\" != typeof t[e]) throw new Error(\"assertNumbers arguments[\" + e + \"] is not a number. \" + typeof t[e] + \" == typeof \" + t[e]);\n  return !0;\n}\nvar n = Math.PI;\nfunction o(t, r, e) {\n  t.lArcFlag = 0 === t.lArcFlag ? 0 : 1, t.sweepFlag = 0 === t.sweepFlag ? 0 : 1;\n  var a = t.rX,\n    o = t.rY,\n    s = t.x,\n    u = t.y;\n  a = Math.abs(t.rX), o = Math.abs(t.rY);\n  var h = i([(r - s) / 2, (e - u) / 2], -t.xRot / 180 * n),\n    c = h[0],\n    y = h[1],\n    p = Math.pow(c, 2) / Math.pow(a, 2) + Math.pow(y, 2) / Math.pow(o, 2);\n  1 < p && (a *= Math.sqrt(p), o *= Math.sqrt(p)), t.rX = a, t.rY = o;\n  var m = Math.pow(a, 2) * Math.pow(y, 2) + Math.pow(o, 2) * Math.pow(c, 2),\n    O = (t.lArcFlag !== t.sweepFlag ? 1 : -1) * Math.sqrt(Math.max(0, (Math.pow(a, 2) * Math.pow(o, 2) - m) / m)),\n    l = a * y / o * O,\n    T = -o * c / a * O,\n    v = i([l, T], t.xRot / 180 * n);\n  t.cX = v[0] + (r + s) / 2, t.cY = v[1] + (e + u) / 2, t.phi1 = Math.atan2((y - T) / o, (c - l) / a), t.phi2 = Math.atan2((-y - T) / o, (-c - l) / a), 0 === t.sweepFlag && t.phi2 > t.phi1 && (t.phi2 -= 2 * n), 1 === t.sweepFlag && t.phi2 < t.phi1 && (t.phi2 += 2 * n), t.phi1 *= 180 / n, t.phi2 *= 180 / n;\n}\nfunction s(t, r, e) {\n  a(t, r, e);\n  var i = t * t + r * r - e * e;\n  if (0 > i) return [];\n  if (0 === i) return [[t * e / (t * t + r * r), r * e / (t * t + r * r)]];\n  var n = Math.sqrt(i);\n  return [[(t * e + r * n) / (t * t + r * r), (r * e - t * n) / (t * t + r * r)], [(t * e - r * n) / (t * t + r * r), (r * e + t * n) / (t * t + r * r)]];\n}\nvar u,\n  h = Math.PI / 180;\nfunction c(t, r, e) {\n  return (1 - e) * t + e * r;\n}\nfunction y(t, r, e, i) {\n  return t + Math.cos(i / 180 * n) * r + Math.sin(i / 180 * n) * e;\n}\nfunction p(t, r, e, i) {\n  var a = 1e-6,\n    n = r - t,\n    o = e - r,\n    s = 3 * n + 3 * (i - e) - 6 * o,\n    u = 6 * (o - n),\n    h = 3 * n;\n  return Math.abs(s) < a ? [-h / u] : function (t, r, e) {\n    void 0 === e && (e = 1e-6);\n    var i = t * t / 4 - r;\n    if (i < -e) return [];\n    if (i <= e) return [-t / 2];\n    var a = Math.sqrt(i);\n    return [-t / 2 - a, -t / 2 + a];\n  }(u / s, h / s, a);\n}\nfunction m(t, r, e, i, a) {\n  var n = 1 - a;\n  return t * (n * n * n) + r * (3 * n * n * a) + e * (3 * n * a * a) + i * (a * a * a);\n}\n!function (t) {\n  function r() {\n    return u(function (t, r, e) {\n      return t.relative && (void 0 !== t.x1 && (t.x1 += r), void 0 !== t.y1 && (t.y1 += e), void 0 !== t.x2 && (t.x2 += r), void 0 !== t.y2 && (t.y2 += e), void 0 !== t.x && (t.x += r), void 0 !== t.y && (t.y += e), t.relative = !1), t;\n    });\n  }\n  function e() {\n    var t = NaN,\n      r = NaN,\n      e = NaN,\n      i = NaN;\n    return u(function (a, n, o) {\n      return a.type & _.SMOOTH_CURVE_TO && (a.type = _.CURVE_TO, t = isNaN(t) ? n : t, r = isNaN(r) ? o : r, a.x1 = a.relative ? n - t : 2 * n - t, a.y1 = a.relative ? o - r : 2 * o - r), a.type & _.CURVE_TO ? (t = a.relative ? n + a.x2 : a.x2, r = a.relative ? o + a.y2 : a.y2) : (t = NaN, r = NaN), a.type & _.SMOOTH_QUAD_TO && (a.type = _.QUAD_TO, e = isNaN(e) ? n : e, i = isNaN(i) ? o : i, a.x1 = a.relative ? n - e : 2 * n - e, a.y1 = a.relative ? o - i : 2 * o - i), a.type & _.QUAD_TO ? (e = a.relative ? n + a.x1 : a.x1, i = a.relative ? o + a.y1 : a.y1) : (e = NaN, i = NaN), a;\n    });\n  }\n  function n() {\n    var t = NaN,\n      r = NaN;\n    return u(function (e, i, a) {\n      if (e.type & _.SMOOTH_QUAD_TO && (e.type = _.QUAD_TO, t = isNaN(t) ? i : t, r = isNaN(r) ? a : r, e.x1 = e.relative ? i - t : 2 * i - t, e.y1 = e.relative ? a - r : 2 * a - r), e.type & _.QUAD_TO) {\n        t = e.relative ? i + e.x1 : e.x1, r = e.relative ? a + e.y1 : e.y1;\n        var n = e.x1,\n          o = e.y1;\n        e.type = _.CURVE_TO, e.x1 = ((e.relative ? 0 : i) + 2 * n) / 3, e.y1 = ((e.relative ? 0 : a) + 2 * o) / 3, e.x2 = (e.x + 2 * n) / 3, e.y2 = (e.y + 2 * o) / 3;\n      } else t = NaN, r = NaN;\n      return e;\n    });\n  }\n  function u(t) {\n    var r = 0,\n      e = 0,\n      i = NaN,\n      a = NaN;\n    return function (n) {\n      if (isNaN(i) && !(n.type & _.MOVE_TO)) throw new Error(\"path must start with moveto\");\n      var o = t(n, r, e, i, a);\n      return n.type & _.CLOSE_PATH && (r = i, e = a), void 0 !== n.x && (r = n.relative ? r + n.x : n.x), void 0 !== n.y && (e = n.relative ? e + n.y : n.y), n.type & _.MOVE_TO && (i = r, a = e), o;\n    };\n  }\n  function O(t, r, e, i, n, o) {\n    return a(t, r, e, i, n, o), u(function (a, s, u, h) {\n      var c = a.x1,\n        y = a.x2,\n        p = a.relative && !isNaN(h),\n        m = void 0 !== a.x ? a.x : p ? 0 : s,\n        O = void 0 !== a.y ? a.y : p ? 0 : u;\n      function l(t) {\n        return t * t;\n      }\n      a.type & _.HORIZ_LINE_TO && 0 !== r && (a.type = _.LINE_TO, a.y = a.relative ? 0 : u), a.type & _.VERT_LINE_TO && 0 !== e && (a.type = _.LINE_TO, a.x = a.relative ? 0 : s), void 0 !== a.x && (a.x = a.x * t + O * e + (p ? 0 : n)), void 0 !== a.y && (a.y = m * r + a.y * i + (p ? 0 : o)), void 0 !== a.x1 && (a.x1 = a.x1 * t + a.y1 * e + (p ? 0 : n)), void 0 !== a.y1 && (a.y1 = c * r + a.y1 * i + (p ? 0 : o)), void 0 !== a.x2 && (a.x2 = a.x2 * t + a.y2 * e + (p ? 0 : n)), void 0 !== a.y2 && (a.y2 = y * r + a.y2 * i + (p ? 0 : o));\n      var T = t * i - r * e;\n      if (void 0 !== a.xRot && (1 !== t || 0 !== r || 0 !== e || 1 !== i)) if (0 === T) delete a.rX, delete a.rY, delete a.xRot, delete a.lArcFlag, delete a.sweepFlag, a.type = _.LINE_TO;else {\n        var v = a.xRot * Math.PI / 180,\n          f = Math.sin(v),\n          N = Math.cos(v),\n          x = 1 / l(a.rX),\n          d = 1 / l(a.rY),\n          E = l(N) * x + l(f) * d,\n          A = 2 * f * N * (x - d),\n          C = l(f) * x + l(N) * d,\n          M = E * i * i - A * r * i + C * r * r,\n          R = A * (t * i + r * e) - 2 * (E * e * i + C * t * r),\n          g = E * e * e - A * t * e + C * t * t,\n          I = (Math.atan2(R, M - g) + Math.PI) % Math.PI / 2,\n          S = Math.sin(I),\n          L = Math.cos(I);\n        a.rX = Math.abs(T) / Math.sqrt(M * l(L) + R * S * L + g * l(S)), a.rY = Math.abs(T) / Math.sqrt(M * l(S) - R * S * L + g * l(L)), a.xRot = 180 * I / Math.PI;\n      }\n      return void 0 !== a.sweepFlag && 0 > T && (a.sweepFlag = +!a.sweepFlag), a;\n    });\n  }\n  function l() {\n    return function (t) {\n      var r = {};\n      for (var e in t) r[e] = t[e];\n      return r;\n    };\n  }\n  t.ROUND = function (t) {\n    function r(r) {\n      return Math.round(r * t) / t;\n    }\n    return void 0 === t && (t = 1e13), a(t), function (t) {\n      return void 0 !== t.x1 && (t.x1 = r(t.x1)), void 0 !== t.y1 && (t.y1 = r(t.y1)), void 0 !== t.x2 && (t.x2 = r(t.x2)), void 0 !== t.y2 && (t.y2 = r(t.y2)), void 0 !== t.x && (t.x = r(t.x)), void 0 !== t.y && (t.y = r(t.y)), void 0 !== t.rX && (t.rX = r(t.rX)), void 0 !== t.rY && (t.rY = r(t.rY)), t;\n    };\n  }, t.TO_ABS = r, t.TO_REL = function () {\n    return u(function (t, r, e) {\n      return t.relative || (void 0 !== t.x1 && (t.x1 -= r), void 0 !== t.y1 && (t.y1 -= e), void 0 !== t.x2 && (t.x2 -= r), void 0 !== t.y2 && (t.y2 -= e), void 0 !== t.x && (t.x -= r), void 0 !== t.y && (t.y -= e), t.relative = !0), t;\n    });\n  }, t.NORMALIZE_HVZ = function (t, r, e) {\n    return void 0 === t && (t = !0), void 0 === r && (r = !0), void 0 === e && (e = !0), u(function (i, a, n, o, s) {\n      if (isNaN(o) && !(i.type & _.MOVE_TO)) throw new Error(\"path must start with moveto\");\n      return r && i.type & _.HORIZ_LINE_TO && (i.type = _.LINE_TO, i.y = i.relative ? 0 : n), e && i.type & _.VERT_LINE_TO && (i.type = _.LINE_TO, i.x = i.relative ? 0 : a), t && i.type & _.CLOSE_PATH && (i.type = _.LINE_TO, i.x = i.relative ? o - a : o, i.y = i.relative ? s - n : s), i.type & _.ARC && (0 === i.rX || 0 === i.rY) && (i.type = _.LINE_TO, delete i.rX, delete i.rY, delete i.xRot, delete i.lArcFlag, delete i.sweepFlag), i;\n    });\n  }, t.NORMALIZE_ST = e, t.QT_TO_C = n, t.INFO = u, t.SANITIZE = function (t) {\n    void 0 === t && (t = 0), a(t);\n    var r = NaN,\n      e = NaN,\n      i = NaN,\n      n = NaN;\n    return u(function (a, o, s, u, h) {\n      var c = Math.abs,\n        y = !1,\n        p = 0,\n        m = 0;\n      if (a.type & _.SMOOTH_CURVE_TO && (p = isNaN(r) ? 0 : o - r, m = isNaN(e) ? 0 : s - e), a.type & (_.CURVE_TO | _.SMOOTH_CURVE_TO) ? (r = a.relative ? o + a.x2 : a.x2, e = a.relative ? s + a.y2 : a.y2) : (r = NaN, e = NaN), a.type & _.SMOOTH_QUAD_TO ? (i = isNaN(i) ? o : 2 * o - i, n = isNaN(n) ? s : 2 * s - n) : a.type & _.QUAD_TO ? (i = a.relative ? o + a.x1 : a.x1, n = a.relative ? s + a.y1 : a.y2) : (i = NaN, n = NaN), a.type & _.LINE_COMMANDS || a.type & _.ARC && (0 === a.rX || 0 === a.rY || !a.lArcFlag) || a.type & _.CURVE_TO || a.type & _.SMOOTH_CURVE_TO || a.type & _.QUAD_TO || a.type & _.SMOOTH_QUAD_TO) {\n        var O = void 0 === a.x ? 0 : a.relative ? a.x : a.x - o,\n          l = void 0 === a.y ? 0 : a.relative ? a.y : a.y - s;\n        p = isNaN(i) ? void 0 === a.x1 ? p : a.relative ? a.x : a.x1 - o : i - o, m = isNaN(n) ? void 0 === a.y1 ? m : a.relative ? a.y : a.y1 - s : n - s;\n        var T = void 0 === a.x2 ? 0 : a.relative ? a.x : a.x2 - o,\n          v = void 0 === a.y2 ? 0 : a.relative ? a.y : a.y2 - s;\n        c(O) <= t && c(l) <= t && c(p) <= t && c(m) <= t && c(T) <= t && c(v) <= t && (y = !0);\n      }\n      return a.type & _.CLOSE_PATH && c(o - u) <= t && c(s - h) <= t && (y = !0), y ? [] : a;\n    });\n  }, t.MATRIX = O, t.ROTATE = function (t, r, e) {\n    void 0 === r && (r = 0), void 0 === e && (e = 0), a(t, r, e);\n    var i = Math.sin(t),\n      n = Math.cos(t);\n    return O(n, i, -i, n, r - r * n + e * i, e - r * i - e * n);\n  }, t.TRANSLATE = function (t, r) {\n    return void 0 === r && (r = 0), a(t, r), O(1, 0, 0, 1, t, r);\n  }, t.SCALE = function (t, r) {\n    return void 0 === r && (r = t), a(t, r), O(t, 0, 0, r, 0, 0);\n  }, t.SKEW_X = function (t) {\n    return a(t), O(1, 0, Math.atan(t), 1, 0, 0);\n  }, t.SKEW_Y = function (t) {\n    return a(t), O(1, Math.atan(t), 0, 1, 0, 0);\n  }, t.X_AXIS_SYMMETRY = function (t) {\n    return void 0 === t && (t = 0), a(t), O(-1, 0, 0, 1, t, 0);\n  }, t.Y_AXIS_SYMMETRY = function (t) {\n    return void 0 === t && (t = 0), a(t), O(1, 0, 0, -1, 0, t);\n  }, t.A_TO_C = function () {\n    return u(function (t, r, e) {\n      return _.ARC === t.type ? function (t, r, e) {\n        var a, n, s, u;\n        t.cX || o(t, r, e);\n        for (var y = Math.min(t.phi1, t.phi2), p = Math.max(t.phi1, t.phi2) - y, m = Math.ceil(p / 90), O = new Array(m), l = r, T = e, v = 0; v < m; v++) {\n          var f = c(t.phi1, t.phi2, v / m),\n            N = c(t.phi1, t.phi2, (v + 1) / m),\n            x = N - f,\n            d = 4 / 3 * Math.tan(x * h / 4),\n            E = [Math.cos(f * h) - d * Math.sin(f * h), Math.sin(f * h) + d * Math.cos(f * h)],\n            A = E[0],\n            C = E[1],\n            M = [Math.cos(N * h), Math.sin(N * h)],\n            R = M[0],\n            g = M[1],\n            I = [R + d * Math.sin(N * h), g - d * Math.cos(N * h)],\n            S = I[0],\n            L = I[1];\n          O[v] = {\n            relative: t.relative,\n            type: _.CURVE_TO\n          };\n          var H = function (r, e) {\n            var a = i([r * t.rX, e * t.rY], t.xRot),\n              n = a[0],\n              o = a[1];\n            return [t.cX + n, t.cY + o];\n          };\n          a = H(A, C), O[v].x1 = a[0], O[v].y1 = a[1], n = H(S, L), O[v].x2 = n[0], O[v].y2 = n[1], s = H(R, g), O[v].x = s[0], O[v].y = s[1], t.relative && (O[v].x1 -= l, O[v].y1 -= T, O[v].x2 -= l, O[v].y2 -= T, O[v].x -= l, O[v].y -= T), l = (u = [O[v].x, O[v].y])[0], T = u[1];\n        }\n        return O;\n      }(t, t.relative ? 0 : r, t.relative ? 0 : e) : t;\n    });\n  }, t.ANNOTATE_ARCS = function () {\n    return u(function (t, r, e) {\n      return t.relative && (r = 0, e = 0), _.ARC === t.type && o(t, r, e), t;\n    });\n  }, t.CLONE = l, t.CALCULATE_BOUNDS = function () {\n    var t = function (t) {\n        var r = {};\n        for (var e in t) r[e] = t[e];\n        return r;\n      },\n      i = r(),\n      a = n(),\n      h = e(),\n      c = u(function (r, e, n) {\n        var u = h(a(i(t(r))));\n        function O(t) {\n          t > c.maxX && (c.maxX = t), t < c.minX && (c.minX = t);\n        }\n        function l(t) {\n          t > c.maxY && (c.maxY = t), t < c.minY && (c.minY = t);\n        }\n        if (u.type & _.DRAWING_COMMANDS && (O(e), l(n)), u.type & _.HORIZ_LINE_TO && O(u.x), u.type & _.VERT_LINE_TO && l(u.y), u.type & _.LINE_TO && (O(u.x), l(u.y)), u.type & _.CURVE_TO) {\n          O(u.x), l(u.y);\n          for (var T = 0, v = p(e, u.x1, u.x2, u.x); T < v.length; T++) {\n            0 < (w = v[T]) && 1 > w && O(m(e, u.x1, u.x2, u.x, w));\n          }\n          for (var f = 0, N = p(n, u.y1, u.y2, u.y); f < N.length; f++) {\n            0 < (w = N[f]) && 1 > w && l(m(n, u.y1, u.y2, u.y, w));\n          }\n        }\n        if (u.type & _.ARC) {\n          O(u.x), l(u.y), o(u, e, n);\n          for (var x = u.xRot / 180 * Math.PI, d = Math.cos(x) * u.rX, E = Math.sin(x) * u.rX, A = -Math.sin(x) * u.rY, C = Math.cos(x) * u.rY, M = u.phi1 < u.phi2 ? [u.phi1, u.phi2] : -180 > u.phi2 ? [u.phi2 + 360, u.phi1 + 360] : [u.phi2, u.phi1], R = M[0], g = M[1], I = function (t) {\n              var r = t[0],\n                e = t[1],\n                i = 180 * Math.atan2(e, r) / Math.PI;\n              return i < R ? i + 360 : i;\n            }, S = 0, L = s(A, -d, 0).map(I); S < L.length; S++) {\n            (w = L[S]) > R && w < g && O(y(u.cX, d, A, w));\n          }\n          for (var H = 0, U = s(C, -E, 0).map(I); H < U.length; H++) {\n            var w;\n            (w = U[H]) > R && w < g && l(y(u.cY, E, C, w));\n          }\n        }\n        return r;\n      });\n    return c.minX = 1 / 0, c.maxX = -1 / 0, c.minY = 1 / 0, c.maxY = -1 / 0, c;\n  };\n}(u || (u = {}));\nvar O,\n  l = function () {\n    function t() {}\n    return t.prototype.round = function (t) {\n      return this.transform(u.ROUND(t));\n    }, t.prototype.toAbs = function () {\n      return this.transform(u.TO_ABS());\n    }, t.prototype.toRel = function () {\n      return this.transform(u.TO_REL());\n    }, t.prototype.normalizeHVZ = function (t, r, e) {\n      return this.transform(u.NORMALIZE_HVZ(t, r, e));\n    }, t.prototype.normalizeST = function () {\n      return this.transform(u.NORMALIZE_ST());\n    }, t.prototype.qtToC = function () {\n      return this.transform(u.QT_TO_C());\n    }, t.prototype.aToC = function () {\n      return this.transform(u.A_TO_C());\n    }, t.prototype.sanitize = function (t) {\n      return this.transform(u.SANITIZE(t));\n    }, t.prototype.translate = function (t, r) {\n      return this.transform(u.TRANSLATE(t, r));\n    }, t.prototype.scale = function (t, r) {\n      return this.transform(u.SCALE(t, r));\n    }, t.prototype.rotate = function (t, r, e) {\n      return this.transform(u.ROTATE(t, r, e));\n    }, t.prototype.matrix = function (t, r, e, i, a, n) {\n      return this.transform(u.MATRIX(t, r, e, i, a, n));\n    }, t.prototype.skewX = function (t) {\n      return this.transform(u.SKEW_X(t));\n    }, t.prototype.skewY = function (t) {\n      return this.transform(u.SKEW_Y(t));\n    }, t.prototype.xSymmetry = function (t) {\n      return this.transform(u.X_AXIS_SYMMETRY(t));\n    }, t.prototype.ySymmetry = function (t) {\n      return this.transform(u.Y_AXIS_SYMMETRY(t));\n    }, t.prototype.annotateArcs = function () {\n      return this.transform(u.ANNOTATE_ARCS());\n    }, t;\n  }(),\n  T = function (t) {\n    return \" \" === t || \"\\t\" === t || \"\\r\" === t || \"\\n\" === t;\n  },\n  v = function (t) {\n    return \"0\".charCodeAt(0) <= t.charCodeAt(0) && t.charCodeAt(0) <= \"9\".charCodeAt(0);\n  },\n  f = function (t) {\n    function e() {\n      var r = t.call(this) || this;\n      return r.curNumber = \"\", r.curCommandType = -1, r.curCommandRelative = !1, r.canParseCommandOrComma = !0, r.curNumberHasExp = !1, r.curNumberHasExpDigits = !1, r.curNumberHasDecimal = !1, r.curArgs = [], r;\n    }\n    return r(e, t), e.prototype.finish = function (t) {\n      if (void 0 === t && (t = []), this.parse(\" \", t), 0 !== this.curArgs.length || !this.canParseCommandOrComma) throw new SyntaxError(\"Unterminated command at the path end.\");\n      return t;\n    }, e.prototype.parse = function (t, r) {\n      var e = this;\n      void 0 === r && (r = []);\n      for (var i = function (t) {\n          r.push(t), e.curArgs.length = 0, e.canParseCommandOrComma = !0;\n        }, a = 0; a < t.length; a++) {\n        var n = t[a],\n          o = !(this.curCommandType !== _.ARC || 3 !== this.curArgs.length && 4 !== this.curArgs.length || 1 !== this.curNumber.length || \"0\" !== this.curNumber && \"1\" !== this.curNumber),\n          s = v(n) && (\"0\" === this.curNumber && \"0\" === n || o);\n        if (!v(n) || s) {\n          if (\"e\" !== n && \"E\" !== n) {\n            if (\"-\" !== n && \"+\" !== n || !this.curNumberHasExp || this.curNumberHasExpDigits) {\n              if (\".\" !== n || this.curNumberHasExp || this.curNumberHasDecimal || o) {\n                if (this.curNumber && -1 !== this.curCommandType) {\n                  var u = Number(this.curNumber);\n                  if (isNaN(u)) throw new SyntaxError(\"Invalid number ending at \" + a);\n                  if (this.curCommandType === _.ARC) if (0 === this.curArgs.length || 1 === this.curArgs.length) {\n                    if (0 > u) throw new SyntaxError('Expected positive number, got \"' + u + '\" at index \"' + a + '\"');\n                  } else if ((3 === this.curArgs.length || 4 === this.curArgs.length) && \"0\" !== this.curNumber && \"1\" !== this.curNumber) throw new SyntaxError('Expected a flag, got \"' + this.curNumber + '\" at index \"' + a + '\"');\n                  this.curArgs.push(u), this.curArgs.length === N[this.curCommandType] && (_.HORIZ_LINE_TO === this.curCommandType ? i({\n                    type: _.HORIZ_LINE_TO,\n                    relative: this.curCommandRelative,\n                    x: u\n                  }) : _.VERT_LINE_TO === this.curCommandType ? i({\n                    type: _.VERT_LINE_TO,\n                    relative: this.curCommandRelative,\n                    y: u\n                  }) : this.curCommandType === _.MOVE_TO || this.curCommandType === _.LINE_TO || this.curCommandType === _.SMOOTH_QUAD_TO ? (i({\n                    type: this.curCommandType,\n                    relative: this.curCommandRelative,\n                    x: this.curArgs[0],\n                    y: this.curArgs[1]\n                  }), _.MOVE_TO === this.curCommandType && (this.curCommandType = _.LINE_TO)) : this.curCommandType === _.CURVE_TO ? i({\n                    type: _.CURVE_TO,\n                    relative: this.curCommandRelative,\n                    x1: this.curArgs[0],\n                    y1: this.curArgs[1],\n                    x2: this.curArgs[2],\n                    y2: this.curArgs[3],\n                    x: this.curArgs[4],\n                    y: this.curArgs[5]\n                  }) : this.curCommandType === _.SMOOTH_CURVE_TO ? i({\n                    type: _.SMOOTH_CURVE_TO,\n                    relative: this.curCommandRelative,\n                    x2: this.curArgs[0],\n                    y2: this.curArgs[1],\n                    x: this.curArgs[2],\n                    y: this.curArgs[3]\n                  }) : this.curCommandType === _.QUAD_TO ? i({\n                    type: _.QUAD_TO,\n                    relative: this.curCommandRelative,\n                    x1: this.curArgs[0],\n                    y1: this.curArgs[1],\n                    x: this.curArgs[2],\n                    y: this.curArgs[3]\n                  }) : this.curCommandType === _.ARC && i({\n                    type: _.ARC,\n                    relative: this.curCommandRelative,\n                    rX: this.curArgs[0],\n                    rY: this.curArgs[1],\n                    xRot: this.curArgs[2],\n                    lArcFlag: this.curArgs[3],\n                    sweepFlag: this.curArgs[4],\n                    x: this.curArgs[5],\n                    y: this.curArgs[6]\n                  })), this.curNumber = \"\", this.curNumberHasExpDigits = !1, this.curNumberHasExp = !1, this.curNumberHasDecimal = !1, this.canParseCommandOrComma = !0;\n                }\n                if (!T(n)) if (\",\" === n && this.canParseCommandOrComma) this.canParseCommandOrComma = !1;else if (\"+\" !== n && \"-\" !== n && \".\" !== n) {\n                  if (s) this.curNumber = n, this.curNumberHasDecimal = !1;else {\n                    if (0 !== this.curArgs.length) throw new SyntaxError(\"Unterminated command at index \" + a + \".\");\n                    if (!this.canParseCommandOrComma) throw new SyntaxError('Unexpected character \"' + n + '\" at index ' + a + \". Command cannot follow comma\");\n                    if (this.canParseCommandOrComma = !1, \"z\" !== n && \"Z\" !== n) {\n                      if (\"h\" === n || \"H\" === n) this.curCommandType = _.HORIZ_LINE_TO, this.curCommandRelative = \"h\" === n;else if (\"v\" === n || \"V\" === n) this.curCommandType = _.VERT_LINE_TO, this.curCommandRelative = \"v\" === n;else if (\"m\" === n || \"M\" === n) this.curCommandType = _.MOVE_TO, this.curCommandRelative = \"m\" === n;else if (\"l\" === n || \"L\" === n) this.curCommandType = _.LINE_TO, this.curCommandRelative = \"l\" === n;else if (\"c\" === n || \"C\" === n) this.curCommandType = _.CURVE_TO, this.curCommandRelative = \"c\" === n;else if (\"s\" === n || \"S\" === n) this.curCommandType = _.SMOOTH_CURVE_TO, this.curCommandRelative = \"s\" === n;else if (\"q\" === n || \"Q\" === n) this.curCommandType = _.QUAD_TO, this.curCommandRelative = \"q\" === n;else if (\"t\" === n || \"T\" === n) this.curCommandType = _.SMOOTH_QUAD_TO, this.curCommandRelative = \"t\" === n;else {\n                        if (\"a\" !== n && \"A\" !== n) throw new SyntaxError('Unexpected character \"' + n + '\" at index ' + a + \".\");\n                        this.curCommandType = _.ARC, this.curCommandRelative = \"a\" === n;\n                      }\n                    } else r.push({\n                      type: _.CLOSE_PATH\n                    }), this.canParseCommandOrComma = !0, this.curCommandType = -1;\n                  }\n                } else this.curNumber = n, this.curNumberHasDecimal = \".\" === n;\n              } else this.curNumber += n, this.curNumberHasDecimal = !0;\n            } else this.curNumber += n;\n          } else this.curNumber += n, this.curNumberHasExp = !0;\n        } else this.curNumber += n, this.curNumberHasExpDigits = this.curNumberHasExp;\n      }\n      return r;\n    }, e.prototype.transform = function (t) {\n      return Object.create(this, {\n        parse: {\n          value: function (r, e) {\n            void 0 === e && (e = []);\n            for (var i = 0, a = Object.getPrototypeOf(this).parse.call(this, r); i < a.length; i++) {\n              var n = a[i],\n                o = t(n);\n              Array.isArray(o) ? e.push.apply(e, o) : e.push(o);\n            }\n            return e;\n          }\n        }\n      });\n    }, e;\n  }(l),\n  _ = function (t) {\n    function i(r) {\n      var e = t.call(this) || this;\n      return e.commands = \"string\" == typeof r ? i.parse(r) : r, e;\n    }\n    return r(i, t), i.prototype.encode = function () {\n      return i.encode(this.commands);\n    }, i.prototype.getBounds = function () {\n      var t = u.CALCULATE_BOUNDS();\n      return this.transform(t), t;\n    }, i.prototype.transform = function (t) {\n      for (var r = [], e = 0, i = this.commands; e < i.length; e++) {\n        var a = t(i[e]);\n        Array.isArray(a) ? r.push.apply(r, a) : r.push(a);\n      }\n      return this.commands = r, this;\n    }, i.encode = function (t) {\n      return e(t);\n    }, i.parse = function (t) {\n      var r = new f(),\n        e = [];\n      return r.parse(t, e), r.finish(e), e;\n    }, i.CLOSE_PATH = 1, i.MOVE_TO = 2, i.HORIZ_LINE_TO = 4, i.VERT_LINE_TO = 8, i.LINE_TO = 16, i.CURVE_TO = 32, i.SMOOTH_CURVE_TO = 64, i.QUAD_TO = 128, i.SMOOTH_QUAD_TO = 256, i.ARC = 512, i.LINE_COMMANDS = i.LINE_TO | i.HORIZ_LINE_TO | i.VERT_LINE_TO, i.DRAWING_COMMANDS = i.HORIZ_LINE_TO | i.VERT_LINE_TO | i.LINE_TO | i.CURVE_TO | i.SMOOTH_CURVE_TO | i.QUAD_TO | i.SMOOTH_QUAD_TO | i.ARC, i;\n  }(l),\n  N = ((O = {})[_.MOVE_TO] = 2, O[_.LINE_TO] = 2, O[_.HORIZ_LINE_TO] = 1, O[_.VERT_LINE_TO] = 1, O[_.CLOSE_PATH] = 0, O[_.QUAD_TO] = 4, O[_.SMOOTH_QUAD_TO] = 2, O[_.CURVE_TO] = 6, O[_.SMOOTH_CURVE_TO] = 4, O[_.ARC] = 7, O);\nexport { N as COMMAND_ARG_COUNTS, _ as SVGPathData, f as SVGPathDataParser, u as SVGPathDataTransformer, e as encodeSVGPath };","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/* eslint-disable no-bitwise -- used for calculations */\n\n/* eslint-disable unicorn/prefer-query-selector -- aiming at\n  backward-compatibility */\n\n/**\n* StackBlur - a fast almost Gaussian Blur For Canvas\n*\n* In case you find this class useful - especially in commercial projects -\n* I am not totally unhappy for a small donation to my PayPal account\n* mario@quasimondo.de\n*\n* Or support me on flattr:\n* {@link https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript}.\n*\n* @module StackBlur\n* @author Mario Klingemann\n* Contact: mario@quasimondo.com\n* Website: {@link http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html}\n* Twitter: @quasimondo\n*\n* @copyright (c) 2010 Mario Klingemann\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\nvar mulTable = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\nvar shgTable = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\n/**\n * @param {string|HTMLImageElement} img\n * @param {string|HTMLCanvasElement} canvas\n * @param {Float} radius\n * @param {boolean} blurAlphaChannel\n * @param {boolean} useOffset\n * @param {boolean} skipStyles\n * @returns {undefined}\n */\n\nfunction processImage(img, canvas, radius, blurAlphaChannel, useOffset, skipStyles) {\n  if (typeof img === 'string') {\n    img = document.getElementById(img);\n  }\n  if (!img || Object.prototype.toString.call(img).slice(8, -1) === 'HTMLImageElement' && !('naturalWidth' in img)) {\n    return;\n  }\n  var dimensionType = useOffset ? 'offset' : 'natural';\n  var w = img[dimensionType + 'Width'];\n  var h = img[dimensionType + 'Height']; // add ImageBitmap support,can blur texture source\n\n  if (Object.prototype.toString.call(img).slice(8, -1) === 'ImageBitmap') {\n    w = img.width;\n    h = img.height;\n  }\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n  if (!canvas || !('getContext' in canvas)) {\n    return;\n  }\n  if (!skipStyles) {\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  context.clearRect(0, 0, w, h);\n  context.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight, 0, 0, w, h);\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n  if (blurAlphaChannel) {\n    processCanvasRGBA(canvas, 0, 0, w, h, radius);\n  } else {\n    processCanvasRGB(canvas, 0, 0, w, h, radius);\n  }\n}\n/**\n * @param {string|HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @throws {Error|TypeError}\n * @returns {ImageData} See {@link https://html.spec.whatwg.org/multipage/canvas.html#imagedata}\n */\n\nfunction getImageDataFromCanvas(canvas, topX, topY, width, height) {\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n  if (!canvas || _typeof(canvas) !== 'object' || !('getContext' in canvas)) {\n    throw new TypeError('Expecting canvas with `getContext` method ' + 'in processCanvasRGB(A) calls!');\n  }\n  var context = canvas.getContext('2d');\n  try {\n    return context.getImageData(topX, topY, width, height);\n  } catch (e) {\n    throw new Error('unable to access image data: ' + e);\n  }\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\nfunction processCanvasRGBA(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGBA(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\nfunction processImageDataRGBA(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n  for (var i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n  stack.next = stackStart;\n  var stackIn = null,\n    stackOut = null,\n    yw = 0,\n    yi = 0;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n  for (var y = 0; y < height; y++) {\n    stack = stackStart;\n    var pr = pixels[yi],\n      pg = pixels[yi + 1],\n      pb = pixels[yi + 2],\n      pa = pixels[yi + 3];\n    for (var _i = 0; _i < radiusPlus1; _i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n    var rInSum = 0,\n      gInSum = 0,\n      bInSum = 0,\n      aInSum = 0,\n      rOutSum = radiusPlus1 * pr,\n      gOutSum = radiusPlus1 * pg,\n      bOutSum = radiusPlus1 * pb,\n      aOutSum = radiusPlus1 * pa,\n      rSum = sumFactor * pr,\n      gSum = sumFactor * pg,\n      bSum = sumFactor * pb,\n      aSum = sumFactor * pa;\n    for (var _i2 = 1; _i2 < radiusPlus1; _i2++) {\n      var p = yi + ((widthMinus1 < _i2 ? widthMinus1 : _i2) << 2);\n      var r = pixels[p],\n        g = pixels[p + 1],\n        b = pixels[p + 2],\n        a = pixels[p + 3];\n      var rbs = radiusPlus1 - _i2;\n      rSum += (stack.r = r) * rbs;\n      gSum += (stack.g = g) * rbs;\n      bSum += (stack.b = b) * rbs;\n      aSum += (stack.a = a) * rbs;\n      rInSum += r;\n      gInSum += g;\n      bInSum += b;\n      aInSum += a;\n      stack = stack.next;\n    }\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (var x = 0; x < width; x++) {\n      var paInitial = aSum * mulSum >>> shgSum;\n      pixels[yi + 3] = paInitial;\n      if (paInitial !== 0) {\n        var _a2 = 255 / paInitial;\n        pixels[yi] = (rSum * mulSum >>> shgSum) * _a2;\n        pixels[yi + 1] = (gSum * mulSum >>> shgSum) * _a2;\n        pixels[yi + 2] = (bSum * mulSum >>> shgSum) * _a2;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n      var _p = x + radius + 1;\n      _p = yw + (_p < widthMinus1 ? _p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[_p];\n      gInSum += stackIn.g = pixels[_p + 1];\n      bInSum += stackIn.b = pixels[_p + 2];\n      aInSum += stackIn.a = pixels[_p + 3];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      aSum += aInSum;\n      stackIn = stackIn.next;\n      var _stackOut = stackOut,\n        _r = _stackOut.r,\n        _g = _stackOut.g,\n        _b = _stackOut.b,\n        _a = _stackOut.a;\n      rOutSum += _r;\n      gOutSum += _g;\n      bOutSum += _b;\n      aOutSum += _a;\n      rInSum -= _r;\n      gInSum -= _g;\n      bInSum -= _b;\n      aInSum -= _a;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n    yw += width;\n  }\n  for (var _x = 0; _x < width; _x++) {\n    yi = _x << 2;\n    var _pr = pixels[yi],\n      _pg = pixels[yi + 1],\n      _pb = pixels[yi + 2],\n      _pa = pixels[yi + 3],\n      _rOutSum = radiusPlus1 * _pr,\n      _gOutSum = radiusPlus1 * _pg,\n      _bOutSum = radiusPlus1 * _pb,\n      _aOutSum = radiusPlus1 * _pa,\n      _rSum = sumFactor * _pr,\n      _gSum = sumFactor * _pg,\n      _bSum = sumFactor * _pb,\n      _aSum = sumFactor * _pa;\n    stack = stackStart;\n    for (var _i3 = 0; _i3 < radiusPlus1; _i3++) {\n      stack.r = _pr;\n      stack.g = _pg;\n      stack.b = _pb;\n      stack.a = _pa;\n      stack = stack.next;\n    }\n    var yp = width;\n    var _gInSum = 0,\n      _bInSum = 0,\n      _aInSum = 0,\n      _rInSum = 0;\n    for (var _i4 = 1; _i4 <= radius; _i4++) {\n      yi = yp + _x << 2;\n      var _rbs = radiusPlus1 - _i4;\n      _rSum += (stack.r = _pr = pixels[yi]) * _rbs;\n      _gSum += (stack.g = _pg = pixels[yi + 1]) * _rbs;\n      _bSum += (stack.b = _pb = pixels[yi + 2]) * _rbs;\n      _aSum += (stack.a = _pa = pixels[yi + 3]) * _rbs;\n      _rInSum += _pr;\n      _gInSum += _pg;\n      _bInSum += _pb;\n      _aInSum += _pa;\n      stack = stack.next;\n      if (_i4 < heightMinus1) {\n        yp += width;\n      }\n    }\n    yi = _x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (var _y = 0; _y < height; _y++) {\n      var _p2 = yi << 2;\n      pixels[_p2 + 3] = _pa = _aSum * mulSum >>> shgSum;\n      if (_pa > 0) {\n        _pa = 255 / _pa;\n        pixels[_p2] = (_rSum * mulSum >>> shgSum) * _pa;\n        pixels[_p2 + 1] = (_gSum * mulSum >>> shgSum) * _pa;\n        pixels[_p2 + 2] = (_bSum * mulSum >>> shgSum) * _pa;\n      } else {\n        pixels[_p2] = pixels[_p2 + 1] = pixels[_p2 + 2] = 0;\n      }\n      _rSum -= _rOutSum;\n      _gSum -= _gOutSum;\n      _bSum -= _bOutSum;\n      _aSum -= _aOutSum;\n      _rOutSum -= stackIn.r;\n      _gOutSum -= stackIn.g;\n      _bOutSum -= stackIn.b;\n      _aOutSum -= stackIn.a;\n      _p2 = _x + ((_p2 = _y + radiusPlus1) < heightMinus1 ? _p2 : heightMinus1) * width << 2;\n      _rSum += _rInSum += stackIn.r = pixels[_p2];\n      _gSum += _gInSum += stackIn.g = pixels[_p2 + 1];\n      _bSum += _bInSum += stackIn.b = pixels[_p2 + 2];\n      _aSum += _aInSum += stackIn.a = pixels[_p2 + 3];\n      stackIn = stackIn.next;\n      _rOutSum += _pr = stackOut.r;\n      _gOutSum += _pg = stackOut.g;\n      _bOutSum += _pb = stackOut.b;\n      _aOutSum += _pa = stackOut.a;\n      _rInSum -= _pr;\n      _gInSum -= _pg;\n      _bInSum -= _pb;\n      _aInSum -= _pa;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n  return imageData;\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\nfunction processCanvasRGB(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGB(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\nfunction processImageDataRGB(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n  for (var i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n  var p, rbs;\n  var yw = 0,\n    yi = 0;\n  for (var y = 0; y < height; y++) {\n    var pr = pixels[yi],\n      pg = pixels[yi + 1],\n      pb = pixels[yi + 2],\n      rOutSum = radiusPlus1 * pr,\n      gOutSum = radiusPlus1 * pg,\n      bOutSum = radiusPlus1 * pb,\n      rSum = sumFactor * pr,\n      gSum = sumFactor * pg,\n      bSum = sumFactor * pb;\n    stack = stackStart;\n    for (var _i5 = 0; _i5 < radiusPlus1; _i5++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n    var rInSum = 0,\n      gInSum = 0,\n      bInSum = 0;\n    for (var _i6 = 1; _i6 < radiusPlus1; _i6++) {\n      p = yi + ((widthMinus1 < _i6 ? widthMinus1 : _i6) << 2);\n      rSum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - _i6);\n      gSum += (stack.g = pg = pixels[p + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[p + 2]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      stack = stack.next;\n    }\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (var x = 0; x < width; x++) {\n      pixels[yi] = rSum * mulSum >>> shgSum;\n      pixels[yi + 1] = gSum * mulSum >>> shgSum;\n      pixels[yi + 2] = bSum * mulSum >>> shgSum;\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[p];\n      gInSum += stackIn.g = pixels[p + 1];\n      bInSum += stackIn.b = pixels[p + 2];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n    yw += width;\n  }\n  for (var _x2 = 0; _x2 < width; _x2++) {\n    yi = _x2 << 2;\n    var _pr2 = pixels[yi],\n      _pg2 = pixels[yi + 1],\n      _pb2 = pixels[yi + 2],\n      _rOutSum2 = radiusPlus1 * _pr2,\n      _gOutSum2 = radiusPlus1 * _pg2,\n      _bOutSum2 = radiusPlus1 * _pb2,\n      _rSum2 = sumFactor * _pr2,\n      _gSum2 = sumFactor * _pg2,\n      _bSum2 = sumFactor * _pb2;\n    stack = stackStart;\n    for (var _i7 = 0; _i7 < radiusPlus1; _i7++) {\n      stack.r = _pr2;\n      stack.g = _pg2;\n      stack.b = _pb2;\n      stack = stack.next;\n    }\n    var _rInSum2 = 0,\n      _gInSum2 = 0,\n      _bInSum2 = 0;\n    for (var _i8 = 1, yp = width; _i8 <= radius; _i8++) {\n      yi = yp + _x2 << 2;\n      _rSum2 += (stack.r = _pr2 = pixels[yi]) * (rbs = radiusPlus1 - _i8);\n      _gSum2 += (stack.g = _pg2 = pixels[yi + 1]) * rbs;\n      _bSum2 += (stack.b = _pb2 = pixels[yi + 2]) * rbs;\n      _rInSum2 += _pr2;\n      _gInSum2 += _pg2;\n      _bInSum2 += _pb2;\n      stack = stack.next;\n      if (_i8 < heightMinus1) {\n        yp += width;\n      }\n    }\n    yi = _x2;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (var _y2 = 0; _y2 < height; _y2++) {\n      p = yi << 2;\n      pixels[p] = _rSum2 * mulSum >>> shgSum;\n      pixels[p + 1] = _gSum2 * mulSum >>> shgSum;\n      pixels[p + 2] = _bSum2 * mulSum >>> shgSum;\n      _rSum2 -= _rOutSum2;\n      _gSum2 -= _gOutSum2;\n      _bSum2 -= _bOutSum2;\n      _rOutSum2 -= stackIn.r;\n      _gOutSum2 -= stackIn.g;\n      _bOutSum2 -= stackIn.b;\n      p = _x2 + ((p = _y2 + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      _rSum2 += _rInSum2 += stackIn.r = pixels[p];\n      _gSum2 += _gInSum2 += stackIn.g = pixels[p + 1];\n      _bSum2 += _bInSum2 += stackIn.b = pixels[p + 2];\n      stackIn = stackIn.next;\n      _rOutSum2 += _pr2 = stackOut.r;\n      _gOutSum2 += _pg2 = stackOut.g;\n      _bOutSum2 += _pb2 = stackOut.b;\n      _rInSum2 -= _pr2;\n      _gInSum2 -= _pg2;\n      _bInSum2 -= _pb2;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n  return imageData;\n}\n/**\n *\n */\n\nvar BlurStack =\n/**\n * Set properties.\n */\nfunction BlurStack() {\n  _classCallCheck(this, BlurStack);\n  this.r = 0;\n  this.g = 0;\n  this.b = 0;\n  this.a = 0;\n  this.next = null;\n};\nexport { BlurStack, processCanvasRGB as canvasRGB, processCanvasRGBA as canvasRGBA, processImage as image, processImageDataRGB as imageDataRGB, processImageDataRGBA as imageDataRGBA };"],"sourceRoot":""}