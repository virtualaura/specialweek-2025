{"version":3,"sources":["ScheduleDisplay.js","SpecialWeekTodos.js","App.js","index.js"],"names":["ScheduleDisplay","scheduleData","setScheduleData","useState","useEffect","groupedSchedule","day","start_time","end_time","event","location","reduce","acc","push","processedSchedule","Object","entries","map","_ref","events","getBlockColor","Team Work","Lunch","Gouter","Interviews & Box Lunch","Keynote","Hackathon","Pitch Event","React","createElement","className","_ref2","key","index","positionStyle","startTime","endTime","isHackathon","arguments","length","undefined","timeToMinutes","time","hours","minutes","split","Number","start","duration","height","top","Math","max","calculateHeight","style","getUniqueNames","tasks","names","Set","forEach","task","who","name","add","trim","cc","sort","SpecialWeekTodos","setTasks","schedule","setSchedule","filter","setFilter","setNames","showSchedule","setShowSchedule","async","response","fetch","process","text","Papa","parse","header","skipEmptyLines","delimiter","complete","result","formattedTasks","data","due_date","formatDate","a","b","Date","fetchTasks","formattedSchedule","row","date","end","formattedDate","find","blocks","fetchSchedule","dateStr","toLocaleDateString","year","month","filteredTasks","description","includes","status","isAssigned","isCCd","src","alt","onClick","Fragment","id","todo","disabled","type","checked","join","notes","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f1dac680.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './index.css';\nimport './SpecialWeek.css';\n\nconst ScheduleDisplay = () => {\n  const [scheduleData, setScheduleData] = useState([]);\n\n  useEffect(() => {\n    // Directly create the data structure\n    const rawData = [\n      { day: 'Tuesday', start_time: '08:40', end_time: '10:10', event: 'Presentation: Introduction & Planning', location: 'Auditoire' },\n      { day: 'Tuesday', start_time: '10:15', end_time: '10:45', event: 'Gouter', location: 'on-site' },\n      { day: 'Tuesday', start_time: '10:45', end_time: '11:15', event: 'Presentation: Problem Framing', location: 'Auditoire' },\n      { day: 'Tuesday', start_time: '11:15', end_time: '12:00', event: 'Team Work', location: 'on-site' },\n      { day: 'Tuesday', start_time: '12:00', end_time: '13:00', event: 'Lunch', location: 'Rosey cafeteria' },\n      { day: 'Tuesday', start_time: '13:00', end_time: '13:30', event: 'Presentation: User Feedback', location: 'Auditoire' },\n      { day: 'Tuesday', start_time: '13:30', end_time: '15:30', event: 'Team Work', location: 'on-site' },\n      { day: 'Wednesday', start_time: '08:40', end_time: '13:00', event: 'Interviews & Box Lunch', location: 'off-site' },\n      { day: 'Wednesday', start_time: '13:00', end_time: '13:45', event: 'Team Presentations: Problem Identification', location: 'on-site' },\n      { day: 'Wednesday', start_time: '13:45', end_time: '14:15', event: 'Presentation: Developing Solutions', location: 'Auditoire' },\n      { day: 'Wednesday', start_time: '14:15', end_time: '15:30', event: 'Team Work', location: 'on-site' },\n      { day: 'Tuesday', start_time: '08:40', end_time: '10:10', event: 'Introduction and Planning', location: 'Auditoire' },\n      { day: 'Thursday', start_time: '08:40', end_time: '09:10', event: 'Presentation: Solution Ideation & Prototyping', location: 'on-site' },\n      { day: 'Thursday', start_time: '09:10', end_time: '10:10', event: 'Team Work', location: 'on-site' },  \n      { day: 'Thursday', start_time: '10:10', end_time: '10:30', event: 'Gouter', location: 'on-site' },\n      { day: 'Thursday', start_time: '10:30', end_time: '12:00', event: 'Team Work', location: 'on-site' },\n      { day: 'Thursday', start_time: '12:00', end_time: '12:30', event: 'Presentation: Assessing Pitches', location: 'Auditoire' },\n      { day: 'Thursday', start_time: '12:30', end_time: '13:30', event: 'Lunch', location: 'Rosey cafeteria' },\n      { day: 'Thursday', start_time: '13:30', end_time: '16:30', event: 'Interviews', location: 'off-site' },\n      { day: 'Thursday', start_time: '16:30', end_time: '22:00', event: 'Hackathon', location: 'on-site' },\n      { day: 'Friday', start_time: '08:40', end_time: '09:10', event: 'Presentation: Pitch Development', location: 'Auditoire' },\n      { day: 'Friday', start_time: '09:10', end_time: '10:10', event: 'Team Work', location: 'on-site' },\n      { day: 'Friday', start_time: '10:10', end_time: '10:30', event: 'Gouter', location: 'on-site' },\n      { day: 'Friday', start_time: '14:00', end_time: '16:00', event: 'Pitch Event', location: 'Auditoire' }\n    ];\n\n    // Group by day\n    const groupedSchedule = rawData.reduce((acc, event) => {\n      if (!acc[event.day]) {\n        acc[event.day] = [];\n      }\n      acc[event.day].push(event);\n      return acc;\n    }, {});\n\n    // Convert to array \n    const processedSchedule = Object.entries(groupedSchedule)\n      .map(([day, events]) => ({ day, events }));\n\n    setScheduleData(processedSchedule);\n  }, []);\n\n  // Color mapping function\n  const getBlockColor = (event) => {\n    const colorMap = {\n      'Team Work': 'blue',\n      'Lunch': 'yellow',\n      'Gouter': 'yellow',\n      'Interviews & Box Lunch': 'green',\n      'Keynote': 'blue',\n      'Hackathon': 'red',\n      'Pitch Event': 'pitch-event'\n    };\n    return colorMap[event] || 'lightyellow';\n  };\n\n  // Convert time to pixel height with improved scaling\n  const calculateHeight = (startTime, endTime, isHackathon = false) => {\n    const timeToMinutes = (time) => {\n      const [hours, minutes] = time.split(':').map(Number);\n      return hours * 60 + minutes;\n    };\n\n    const start = timeToMinutes(startTime);\n    const end = timeToMinutes(endTime);\n    const duration = end - start;\n\n    // Special case for Hackathon - don't resize\n    if (isHackathon) {\n      return {\n        height: '3.5rem',\n        top: `${((start - 8.5 * 60) / 15) * 2}px`\n      };\n    }\n\n    // Base height for 30-minute blocks\n    const baseHeight = 25;\n    // Calculate height based on duration\n    const calculatedHeight = Math.max(\n      baseHeight,\n      (duration / 30) * baseHeight\n    );\n\n    return {\n      height: `${calculatedHeight}px`,\n      top: `${((start - 8.5 * 60) / 15) * 2}px`\n    };\n  };\n\n  return (\n    <div className=\"schedule-container\">\n      {scheduleData.map(({ day, events }) => (\n        <div key={day} className=\"schedule-day\">\n          <div className=\"schedule-day-name\">{day}</div>\n          <div className=\"schedule-bars\">\n            {events.map((event, index) => {\n              const positionStyle = calculateHeight(\n                event.start_time, \n                event.end_time, \n                event.event === 'Hackathon'\n              );\n              return (\n                <div \n                  key={index} \n                  className={`schedule-block ${getBlockColor(event.event)}`}\n                  style={positionStyle}\n                >\n                  <div className=\"block-content\">\n                    <div className=\"event-name\">\n                      {event.start_time} - {event.end_time} <strong>{event.event}</strong>\n                    </div>\n                    <div className=\"event-location\">{event.location}</div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ScheduleDisplay;","import React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport ScheduleDisplay from \"./ScheduleDisplay\";\n\n// Helper function to extract unique names from the 'who' and 'cc' fields\nconst getUniqueNames = (tasks) => {\n  const names = new Set();\n  tasks.forEach((task) => {\n    if (task.who) {\n      task.who.forEach((name) => names.add(name.trim()));\n    }\n    if (task.cc) {\n      task.cc.split(\";\").forEach((name) => names.add(name.trim()));\n    }\n  });\n  return [...names].sort(); // Sort names alphabetically\n};\n\nexport default function SpecialWeekTodos() {\n  const [tasks, setTasks] = useState([]);\n  const [schedule, setSchedule] = useState([]);\n  const [filter, setFilter] = useState(null);\n  const [names, setNames] = useState([]);\n  const [showSchedule, setShowSchedule] = useState(true);\n\n  useEffect(() => {\n    // Fetch and parse tasks CSV\n    async function fetchTasks() {\n      const response = await fetch(process.env.PUBLIC_URL + \"/tasks.csv\");\n      const text = await response.text();\n      Papa.parse(text, {\n        header: true,\n        skipEmptyLines: true,\n        delimiter: \",\",\n        complete: (result) => {\n          const formattedTasks = result.data.map((task) => ({\n            ...task,\n            who: task.who.split(\";\"),\n            due_date: formatDate(task.due_date),\n          }));\n          setTasks(formattedTasks.sort((a, b) => new Date(a.due_date) - new Date(b.due_date)));\n          setNames(getUniqueNames(formattedTasks));\n        },\n      });\n    }\n\n    // Fetch and parse schedule CSV\n    async function fetchSchedule() {\n      const response = await fetch(process.env.PUBLIC_URL + \"/schedule.csv\");\n      const text = await response.text();\n      Papa.parse(text, {\n        header: true,\n        skipEmptyLines: true,\n        delimiter: \",\",\n        complete: (result) => {\n          const formattedSchedule = result.data.reduce((acc, row) => {\n            const { date, time, start, end, event, location } = row;\n            const formattedDate = formatDate(date);\n            let day = acc.find((day) => day.date === formattedDate);\n            if (!day) {\n              day = { date: formattedDate, blocks: [] };\n              acc.push(day);\n            }\n            day.blocks.push({ time, start, end, event, location });\n            return acc;\n          }, []);\n          setSchedule(formattedSchedule);\n        },\n      });\n    }\n\n    fetchTasks();\n    fetchSchedule();\n  }, []);\n\n  // Helper function to format dates\n  const formatDate = (dateStr) => {\n    const date = new Date(dateStr);\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return date.toLocaleDateString('en-GB', options);\n  };\n\n  // Filter tasks based on the selected filter and special conditions\n  const filteredTasks = tasks.filter((task) => {\n    // Special case for TBD and done status tasks - only show for Laura\n    if ((task.description.includes('TBD') || task.status === 'done') && filter !== 'Laura') {\n      return false;\n    }\n\n    // If no filter is selected, show all tasks except TBD and done status\n    if (!filter) {\n      return !task.description.includes('TBD') && task.status !== 'done';\n    }\n\n    // Check if the task is assigned to or CC'd to the selected person\n    const isAssigned = task.who.includes(filter);\n    const isCCd = task.cc && task.cc.split(';').includes(filter);\n    return isAssigned || isCCd;\n  });\n\n  return (\n    <div className=\"p-4 max-w-7xl mx-auto\">\n      <div className=\"header-container\">\n        <img \n          src={process.env.PUBLIC_URL + \"/rosey-lineaire-quadri.png\"} \n          alt=\"Special Week Logo\" \n          className=\"header-image\"\n        />\n        <h1>Special Week 2025 - Schedule and To-Dos</h1>\n      </div>\n      <h4>\n        Welcome everyone! If you {\" \"}\n        <span \n          className=\"calendar-link\"\n          onClick={() => setShowSchedule(!showSchedule)}\n        >\n          click here\n        </span>{\" \"}\n        you will see the calendar for the week, which starts on Tuesday the 13th of May in the morning and finishes Friday the 16th of May in the afternoon. \n        <br/><br/>\n        Below the calendar are the to-dos that need to be completed for the week, and that is where I need your help 😊. By clicking on the button below the calendar that shows your name,\n        you'll see the information that is relevant for you - either because your feedback is needed (if your name is in the 👤 section), or on an FYI\n        basis (📢).\n      </h4>\n\n      {/* Schedule block */}\n      {showSchedule && (\n        <>\n          <div className=\"section-header\">\n            <h2>Schedule</h2>\n          </div>\n          <button \n            className=\"hide-calendar-btn\"\n            onClick={() => setShowSchedule(false)}\n          >\n            Hide Calendar\n          </button>\n          <div id=\"schedule-block\" className=\"my-6\">\n            <ScheduleDisplay schedule={schedule} />\n          </div>\n        </>\n      )}\n\n      {/* Dynamic Filter buttons */}\n      <div className=\"section-header\">\n        <h2>To-dos</h2>\n      </div>\n      <div className=\"mb-4\">\n        <button \n          className={`filter-button ${!filter ? 'active' : ''}`}\n          onClick={() => setFilter(null)}\n        >\n          All\n        </button>\n        {names.map((name) => (\n          <button\n            key={name}\n            className={`filter-button ${filter === name ? 'active' : ''}`}\n            onClick={() => setFilter(name)}\n          >\n            {name}\n          </button>\n        ))}\n      </div>\n\n      {/* Todo list in grid layout */}\n      <div className=\"todo-grid\">\n        {filteredTasks.map((todo) => (\n          <li key={todo.id} className=\"p-4 bg-white shadow-md rounded-lg border border-gray-200\">\n            <div className=\"flex items-center\">\n              <input\n                disabled\n                className=\"mr-3 h-5 w-5 text-blue-500 border-gray-300 rounded\"\n                type=\"checkbox\"\n                checked={todo.status === \"done\"}\n              />\n              <span className={`font-semibold text-lg ${todo.status === \"done\" ? \"line-through text-gray-400\" : \"text-gray-900\"}`}>\n                {todo.description}\n              </span>\n            </div>\n            <div className=\"mt-2 ml-8 text-gray-700 text-sm space-y-1\">\n              {filter === 'Laura' && (\n                <div className=\"todo-detail\">\n                  <span className=\"font-semibold text-gray-900\">📅</span> {todo.due_date}\n                </div>\n              )}\n              <div className=\"todo-detail\">\n                <span className=\"font-semibold text-gray-900\">👤</span> \n                {todo.who ? todo.who.join(\", \") : \"\"}\n              </div>\n              {todo.cc && (\n                <div className=\"todo-detail\">\n                  <span className=\"font-semibold text-gray-900\">📢 </span> {todo.cc ? todo.cc.split(\";\").join(\", \") : \"\"}\n                </div>\n              )}\n              {todo.notes && <div className=\"todo-detail italic text-gray-600\">📝 {todo.notes}</div>}\n            </div>\n          </li>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport SpecialWeekTodos from \"./SpecialWeekTodos\"; // Import the SpecialWeekTodos component\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div>\n      {/* Special Week Todos Component */}\n      <SpecialWeekTodos />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport './index.css';  //\nimport './SpecialWeek.css';  //\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}