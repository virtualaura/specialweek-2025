{"version":3,"sources":["special-week-todos.js","App.js","index.js"],"names":["TodoList","tasks","setTasks","useState","filter","setFilter","useEffect","async","response","fetch","process","text","Papa","parse","header","skipEmptyLines","delimiter","complete","result","data","map","task","who","split","fetchTasks","includes","React","createElement","className","onClick","class","todo","disabled","type","checked","status","description","due_date","join","cc","notes","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"yKAIe,SAASA,IACtB,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAQC,GAAaF,mBAAS,MAErCG,oBAAU,MACRC,iBACE,MAAMC,QAAiBC,MAAMC,+BACvBC,QAAaH,EAASG,OAC5BC,IAAKC,MAAMF,EAAM,CACfG,QAAQ,EACRC,gBAAgB,EAChBC,UAAW,IACXC,SAAWC,IACThB,EAASgB,EAAOC,KAAKC,IAAIC,IAAI,IACxBA,EACHC,IAAKD,EAAKC,IAAIC,MAAM,YAK5BC,IACC,IAEmBpB,GAASH,EAAMG,OAAOiB,GAAQA,EAAKC,IAAIG,SAASrB,IAEtE,OACEsB,IAAAC,cAAA,OAAKC,UAAU,wBACbF,IAAAC,cAAA,MAAIC,UAAU,0BAAyB,cACvCF,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,UAAQC,UAAU,gDAAgDC,QAASA,IAAMxB,EAAU,OAAO,OAClGqB,IAAAC,cAAA,UAAQC,UAAU,gDAAgDC,QAASA,IAAMxB,EAAU,QAAQ,OACnGqB,IAAAC,cAAA,UAAQC,UAAU,2CAA2CC,QAASA,IAAMxB,EAAU,UAAU,UAElGqB,IAAAC,cAAA,MAAIG,MAAM,uBACb7B,EAAMmB,IAAKW,GACVL,IAAAC,cAAA,MAAIG,MAAM,4DACVJ,IAAAC,cAAA,OAAKG,MAAM,qBACTJ,IAAAC,cAAA,SACEK,UAAQ,EACRF,MAAM,qDACNG,KAAK,WACLC,QAAyB,SAAhBH,EAAKI,SAEhBT,IAAAC,cAAA,OAAKG,+BAAgD,SAAhBC,EAAKI,OAAoB,6BAA+B,mBAC1FJ,EAAKK,cAGVV,IAAAC,cAAA,OAAKG,MAAM,6CACTJ,IAAAC,cAAA,WAAKD,IAAAC,cAAA,QAAMG,MAAM,+BAA8B,0BAAmB,IAAEC,EAAKM,UACzEX,IAAAC,cAAA,WACED,IAAAC,cAAA,QAAMG,MAAM,+BAA8B,qBAAc,IAAEC,EAAKT,IAAIC,MAAM,KAAKe,KAAK,OAEpFP,EAAKQ,IAAMb,IAAAC,cAAA,WAAKD,IAAAC,cAAA,QAAMG,MAAM,+BAA8B,0BAAmB,IAAEC,EAAKQ,IACpFR,EAAKS,OAASd,IAAAC,cAAA,OAAKG,MAAM,wBAAuB,gBAAIC,EAAKS,kBC7CjDC,MARf,WACE,OACEf,IAAAC,cAAA,WACED,IAAAC,cAAC3B,EAAQ,QCHF0C,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAOpB,IAAAC,cAACc,EAAG","file":"static/js/main.05f555b9.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\n\nexport default function TodoList() {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState(null);\n\n  useEffect(() => {\n    async function fetchTasks() {\n      const response = await fetch(process.env.PUBLIC_URL + \"/tasks.csv\");\n      const text = await response.text();\n      Papa.parse(text, {\n        header: true,\n        skipEmptyLines: true,\n        delimiter: \",\",\n        complete: (result) => {\n          setTasks(result.data.map(task => ({\n            ...task,\n            who: task.who.split(\";\")\n          })));\n        }\n      });\n    }\n    fetchTasks();\n  }, []);\n\n  const filteredTasks = filter ? tasks.filter(task => task.who.includes(filter)) : tasks;\n\n  return (\n    <div className=\"p-4 max-w-lg mx-auto\">\n      <h1 className=\"text-xl font-bold mb-4\">To-Do List</h1>\n      <div className=\"mb-4\">\n        <button className=\"mr-2 px-3 py-1 bg-blue-500 text-white rounded\" onClick={() => setFilter(null)}>All</button>\n        <button className=\"mr-2 px-3 py-1 bg-gray-500 text-white rounded\" onClick={() => setFilter(\"Kim\")}>Kim</button>\n        <button className=\"px-3 py-1 bg-gray-500 text-white rounded\" onClick={() => setFilter(\"Julia\")}>Julia</button>\n      </div>\n      <ul class=\"list-none space-y-4\">\n  {tasks.map((todo) => (\n    <li class=\"p-4 bg-white shadow-md rounded-lg border border-gray-200\">\n    <div class=\"flex items-center\">\n      <input \n        disabled \n        class=\"mr-3 h-5 w-5 text-blue-500 border-gray-300 rounded\" \n        type=\"checkbox\" \n        checked={todo.status === \"done\"} \n      />\n      <div class={`font-semibold text-lg ${todo.status === \"done\" ? \"line-through text-gray-400\" : \"text-gray-900\"}`}>\n        {todo.description}\n      </div>\n    </div>\n    <div class=\"mt-2 ml-8 text-gray-700 text-sm space-y-1\">\n      <div><span class=\"font-semibold text-gray-900\">üìÖ Due Date:</span> {todo.due_date}</div>\n      <div>\n        <span class=\"font-semibold text-gray-900\">üë§ Who:</span> {todo.who.split(\";\").join(\", \")}\n      </div>\n      {todo.cc && <div><span class=\"font-semibold text-gray-900\">üì¢ For Info:</span> {todo.cc}</div>}\n      {todo.notes && <div class=\"italic text-gray-600\">üìù {todo.notes}</div>}\n    </div>\n  </li>\n  ))}\n</ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport TodoList from \"./special-week-todos.js\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}